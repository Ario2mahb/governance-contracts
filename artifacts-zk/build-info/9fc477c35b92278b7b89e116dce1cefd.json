{
  "id": "9fc477c35b92278b7b89e116dce1cefd",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "zkVM-0.5.16-1.0.1",
  "solcLongVersion": "zkVM-0.5.16-1.0.1",
  "input": {
    "language": "Solidity",
    "sources": {
      "@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol": {
        "content": "// SPDX-License-Identifier: BSD-3-Clause\npragma solidity ^0.5.16;\npragma experimental ABIEncoderV2;\n\n/**\n * @title IPrime\n * @author Venus\n * @notice Interface for Prime Token\n */\ninterface IPrime {\n    /**\n     * @notice Executed by XVSVault whenever user's XVSVault balance changes\n     * @param user the account address whose balance was updated\n     */\n    function xvsUpdated(address user) external;\n\n    /**\n     * @notice accrues interest and updates score for an user for a specific market\n     * @param user the account address for which to accrue interest and update score\n     * @param market the market for which to accrue interest and update score\n     */\n    function accrueInterestAndUpdateScore(address user, address market) external;\n\n    /**\n     * @notice Distributes income from market since last distribution\n     * @param vToken the market for which to distribute the income\n     */\n    function accrueInterest(address vToken) external;\n\n    /**\n     * @notice Returns if user is a prime holder\n     * @param isPrimeHolder returns if the user is a prime holder\n     */\n    function isUserPrimeHolder(address user) external view returns (bool isPrimeHolder);\n}\n"
      },
      "@venusprotocol/venus-protocol/contracts/Utils/Address.sol": {
        "content": "pragma solidity ^0.5.5;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            codehash := extcodehash(account)\n        }\n        return (codehash != accountHash && codehash != 0x0);\n    }\n\n    /**\n     * @dev Converts an `address` into `address payable`. Note that this is\n     * simply a type cast: the actual underlying value is not changed.\n     *\n     * _Available since v2.4.0._\n     */\n    function toPayable(address account) internal pure returns (address payable) {\n        return address(uint160(account));\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     *\n     * _Available since v2.4.0._\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-call-value\n        // solium-disable-next-line security/no-call-value\n        (bool success, ) = recipient.call.value(amount)(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n}\n"
      },
      "@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol": {
        "content": "pragma solidity ^0.5.0;\n\n/**\n * @dev Interface of the BEP20 standard as defined in the EIP. Does not include\n * the optional functions; to access them see {BEP20Detailed}.\n */\ninterface IBEP20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@venusprotocol/venus-protocol/contracts/Utils/SafeBEP20.sol": {
        "content": "pragma solidity ^0.5.0;\n\nimport \"./SafeMath.sol\";\nimport \"./IBEP20.sol\";\nimport \"./Address.sol\";\n\n/**\n * @title SafeBEP20\n * @dev Wrappers around BEP20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeBEP20 for BEP20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeBEP20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IBEP20 token, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IBEP20 token, address from, address to, uint256 value) internal {\n        callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    function safeApprove(IBEP20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeBEP20: approve from non-zero to non-zero allowance\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IBEP20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(\n            value,\n            \"SafeBEP20: decreased allowance below zero\"\n        );\n        callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function callOptionalReturn(IBEP20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves.\n\n        // A Solidity high level call has three parts:\n        //  1. The target address is checked to verify it contains contract code\n        //  2. The call itself is made, and success asserted\n        //  3. The return value is decoded, which in turn checks the size of the returned data.\n        // solhint-disable-next-line max-line-length\n        require(address(token).isContract(), \"SafeBEP20: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = address(token).call(data);\n        require(success, \"SafeBEP20: low-level call failed\");\n\n        if (returndata.length > 0) {\n            // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeBEP20: BEP20 operation did not succeed\");\n        }\n    }\n}\n"
      },
      "@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol": {
        "content": "pragma solidity ^0.5.16;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return add(a, b, \"SafeMath: addition overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function add(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, errorMessage);\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        // Solidity only automatically asserts when dividing by 0\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}\n"
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol": {
        "content": "pragma solidity 0.5.16;\nimport \"../Utils/SafeBEP20.sol\";\nimport \"../Utils/IBEP20.sol\";\n\n/**\n * @title XVS Store\n * @author Venus\n * @notice XVS Store responsible for distributing XVS rewards\n */\ncontract XVSStore {\n    using SafeMath for uint256;\n    using SafeBEP20 for IBEP20;\n\n    /// @notice The Admin Address\n    address public admin;\n\n    /// @notice The pending admin address\n    address public pendingAdmin;\n\n    /// @notice The Owner Address\n    address public owner;\n\n    /// @notice The reward tokens\n    mapping(address => bool) public rewardTokens;\n\n    /// @notice Emitted when pendingAdmin is changed\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\n\n    /// @notice Event emitted when admin changed\n    event AdminTransferred(address indexed oldAdmin, address indexed newAdmin);\n\n    /// @notice Event emitted when owner changed\n    event OwnerTransferred(address indexed oldOwner, address indexed newOwner);\n\n    constructor() public {\n        admin = msg.sender;\n    }\n\n    modifier onlyAdmin() {\n        require(msg.sender == admin, \"only admin can\");\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"only owner can\");\n        _;\n    }\n\n    /**\n     * @notice Safely transfer rewards. Only active reward tokens can be sent using this function.\n     * Only callable by owner\n     * @dev Safe reward token transfer function, just in case if rounding error causes pool to not have enough tokens.\n     * @param token Reward token to transfer\n     * @param _to Destination address of the reward\n     * @param _amount Amount to transfer\n     */\n    function safeRewardTransfer(address token, address _to, uint256 _amount) external onlyOwner {\n        require(rewardTokens[token] == true, \"only reward token can\");\n\n        if (address(token) != address(0)) {\n            uint256 tokenBalance = IBEP20(token).balanceOf(address(this));\n            if (_amount > tokenBalance) {\n                IBEP20(token).safeTransfer(_to, tokenBalance);\n            } else {\n                IBEP20(token).safeTransfer(_to, _amount);\n            }\n        }\n    }\n\n    /**\n     * @notice Allows the admin to propose a new admin\n     * Only callable admin\n     * @param _admin Propose an account as admin of the XVS store\n     */\n    function setPendingAdmin(address _admin) external onlyAdmin {\n        address oldPendingAdmin = pendingAdmin;\n        pendingAdmin = _admin;\n        emit NewPendingAdmin(oldPendingAdmin, _admin);\n    }\n\n    /**\n     * @notice Allows an account that is pending as admin to accept the role\n     * nly calllable by the pending admin\n     */\n    function acceptAdmin() external {\n        require(msg.sender == pendingAdmin, \"only pending admin\");\n        address oldAdmin = admin;\n        address oldPendingAdmin = pendingAdmin;\n\n        admin = pendingAdmin;\n        pendingAdmin = address(0);\n\n        emit NewPendingAdmin(oldPendingAdmin, pendingAdmin);\n        emit AdminTransferred(oldAdmin, admin);\n    }\n\n    /**\n     * @notice Set the contract owner\n     * @param _owner The address of the owner to set\n     * Only callable admin\n     */\n    function setNewOwner(address _owner) external onlyAdmin {\n        require(_owner != address(0), \"new owner is the zero address\");\n        address oldOwner = owner;\n        owner = _owner;\n        emit OwnerTransferred(oldOwner, _owner);\n    }\n\n    /**\n     * @notice Set or disable a reward token\n     * @param _tokenAddress The address of a token to set as active or inactive\n     * @param status Set whether a reward token is active or not\n     */\n    function setRewardToken(address _tokenAddress, bool status) external {\n        require(msg.sender == admin || msg.sender == owner, \"only admin or owner can\");\n        rewardTokens[_tokenAddress] = status;\n    }\n\n    /**\n     * @notice Security function to allow the owner of the contract to withdraw from the contract\n     * @param _tokenAddress Reward token address to withdraw\n     * @param _amount Amount of token to withdraw\n     */\n    function emergencyRewardWithdraw(address _tokenAddress, uint256 _amount) external onlyOwner {\n        IBEP20(_tokenAddress).safeTransfer(address(msg.sender), _amount);\n    }\n}\n"
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol": {
        "content": "pragma solidity ^0.5.16;\n\ncontract XVSVaultErrorReporter {\n    enum Error {\n        NO_ERROR,\n        UNAUTHORIZED\n    }\n\n    enum FailureInfo {\n        ACCEPT_ADMIN_PENDING_ADMIN_CHECK,\n        ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK,\n        SET_PENDING_ADMIN_OWNER_CHECK,\n        SET_PENDING_IMPLEMENTATION_OWNER_CHECK\n    }\n\n    /**\n     * @dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\n     * contract-specific code that enables us to report opaque error codes from upgradeable contracts.\n     **/\n    event Failure(uint error, uint info, uint detail);\n\n    /**\n     * @dev use this when reporting a known error from the money market or a non-upgradeable collaborator\n     */\n    function fail(Error err, FailureInfo info) internal returns (uint) {\n        emit Failure(uint(err), uint(info), 0);\n\n        return uint(err);\n    }\n\n    /**\n     * @dev use this when reporting an opaque error from an upgradeable collaborator contract\n     */\n    function failOpaque(Error err, FailureInfo info, uint opaqueError) internal returns (uint) {\n        emit Failure(uint(err), uint(info), opaqueError);\n\n        return uint(err);\n    }\n}\n"
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol": {
        "content": "pragma solidity ^0.5.16;\n\nimport \"./XVSVaultStorage.sol\";\nimport \"./XVSVaultErrorReporter.sol\";\n\n/**\n * @title XVS Vault Proxy\n * @author Venus\n * @notice XVS Vault Proxy contract\n */\ncontract XVSVaultProxy is XVSVaultAdminStorage, XVSVaultErrorReporter {\n    /**\n     * @notice Emitted when pendingXVSVaultImplementation is changed\n     */\n    event NewPendingImplementation(address oldPendingImplementation, address newPendingImplementation);\n\n    /**\n     * @notice Emitted when pendingXVSVaultImplementation is accepted, which means XVS Vault implementation is updated\n     */\n    event NewImplementation(address oldImplementation, address newImplementation);\n\n    /**\n     * @notice Emitted when pendingAdmin is changed\n     */\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\n\n    /**\n     * @notice Emitted when pendingAdmin is accepted, which means admin is updated\n     */\n    event NewAdmin(address oldAdmin, address newAdmin);\n\n    constructor() public {\n        // Set admin to caller\n        admin = msg.sender;\n    }\n\n    /*** Admin Functions ***/\n    function _setPendingImplementation(address newPendingImplementation) public returns (uint) {\n        if (msg.sender != admin) {\n            return fail(Error.UNAUTHORIZED, FailureInfo.SET_PENDING_IMPLEMENTATION_OWNER_CHECK);\n        }\n\n        address oldPendingImplementation = pendingXVSVaultImplementation;\n\n        pendingXVSVaultImplementation = newPendingImplementation;\n\n        emit NewPendingImplementation(oldPendingImplementation, pendingXVSVaultImplementation);\n\n        return uint(Error.NO_ERROR);\n    }\n\n    /**\n     * @notice Accepts new implementation of XVS Vault. msg.sender must be pendingImplementation\n     * @dev Admin function for new implementation to accept it's role as implementation\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function _acceptImplementation() public returns (uint) {\n        // Check caller is pendingImplementation\n        if (msg.sender != pendingXVSVaultImplementation) {\n            return fail(Error.UNAUTHORIZED, FailureInfo.ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK);\n        }\n\n        // Save current values for inclusion in log\n        address oldImplementation = implementation;\n        address oldPendingImplementation = pendingXVSVaultImplementation;\n\n        implementation = pendingXVSVaultImplementation;\n\n        pendingXVSVaultImplementation = address(0);\n\n        emit NewImplementation(oldImplementation, implementation);\n        emit NewPendingImplementation(oldPendingImplementation, pendingXVSVaultImplementation);\n\n        return uint(Error.NO_ERROR);\n    }\n\n    /**\n     * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\n     * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\n     * @param newPendingAdmin New pending admin.\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function _setPendingAdmin(address newPendingAdmin) public returns (uint) {\n        // Check caller = admin\n        if (msg.sender != admin) {\n            return fail(Error.UNAUTHORIZED, FailureInfo.SET_PENDING_ADMIN_OWNER_CHECK);\n        }\n\n        // Save current value, if any, for inclusion in log\n        address oldPendingAdmin = pendingAdmin;\n\n        // Store pendingAdmin with value newPendingAdmin\n        pendingAdmin = newPendingAdmin;\n\n        // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin)\n        emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\n\n        return uint(Error.NO_ERROR);\n    }\n\n    /**\n     * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\n     * @dev Admin function for pending admin to accept role and update admin\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\n     */\n    function _acceptAdmin() public returns (uint) {\n        // Check caller is pendingAdmin\n        if (msg.sender != pendingAdmin) {\n            return fail(Error.UNAUTHORIZED, FailureInfo.ACCEPT_ADMIN_PENDING_ADMIN_CHECK);\n        }\n\n        // Save current values for inclusion in log\n        address oldAdmin = admin;\n        address oldPendingAdmin = pendingAdmin;\n\n        // Store admin with value pendingAdmin\n        admin = pendingAdmin;\n\n        // Clear the pending value\n        pendingAdmin = address(0);\n\n        emit NewAdmin(oldAdmin, admin);\n        emit NewPendingAdmin(oldPendingAdmin, pendingAdmin);\n\n        return uint(Error.NO_ERROR);\n    }\n\n    /**\n     * @dev Delegates execution to an implementation contract.\n     * It returns to the external caller whatever the implementation returns\n     * or forwards reverts.\n     */\n    function() external payable {\n        // delegate all other functions to current implementation\n        (bool success, ) = implementation.delegatecall(msg.data);\n\n        assembly {\n            let free_mem_ptr := mload(0x40)\n            returndatacopy(free_mem_ptr, 0, returndatasize)\n\n            switch success\n            case 0 {\n                revert(free_mem_ptr, returndatasize)\n            }\n            default {\n                return(free_mem_ptr, returndatasize)\n            }\n        }\n    }\n}\n"
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol": {
        "content": "pragma solidity ^0.5.16;\n\nimport \"../Utils/SafeMath.sol\";\nimport \"../Utils/IBEP20.sol\";\nimport \"../Tokens/Prime/IPrime.sol\";\n\ncontract XVSVaultAdminStorage {\n    /**\n     * @notice Administrator for this contract\n     */\n    address public admin;\n\n    /**\n     * @notice Pending administrator for this contract\n     */\n    address public pendingAdmin;\n\n    /**\n     * @notice Active brains of XVS Vault\n     */\n    address public implementation;\n\n    /**\n     * @notice Pending brains of XVS Vault\n     */\n    address public pendingXVSVaultImplementation;\n}\n\ncontract XVSVaultStorageV1 is XVSVaultAdminStorage {\n    /// @notice Guard variable for re-entrancy checks\n    bool internal _notEntered;\n\n    /// @notice The reward token store\n    address public xvsStore;\n\n    /// @notice The xvs token address\n    address public xvsAddress;\n\n    // Reward tokens created per block or second indentified by reward token address.\n    mapping(address => uint256) public rewardTokenAmountsPerBlockOrSecond;\n\n    /// @notice Info of each user.\n    struct UserInfo {\n        uint256 amount;\n        uint256 rewardDebt;\n        uint256 pendingWithdrawals;\n    }\n\n    // Info of each pool.\n    struct PoolInfo {\n        IBEP20 token; // Address of token contract to stake.\n        uint256 allocPoint; // How many allocation points assigned to this pool.\n        uint256 lastRewardBlockOrSecond; // Last block number or second that reward tokens distribution occurs.\n        uint256 accRewardPerShare; // Accumulated per share, times 1e12. See below.\n        uint256 lockPeriod; // Min time between withdrawal request and its execution.\n    }\n\n    // Infomation about a withdrawal request\n    struct WithdrawalRequest {\n        uint256 amount;\n        uint128 lockedUntil;\n        uint128 afterUpgrade;\n    }\n\n    // Info of each user that stakes tokens.\n    mapping(address => mapping(uint256 => mapping(address => UserInfo))) internal userInfos;\n\n    // Info of each pool.\n    mapping(address => PoolInfo[]) public poolInfos;\n\n    // Total allocation points. Must be the sum of all allocation points in all pools.\n    mapping(address => uint256) public totalAllocPoints;\n\n    // Info of requested but not yet executed withdrawals\n    mapping(address => mapping(uint256 => mapping(address => WithdrawalRequest[]))) internal withdrawalRequests;\n\n    /// @notice DEPRECATED A record of each accounts delegate (before the voting power fix)\n    mapping(address => address) private __oldDelegatesSlot;\n\n    /// @notice A checkpoint for marking number of votes from a given block or second\n    struct Checkpoint {\n        uint32 fromBlockOrSecond;\n        uint96 votes;\n    }\n\n    /// @notice DEPRECATED A record of votes checkpoints for each account, by index (before the voting power fix)\n    mapping(address => mapping(uint32 => Checkpoint)) private __oldCheckpointsSlot;\n\n    /// @notice DEPRECATED The number of checkpoints for each account (before the voting power fix)\n    mapping(address => uint32) private __oldNumCheckpointsSlot;\n\n    /// @notice A record of states for signing / validating signatures\n    mapping(address => uint) public nonces;\n\n    /// @notice The EIP-712 typehash for the contract's domain\n    bytes32 public constant DOMAIN_TYPEHASH =\n        keccak256(\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\");\n\n    /// @notice The EIP-712 typehash for the delegation struct used by the contract\n    bytes32 public constant DELEGATION_TYPEHASH =\n        keccak256(\"Delegation(address delegatee,uint256 nonce,uint256 expiry)\");\n}\n\ncontract XVSVaultStorage is XVSVaultStorageV1 {\n    /// @notice A record of each accounts delegate\n    mapping(address => address) public delegates;\n\n    /// @notice A record of votes checkpoints for each account, by index\n    mapping(address => mapping(uint32 => Checkpoint)) public checkpoints;\n\n    /// @notice The number of checkpoints for each account\n    mapping(address => uint32) public numCheckpoints;\n\n    /// @notice Tracks pending withdrawals for all users for a particular reward token and pool id\n    mapping(address => mapping(uint256 => uint256)) internal totalPendingWithdrawals;\n\n    /// @notice pause indicator for Vault\n    bool public vaultPaused;\n\n    /// @notice if the token is added to any of the pools\n    mapping(address => bool) public isStakedToken;\n\n    /// @notice Amount we owe to users because of failed transfer attempts\n    mapping(address => mapping(address => uint256)) public pendingRewardTransfers;\n\n    /// @notice Prime token contract address\n    IPrime public primeToken;\n\n    /// @notice Reward token for which prime token is issued for staking\n    address public primeRewardToken;\n\n    /// @notice Pool ID for which prime token is issued for staking\n    uint256 public primePoolId;\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[46] private __gap;\n}\n"
      },
      "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >0.0.0;\nimport '@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol';\n"
      },
      "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >0.0.0;\nimport '@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol';\n"
      },
      "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >0.0.0;\nimport '@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol';\n"
      },
      "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity >0.0.0;\nimport '@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol';\n"
      }
    },
    "settings": {
      "optimizer": { "enabled": true, "mode": "3" },
      "outputSelection": {
        "*": { "*": ["storageLayout", "abi", "evm.methodIdentifiers", "metadata", "devdoc", "userdoc"], "": ["ast"] }
      },
      "forceEVMLA": false,
      "detectMissingLibraries": false,
      "enableEraVMExtensions": false,
      "libraries": {}
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "formattedMessage": "@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol:3:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.\npragma experimental ABIEncoderV2;\n^-------------------------------^\n",
        "message": "Experimental features are turned on. Do not use experimental features on live deployments.",
        "severity": "warning",
        "sourceLocation": {
          "file": "@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol",
          "start": 66,
          "end": 99
        },
        "type": "Warning"
      }
    ],
    "version": "0.5.16",
    "long_version": "0.5.16+commit.b9534989.Linux.clang",
    "zk_version": "1.5.1",
    "sources": {
      "@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol": {
        "id": 0,
        "ast": {
          "absolutePath": "@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol",
          "exportedSymbols": { "IPrime": [27] },
          "id": 28,
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 1, "literals": ["solidity", "^", "0.5", ".16"], "nodeType": "PragmaDirective", "src": "41:24:0" },
            { "id": 2, "literals": ["experimental", "ABIEncoderV2"], "nodeType": "PragmaDirective", "src": "66:33:0" },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": "@title IPrime\n@author Venus\n@notice Interface for Prime Token",
              "fullyImplemented": false,
              "id": 27,
              "linearizedBaseContracts": [27],
              "name": "IPrime",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": "@notice Executed by XVSVault whenever user's XVSVault balance changes\n@param user the account address whose balance was updated",
                  "id": 7,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "xvsUpdated",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 5,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 4,
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 7,
                        "src": "381:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 3,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "381:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "380:14:0"
                  },
                  "returnParameters": { "id": 6, "nodeType": "ParameterList", "parameters": [], "src": "403:0:0" },
                  "scope": 27,
                  "src": "361:43:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@notice accrues interest and updates score for an user for a specific market\n@param user the account address for which to accrue interest and update score\n@param market the market for which to accrue interest and update score",
                  "id": 14,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "accrueInterestAndUpdateScore",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 9,
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 14,
                        "src": "711:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 8,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "711:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 11,
                        "name": "market",
                        "nodeType": "VariableDeclaration",
                        "scope": 14,
                        "src": "725:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "725:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "710:30:0"
                  },
                  "returnParameters": { "id": 13, "nodeType": "ParameterList", "parameters": [], "src": "749:0:0" },
                  "scope": 27,
                  "src": "673:77:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@notice Distributes income from market since last distribution\n@param vToken the market for which to distribute the income",
                  "id": 19,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "accrueInterest",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "name": "vToken",
                        "nodeType": "VariableDeclaration",
                        "scope": 19,
                        "src": "933:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "933:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "932:16:0"
                  },
                  "returnParameters": { "id": 18, "nodeType": "ParameterList", "parameters": [], "src": "957:0:0" },
                  "scope": 27,
                  "src": "909:49:0",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@notice Returns if user is a prime holder\n@param isPrimeHolder returns if the user is a prime holder",
                  "id": 26,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isUserPrimeHolder",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 21,
                        "name": "user",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "1122:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 20,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1122:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1121:14:0"
                  },
                  "returnParameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "name": "isPrimeHolder",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "1159:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "typeName": {
                          "id": 23,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1159:4:0",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1158:20:0"
                  },
                  "scope": 27,
                  "src": "1095:84:0",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 28,
              "src": "180:1001:0"
            }
          ],
          "src": "41:1141:0"
        }
      },
      "@venusprotocol/venus-protocol/contracts/Utils/Address.sol": {
        "id": 1,
        "ast": {
          "absolutePath": "@venusprotocol/venus-protocol/contracts/Utils/Address.sol",
          "exportedSymbols": { "Address": [102] },
          "id": 103,
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 29, "literals": ["solidity", "^", "0.5", ".5"], "nodeType": "PragmaDirective", "src": "0:23:1" },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": "@dev Collection of functions related to the address type",
              "fullyImplemented": true,
              "id": 102,
              "linearizedBaseContracts": [102],
              "name": "Address",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 53,
                    "nodeType": "Block",
                    "src": "751:564:1",
                    "statements": [
                      {
                        "assignments": [37],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 37,
                            "name": "codehash",
                            "nodeType": "VariableDeclaration",
                            "scope": 53,
                            "src": "1003:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                            "typeName": {
                              "id": 36,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1003:7:1",
                              "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 38,
                        "initialValue": null,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1003:16:1"
                      },
                      {
                        "assignments": [40],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 40,
                            "name": "accountHash",
                            "nodeType": "VariableDeclaration",
                            "scope": 53,
                            "src": "1029:19:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                            "typeName": {
                              "id": 39,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1029:7:1",
                              "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 42,
                        "initialValue": {
                          "argumentTypes": null,
                          "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                          "id": 41,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1051:66:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                            "typeString": "int_const 8947...(69 digits omitted)...1552"
                          },
                          "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1029:88:1"
                      },
                      {
                        "externalReferences": [
                          {
                            "account": {
                              "declaration": 31,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1230:7:1",
                              "valueSize": 1
                            }
                          },
                          {
                            "codehash": {
                              "declaration": 37,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "1206:8:1",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 43,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    codehash := extcodehash(account)\n}",
                        "src": "1183:65:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                              "id": 50,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                                "id": 46,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 44,
                                  "name": "codehash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "1265:8:1",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 45,
                                  "name": "accountHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40,
                                  "src": "1277:11:1",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                                },
                                "src": "1265:23:1",
                                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                                "id": 49,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 47,
                                  "name": "codehash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "1292:8:1",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "hexValue": "307830",
                                  "id": 48,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1304:3:1",
                                  "subdenomination": null,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0x0"
                                },
                                "src": "1292:15:1",
                                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                              },
                              "src": "1265:42:1",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            }
                          ],
                          "id": 51,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "1264:44:1",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "functionReturnParameters": 35,
                        "id": 52,
                        "nodeType": "Return",
                        "src": "1257:51:1"
                      }
                    ]
                  },
                  "documentation": "@dev Returns true if `account` is a contract.\n     * [IMPORTANT]\n====\nIt is unsafe to assume that an address for which this function returns\nfalse is an externally-owned account (EOA) and not a contract.\n     * Among others, `isContract` will return false for the following\ntypes of addresses:\n     *  - an externally-owned account\n - a contract in construction\n - an address where a contract will be created\n - an address where a contract lived, but was destroyed\n====",
                  "id": 54,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isContract",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 31,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "705:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 30,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "705:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "704:17:1"
                  },
                  "returnParameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "745:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "typeName": {
                          "id": 33,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "745:4:1",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "744:6:1"
                  },
                  "scope": 102,
                  "src": "685:630:1",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 67,
                    "nodeType": "Block",
                    "src": "1600:49:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 63,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 56,
                                  "src": "1633:7:1",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                                "id": 62,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1625:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint160_$",
                                  "typeString": "type(uint160)"
                                },
                                "typeName": "uint160"
                              },
                              "id": 64,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1625:16:1",
                              "typeDescriptions": { "typeIdentifier": "t_uint160", "typeString": "uint160" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_uint160", "typeString": "uint160" }],
                            "id": 61,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1617:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 65,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1617:25:1",
                          "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" }
                        },
                        "functionReturnParameters": 60,
                        "id": 66,
                        "nodeType": "Return",
                        "src": "1610:32:1"
                      }
                    ]
                  },
                  "documentation": "@dev Converts an `address` into `address payable`. Note that this is\nsimply a type cast: the actual underlying value is not changed.\n     * _Available since v2.4.0._",
                  "id": 68,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "toPayable",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 68,
                        "src": "1543:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 55,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1543:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1542:17:1"
                  },
                  "returnParameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 59,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 68,
                        "src": "1583:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" },
                        "typeName": {
                          "id": 58,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:15:1",
                          "stateMutability": "payable",
                          "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1582:17:1"
                  },
                  "scope": 102,
                  "src": "1524:125:1",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 100,
                    "nodeType": "Block",
                    "src": "2677:353:1",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              "id": 81,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 77,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1375,
                                      "src": "2703:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Address_$102",
                                        "typeString": "library Address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      { "typeIdentifier": "t_contract$_Address_$102", "typeString": "library Address" }
                                    ],
                                    "id": 76,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2695:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 78,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2695:13:1",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2695:21:1",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 80,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72,
                                "src": "2720:6:1",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "src": "2695:31:1",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
                              "id": 82,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2728:31:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              },
                              "value": "Address: insufficient balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
                                "typeString": "literal_string \"Address: insufficient balance\""
                              }
                            ],
                            "id": 75,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "2687:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2687:73:1",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 84,
                        "nodeType": "ExpressionStatement",
                        "src": "2687:73:1"
                      },
                      {
                        "assignments": [86, null],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 86,
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 100,
                            "src": "2885:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                            "typeName": {
                              "id": 85,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2885:4:1",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 94,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "",
                              "id": 92,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2932:2:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 90,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72,
                                "src": "2924:6:1",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }],
                              "expression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 87,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70,
                                  "src": "2903:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "id": 88,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "call",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2903:14:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2903:20:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_setvalue_pure$_t_uint256_$returns$_t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value_$",
                                "typeString": "function (uint256) pure returns (function (bytes memory) payable returns (bool,bytes memory))"
                              }
                            },
                            "id": 91,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2903:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2903:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2884:51:1"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 96,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 86,
                              "src": "2953:7:1",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
                              "id": 97,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2962:60:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              },
                              "value": "Address: unable to send value, recipient may have reverted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
                                "typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
                              }
                            ],
                            "id": 95,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "2945:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 98,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2945:78:1",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 99,
                        "nodeType": "ExpressionStatement",
                        "src": "2945:78:1"
                      }
                    ]
                  },
                  "documentation": "@dev Replacement for Solidity's `transfer`: sends `amount` wei to\n`recipient`, forwarding all available gas and reverting on errors.\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\nof certain opcodes, possibly making contracts go over the 2300 gas limit\nimposed by `transfer`, making them unable to receive funds via\n`transfer`. {sendValue} removes this limitation.\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     * IMPORTANT: because control is transferred to `recipient`, care must be\ntaken to not create reentrancy vulnerabilities. Consider using\n{ReentrancyGuard} or the\nhttps://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     * _Available since v2.4.0._",
                  "id": 101,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sendValue",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 73,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "2625:25:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" },
                        "typeName": {
                          "id": 69,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2625:15:1",
                          "stateMutability": "payable",
                          "typeDescriptions": { "typeIdentifier": "t_address_payable", "typeString": "address payable" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 72,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 101,
                        "src": "2652:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 71,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2652:7:1",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2624:43:1"
                  },
                  "returnParameters": { "id": 74, "nodeType": "ParameterList", "parameters": [], "src": "2677:0:1" },
                  "scope": 102,
                  "src": "2606:424:1",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 103,
              "src": "93:2939:1"
            }
          ],
          "src": "0:3033:1"
        }
      },
      "@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol": {
        "id": 2,
        "ast": {
          "absolutePath": "@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol",
          "exportedSymbols": { "IBEP20": [171] },
          "id": 172,
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 104, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "0:23:2" },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": "@dev Interface of the BEP20 standard as defined in the EIP. Does not include\nthe optional functions; to access them see {BEP20Detailed}.",
              "fullyImplemented": false,
              "id": 171,
              "linearizedBaseContracts": [171],
              "name": "IBEP20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": null,
                  "documentation": "@dev Returns the amount of tokens in existence.",
                  "id": 109,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nodeType": "FunctionDefinition",
                  "parameters": { "id": 105, "nodeType": "ParameterList", "parameters": [], "src": "290:2:2" },
                  "returnParameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 107,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 109,
                        "src": "316:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 106,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "316:7:2",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "315:9:2"
                  },
                  "scope": 171,
                  "src": "270:55:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@dev Returns the amount of tokens owned by `account`.",
                  "id": 116,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 112,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 111,
                        "name": "account",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "427:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 110,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "426:17:2"
                  },
                  "returnParameters": {
                    "id": 115,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 114,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 116,
                        "src": "467:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 113,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "467:7:2",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "466:9:2"
                  },
                  "scope": 171,
                  "src": "408:68:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@dev Moves `amount` tokens from the caller's account to `recipient`.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
                  "id": 125,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 118,
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "714:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 117,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "714:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 120,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "733:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 119,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "733:7:2",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "713:35:2"
                  },
                  "returnParameters": {
                    "id": 124,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 123,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 125,
                        "src": "767:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "typeName": {
                          "id": 122,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "767:4:2",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "766:6:2"
                  },
                  "scope": 171,
                  "src": "696:77:2",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@dev Returns the remaining number of tokens that `spender` will be\nallowed to spend on behalf of `owner` through {transferFrom}. This is\nzero by default.\n     * This value changes when {approve} or {transferFrom} are called.",
                  "id": 134,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 127,
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 134,
                        "src": "1067:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 126,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1067:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 129,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 134,
                        "src": "1082:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1082:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1066:32:2"
                  },
                  "returnParameters": {
                    "id": 133,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 132,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 134,
                        "src": "1122:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 131,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1122:7:2",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1121:9:2"
                  },
                  "scope": 171,
                  "src": "1048:83:2",
                  "stateMutability": "view",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\nthat someone may use both the old and the new allowance by unfortunate\ntransaction ordering. One possible solution to mitigate this race\ncondition is to first reduce the spender's allowance to 0 and set the\ndesired value afterwards:\nhttps://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     * Emits an {Approval} event.",
                  "id": 143,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 136,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "1801:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 135,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1801:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 138,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "1818:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1818:7:2",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1800:33:2"
                  },
                  "returnParameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 141,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 143,
                        "src": "1852:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "typeName": {
                          "id": 140,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1852:4:2",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1851:6:2"
                  },
                  "scope": 171,
                  "src": "1784:74:2",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": null,
                  "documentation": "@dev Moves `amount` tokens from `sender` to `recipient` using the\nallowance mechanism. `amount` is then deducted from the caller's\nallowance.\n     * Returns a boolean value indicating whether the operation succeeded.\n     * Emits a {Transfer} event.",
                  "id": 154,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 150,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 145,
                        "name": "sender",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "2187:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 144,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2187:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 147,
                        "name": "recipient",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "2203:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 146,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2203:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 149,
                        "name": "amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "2222:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 148,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2222:7:2",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2186:51:2"
                  },
                  "returnParameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 152,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 154,
                        "src": "2256:4:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "typeName": {
                          "id": 151,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2256:4:2",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2255:6:2"
                  },
                  "scope": 171,
                  "src": "2165:97:2",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": "@dev Emitted when `value` tokens are moved from one account (`from`) to\nanother (`to`).\n     * Note that `value` may be zero.",
                  "id": 162,
                  "name": "Transfer",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 161,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 156,
                        "indexed": true,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "2446:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 155,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2446:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 158,
                        "indexed": true,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "2468:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 157,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2468:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 160,
                        "indexed": false,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 162,
                        "src": "2488:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 159,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2488:7:2",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2445:57:2"
                  },
                  "src": "2431:72:2"
                },
                {
                  "anonymous": false,
                  "documentation": "@dev Emitted when the allowance of a `spender` for an `owner` is set by\na call to {approve}. `value` is the new allowance.",
                  "id": 170,
                  "name": "Approval",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 169,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 164,
                        "indexed": true,
                        "name": "owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "2677:21:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2677:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 166,
                        "indexed": true,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "2700:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 165,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2700:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 168,
                        "indexed": false,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 170,
                        "src": "2725:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 167,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:2",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2676:63:2"
                  },
                  "src": "2662:78:2"
                }
              ],
              "scope": 172,
              "src": "176:2566:2"
            }
          ],
          "src": "0:2743:2"
        }
      },
      "@venusprotocol/venus-protocol/contracts/Utils/SafeBEP20.sol": {
        "id": 3,
        "ast": {
          "absolutePath": "@venusprotocol/venus-protocol/contracts/Utils/SafeBEP20.sol",
          "exportedSymbols": { "SafeBEP20": [391] },
          "id": 392,
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 173, "literals": ["solidity", "^", "0.5", ".0"], "nodeType": "PragmaDirective", "src": "0:23:3" },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol",
              "file": "./SafeMath.sol",
              "id": 174,
              "nodeType": "ImportDirective",
              "scope": 392,
              "sourceUnit": 597,
              "src": "25:24:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol",
              "file": "./IBEP20.sol",
              "id": 175,
              "nodeType": "ImportDirective",
              "scope": 392,
              "sourceUnit": 172,
              "src": "50:22:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/Utils/Address.sol",
              "file": "./Address.sol",
              "id": 176,
              "nodeType": "ImportDirective",
              "scope": 392,
              "sourceUnit": 103,
              "src": "73:23:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": "@title SafeBEP20\n@dev Wrappers around BEP20 operations that throw on failure (when the token\ncontract returns false). Tokens that return no value (and instead revert or\nthrow on failure) are also supported, non-reverting calls are assumed to be\nsuccessful.\nTo use this library you can add a `using SafeBEP20 for BEP20;` statement to your contract,\nwhich allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
              "fullyImplemented": true,
              "id": 391,
              "linearizedBaseContracts": [391],
              "name": "SafeBEP20",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 179,
                  "libraryName": {
                    "contractScope": null,
                    "id": 177,
                    "name": "SafeMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 596,
                    "src": "585:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeMath_$596",
                      "typeString": "library SafeMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "579:27:3",
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:7:3",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  }
                },
                {
                  "id": 182,
                  "libraryName": {
                    "contractScope": null,
                    "id": 180,
                    "name": "Address",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 102,
                    "src": "617:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Address_$102",
                      "typeString": "library Address"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "611:26:3",
                  "typeName": {
                    "id": 181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  }
                },
                {
                  "body": {
                    "id": 203,
                    "nodeType": "Block",
                    "src": "715:102:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 192,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 184,
                              "src": "744:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBEP20_$171",
                                "typeString": "contract IBEP20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 195,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 184,
                                      "src": "774:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBEP20_$171",
                                        "typeString": "contract IBEP20"
                                      }
                                    },
                                    "id": 196,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 125,
                                    "src": "774:14:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 197,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "774:23:3",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 198,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 186,
                                  "src": "799:2:3",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 199,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 188,
                                  "src": "803:5:3",
                                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                                  { "typeIdentifier": "t_address", "typeString": "address" },
                                  { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 193,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1346,
                                  "src": "751:3:3",
                                  "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" }
                                },
                                "id": 194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "751:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "751:58:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_contract$_IBEP20_$171", "typeString": "contract IBEP20" },
                              { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                            ],
                            "id": 191,
                            "name": "callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "725:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$171_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IBEP20,bytes memory)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "725:85:3",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 202,
                        "nodeType": "ExpressionStatement",
                        "src": "725:85:3"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 204,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 189,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 184,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "665:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBEP20_$171",
                          "typeString": "contract IBEP20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 183,
                          "name": "IBEP20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 171,
                          "src": "665:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBEP20_$171",
                            "typeString": "contract IBEP20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 186,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "679:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "679:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 188,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 204,
                        "src": "691:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 187,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:7:3",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "664:41:3"
                  },
                  "returnParameters": { "id": 190, "nodeType": "ParameterList", "parameters": [], "src": "715:0:3" },
                  "scope": 391,
                  "src": "643:174:3",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 228,
                    "nodeType": "Block",
                    "src": "913:112:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 216,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 206,
                              "src": "942:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBEP20_$171",
                                "typeString": "contract IBEP20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 219,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 206,
                                      "src": "972:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBEP20_$171",
                                        "typeString": "contract IBEP20"
                                      }
                                    },
                                    "id": 220,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transferFrom",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 154,
                                    "src": "972:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 221,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "972:27:3",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 222,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 208,
                                  "src": "1001:4:3",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 223,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 210,
                                  "src": "1007:2:3",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 224,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 212,
                                  "src": "1011:5:3",
                                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                                  { "typeIdentifier": "t_address", "typeString": "address" },
                                  { "typeIdentifier": "t_address", "typeString": "address" },
                                  { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 217,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1346,
                                  "src": "949:3:3",
                                  "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" }
                                },
                                "id": 218,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "949:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 225,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "949:68:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_contract$_IBEP20_$171", "typeString": "contract IBEP20" },
                              { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                            ],
                            "id": 215,
                            "name": "callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "923:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$171_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IBEP20,bytes memory)"
                            }
                          },
                          "id": 226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "923:95:3",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 227,
                        "nodeType": "ExpressionStatement",
                        "src": "923:95:3"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 229,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeTransferFrom",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 206,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "849:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBEP20_$171",
                          "typeString": "contract IBEP20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 205,
                          "name": "IBEP20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 171,
                          "src": "849:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBEP20_$171",
                            "typeString": "contract IBEP20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 208,
                        "name": "from",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "863:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 207,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "863:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 210,
                        "name": "to",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "877:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 209,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "877:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 212,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 229,
                        "src": "889:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 211,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "889:7:3",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "848:55:3"
                  },
                  "returnParameters": { "id": 214, "nodeType": "ParameterList", "parameters": [], "src": "913:0:3" },
                  "scope": 391,
                  "src": "823:202:3",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 269,
                    "nodeType": "Block",
                    "src": "1107:549:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                              "id": 253,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                                    "id": 241,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "id": 239,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 235,
                                      "src": "1409:5:3",
                                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 240,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1418:1:3",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1409:10:3",
                                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                                  }
                                ],
                                "id": 242,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1408:12:3",
                                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                                    "id": 251,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 246,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1381,
                                              "src": "1449:4:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_SafeBEP20_$391",
                                                "typeString": "library SafeBEP20"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_SafeBEP20_$391",
                                                "typeString": "library SafeBEP20"
                                              }
                                            ],
                                            "id": 245,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "1441:7:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": "address"
                                          },
                                          "id": 247,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1441:13:3",
                                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 248,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 233,
                                          "src": "1456:7:3",
                                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          { "typeIdentifier": "t_address", "typeString": "address" },
                                          { "typeIdentifier": "t_address", "typeString": "address" }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "id": 243,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 231,
                                          "src": "1425:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IBEP20_$171",
                                            "typeString": "contract IBEP20"
                                          }
                                        },
                                        "id": 244,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "allowance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 134,
                                        "src": "1425:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address,address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 249,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1425:39:3",
                                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "argumentTypes": null,
                                      "hexValue": "30",
                                      "id": 250,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "1468:1:3",
                                      "subdenomination": null,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "1425:44:3",
                                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                                  }
                                ],
                                "id": 252,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1424:46:3",
                                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                              },
                              "src": "1408:62:3",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5361666542455032303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
                              "id": 254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1484:56:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
                                "typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
                              },
                              "value": "SafeBEP20: approve from non-zero to non-zero allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_91a9bac926ceb306224f4766a09b4f2ef09ebf6b62503a939a3d65e9ddb75b06",
                                "typeString": "literal_string \"SafeBEP20: approve from non-zero to non-zero allowance\""
                              }
                            ],
                            "id": 238,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "1387:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1387:163:3",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 256,
                        "nodeType": "ExpressionStatement",
                        "src": "1387:163:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 258,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 231,
                              "src": "1579:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBEP20_$171",
                                "typeString": "contract IBEP20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 261,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 231,
                                      "src": "1609:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBEP20_$171",
                                        "typeString": "contract IBEP20"
                                      }
                                    },
                                    "id": 262,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 143,
                                    "src": "1609:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 263,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1609:22:3",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 264,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 233,
                                  "src": "1633:7:3",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 265,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 235,
                                  "src": "1642:5:3",
                                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                                  { "typeIdentifier": "t_address", "typeString": "address" },
                                  { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 259,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1346,
                                  "src": "1586:3:3",
                                  "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" }
                                },
                                "id": 260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1586:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 266,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1586:62:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_contract$_IBEP20_$171", "typeString": "contract IBEP20" },
                              { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                            ],
                            "id": 257,
                            "name": "callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "1560:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$171_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IBEP20,bytes memory)"
                            }
                          },
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1560:89:3",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 268,
                        "nodeType": "ExpressionStatement",
                        "src": "1560:89:3"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 270,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeApprove",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 236,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 231,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 270,
                        "src": "1052:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBEP20_$171",
                          "typeString": "contract IBEP20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 230,
                          "name": "IBEP20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 171,
                          "src": "1052:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBEP20_$171",
                            "typeString": "contract IBEP20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 233,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 270,
                        "src": "1066:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 232,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1066:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 235,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 270,
                        "src": "1083:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 234,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1083:7:3",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1051:46:3"
                  },
                  "returnParameters": { "id": 237, "nodeType": "ParameterList", "parameters": [], "src": "1107:0:3" },
                  "scope": 391,
                  "src": "1031:625:3",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 304,
                    "nodeType": "Block",
                    "src": "1748:196:3",
                    "statements": [
                      {
                        "assignments": [280],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 280,
                            "name": "newAllowance",
                            "nodeType": "VariableDeclaration",
                            "scope": 304,
                            "src": "1758:20:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                            "typeName": {
                              "id": 279,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1758:7:3",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 291,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 289,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 276,
                              "src": "1825:5:3",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_uint256", "typeString": "uint256" }],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 284,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1381,
                                      "src": "1805:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeBEP20_$391",
                                        "typeString": "library SafeBEP20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeBEP20_$391",
                                        "typeString": "library SafeBEP20"
                                      }
                                    ],
                                    "id": 283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1797:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 285,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1797:13:3",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 286,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 274,
                                  "src": "1812:7:3",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  { "typeIdentifier": "t_address", "typeString": "address" },
                                  { "typeIdentifier": "t_address", "typeString": "address" }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 281,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 272,
                                  "src": "1781:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBEP20_$171",
                                    "typeString": "contract IBEP20"
                                  }
                                },
                                "id": 282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 134,
                                "src": "1781:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1781:39:3",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            "id": 288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 409,
                            "src": "1781:43:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1781:50:3",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1758:73:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 293,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 272,
                              "src": "1860:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBEP20_$171",
                                "typeString": "contract IBEP20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 296,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 272,
                                      "src": "1890:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBEP20_$171",
                                        "typeString": "contract IBEP20"
                                      }
                                    },
                                    "id": 297,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 143,
                                    "src": "1890:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "1890:22:3",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 299,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 274,
                                  "src": "1914:7:3",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 300,
                                  "name": "newAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 280,
                                  "src": "1923:12:3",
                                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                                  { "typeIdentifier": "t_address", "typeString": "address" },
                                  { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 294,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1346,
                                  "src": "1867:3:3",
                                  "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" }
                                },
                                "id": 295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1867:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 301,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1867:69:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_contract$_IBEP20_$171", "typeString": "contract IBEP20" },
                              { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                            ],
                            "id": 292,
                            "name": "callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "1841:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$171_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IBEP20,bytes memory)"
                            }
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1841:96:3",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 303,
                        "nodeType": "ExpressionStatement",
                        "src": "1841:96:3"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 305,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeIncreaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 272,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "1693:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBEP20_$171",
                          "typeString": "contract IBEP20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 271,
                          "name": "IBEP20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 171,
                          "src": "1693:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBEP20_$171",
                            "typeString": "contract IBEP20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 274,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "1707:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 273,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1707:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 276,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "1724:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 275,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1724:7:3",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1692:46:3"
                  },
                  "returnParameters": { "id": 278, "nodeType": "ParameterList", "parameters": [], "src": "1748:0:3" },
                  "scope": 391,
                  "src": "1662:282:3",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 340,
                    "nodeType": "Block",
                    "src": "2036:275:3",
                    "statements": [
                      {
                        "assignments": [315],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 315,
                            "name": "newAllowance",
                            "nodeType": "VariableDeclaration",
                            "scope": 340,
                            "src": "2046:20:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                            "typeName": {
                              "id": 314,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2046:7:3",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 327,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 324,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 311,
                              "src": "2126:5:3",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5361666542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                              "id": 325,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2145:43:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
                                "typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
                              },
                              "value": "SafeBEP20: decreased allowance below zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              {
                                "typeIdentifier": "t_stringliteral_8d8b0d004f76517d0accc4049600ccad745ed1cf03a0a544bc57f891c9ae38a3",
                                "typeString": "literal_string \"SafeBEP20: decreased allowance below zero\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 319,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1381,
                                      "src": "2093:4:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_SafeBEP20_$391",
                                        "typeString": "library SafeBEP20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_SafeBEP20_$391",
                                        "typeString": "library SafeBEP20"
                                      }
                                    ],
                                    "id": 318,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2085:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 320,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2085:13:3",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 321,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "2100:7:3",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  { "typeIdentifier": "t_address", "typeString": "address" },
                                  { "typeIdentifier": "t_address", "typeString": "address" }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 316,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 307,
                                  "src": "2069:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBEP20_$171",
                                    "typeString": "contract IBEP20"
                                  }
                                },
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "allowance",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 134,
                                "src": "2069:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                  "typeString": "function (address,address) view external returns (uint256)"
                                }
                              },
                              "id": 322,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2069:39:3",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            "id": 323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 479,
                            "src": "2069:43:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2069:129:3",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2046:152:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 329,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 307,
                              "src": "2227:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBEP20_$171",
                                "typeString": "contract IBEP20"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 332,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 307,
                                      "src": "2257:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBEP20_$171",
                                        "typeString": "contract IBEP20"
                                      }
                                    },
                                    "id": 333,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "approve",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 143,
                                    "src": "2257:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "selector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "2257:22:3",
                                  "typeDescriptions": { "typeIdentifier": "t_bytes4", "typeString": "bytes4" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 335,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 309,
                                  "src": "2281:7:3",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 336,
                                  "name": "newAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 315,
                                  "src": "2290:12:3",
                                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  { "typeIdentifier": "t_bytes4", "typeString": "bytes4" },
                                  { "typeIdentifier": "t_address", "typeString": "address" },
                                  { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 330,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1346,
                                  "src": "2234:3:3",
                                  "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" }
                                },
                                "id": 331,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodeWithSelector",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2234:22:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (bytes4) pure returns (bytes memory)"
                                }
                              },
                              "id": 337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2234:69:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_contract$_IBEP20_$171", "typeString": "contract IBEP20" },
                              { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }
                            ],
                            "id": 328,
                            "name": "callOptionalReturn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 390,
                            "src": "2208:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$171_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IBEP20,bytes memory)"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2208:96:3",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 339,
                        "nodeType": "ExpressionStatement",
                        "src": "2208:96:3"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 341,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "safeDecreaseAllowance",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 307,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "1981:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBEP20_$171",
                          "typeString": "contract IBEP20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 306,
                          "name": "IBEP20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 171,
                          "src": "1981:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBEP20_$171",
                            "typeString": "contract IBEP20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 309,
                        "name": "spender",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "1995:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1995:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 311,
                        "name": "value",
                        "nodeType": "VariableDeclaration",
                        "scope": 341,
                        "src": "2012:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 310,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2012:7:3",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1980:46:3"
                  },
                  "returnParameters": { "id": 313, "nodeType": "ParameterList", "parameters": [], "src": "2036:0:3" },
                  "scope": 391,
                  "src": "1950:361:3",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 389,
                    "nodeType": "Block",
                    "src": "2763:1038:3",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 350,
                                      "name": "token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 343,
                                      "src": "3297:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IBEP20_$171",
                                        "typeString": "contract IBEP20"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      { "typeIdentifier": "t_contract$_IBEP20_$171", "typeString": "contract IBEP20" }
                                    ],
                                    "id": 349,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3289:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3289:14:3",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                "id": 352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isContract",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 54,
                                "src": "3289:25:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                                  "typeString": "function (address) view returns (bool)"
                                }
                              },
                              "id": 353,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3289:27:3",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5361666542455032303a2063616c6c20746f206e6f6e2d636f6e7472616374",
                              "id": 354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3318:33:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e5b165dd326cc338f3f8a73e4bd1577d82082723f544c289e269216f5337d315",
                                "typeString": "literal_string \"SafeBEP20: call to non-contract\""
                              },
                              "value": "SafeBEP20: call to non-contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_e5b165dd326cc338f3f8a73e4bd1577d82082723f544c289e269216f5337d315",
                                "typeString": "literal_string \"SafeBEP20: call to non-contract\""
                              }
                            ],
                            "id": 348,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "3281:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 355,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3281:71:3",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 356,
                        "nodeType": "ExpressionStatement",
                        "src": "3281:71:3"
                      },
                      {
                        "assignments": [358, 360],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 358,
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 389,
                            "src": "3423:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                            "typeName": {
                              "id": 357,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3423:4:3",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 360,
                            "name": "returndata",
                            "nodeType": "VariableDeclaration",
                            "scope": 389,
                            "src": "3437:23:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" },
                            "typeName": {
                              "id": 359,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3437:5:3",
                              "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 367,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 365,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 345,
                              "src": "3484:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [{ "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" }],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 362,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 343,
                                  "src": "3472:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBEP20_$171",
                                    "typeString": "contract IBEP20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  { "typeIdentifier": "t_contract$_IBEP20_$171", "typeString": "contract IBEP20" }
                                ],
                                "id": 361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3464:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3464:14:3",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "id": 364,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "call",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3464:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3464:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3422:67:3"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 369,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "3507:7:3",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c6564",
                              "id": 370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3516:34:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
                                "typeString": "literal_string \"SafeBEP20: low-level call failed\""
                              },
                              "value": "SafeBEP20: low-level call failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_e357ac51478c37023e9e7ad13e9d6e33f2ac0566d41923020f1a6b2e7a541c3e",
                                "typeString": "literal_string \"SafeBEP20: low-level call failed\""
                              }
                            ],
                            "id": 368,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "3499:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 371,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3499:52:3",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 372,
                        "nodeType": "ExpressionStatement",
                        "src": "3499:52:3"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          "id": 376,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 373,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "3566:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3566:17:3",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3586:1:3",
                            "subdenomination": null,
                            "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                            "value": "0"
                          },
                          "src": "3566:21:3",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "falseBody": null,
                        "id": 388,
                        "nodeType": "IfStatement",
                        "src": "3562:233:3",
                        "trueBody": {
                          "id": 387,
                          "nodeType": "Block",
                          "src": "3589:206:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 380,
                                        "name": "returndata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 360,
                                        "src": "3718:10:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "components": [
                                          {
                                            "argumentTypes": null,
                                            "id": 381,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3731:4:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bool_$",
                                              "typeString": "type(bool)"
                                            },
                                            "typeName": "bool"
                                          }
                                        ],
                                        "id": 382,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "3730:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bool_$",
                                          "typeString": "type(bool)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes memory" },
                                        { "typeIdentifier": "t_type$_t_bool_$", "typeString": "type(bool)" }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 378,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1346,
                                        "src": "3707:3:3",
                                        "typeDescriptions": { "typeIdentifier": "t_magic_abi", "typeString": "abi" }
                                      },
                                      "id": 379,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "decode",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "3707:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 383,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3707:30:3",
                                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "5361666542455032303a204245503230206f7065726174696f6e20646964206e6f742073756363656564",
                                    "id": 384,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3739:44:3",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
                                      "typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
                                    },
                                    "value": "SafeBEP20: BEP20 operation did not succeed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    { "typeIdentifier": "t_bool", "typeString": "bool" },
                                    {
                                      "typeIdentifier": "t_stringliteral_21c3364d55537bf20eb8f05374e9f53f47299e1883c412f1f1135f398f2c2082",
                                      "typeString": "literal_string \"SafeBEP20: BEP20 operation did not succeed\""
                                    }
                                  ],
                                  "id": 377,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [1362, 1363],
                                  "referencedDeclaration": 1363,
                                  "src": "3699:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3699:85:3",
                                "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                              },
                              "id": 386,
                              "nodeType": "ExpressionStatement",
                              "src": "3699:85:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": "@dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\non the return value: the return value is optional (but if data is returned, it must not be false).\n@param token The token targeted by the call.\n@param data The call data (encoded using abi.encode or one of its variants).",
                  "id": 390,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "callOptionalReturn",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "2722:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBEP20_$171",
                          "typeString": "contract IBEP20"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 342,
                          "name": "IBEP20",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 171,
                          "src": "2722:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IBEP20_$171",
                            "typeString": "contract IBEP20"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 345,
                        "name": "data",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "2736:17:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": { "typeIdentifier": "t_bytes_memory_ptr", "typeString": "bytes" },
                        "typeName": {
                          "id": 344,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2736:5:3",
                          "typeDescriptions": { "typeIdentifier": "t_bytes_storage_ptr", "typeString": "bytes" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2721:33:3"
                  },
                  "returnParameters": { "id": 347, "nodeType": "ParameterList", "parameters": [], "src": "2763:0:3" },
                  "scope": 391,
                  "src": "2694:1107:3",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "private"
                }
              ],
              "scope": 392,
              "src": "555:3248:3"
            }
          ],
          "src": "0:3804:3"
        }
      },
      "@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol": {
        "id": 4,
        "ast": {
          "absolutePath": "@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol",
          "exportedSymbols": { "SafeMath": [596] },
          "id": 597,
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 393, "literals": ["solidity", "^", "0.5", ".16"], "nodeType": "PragmaDirective", "src": "0:24:4" },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always.",
              "fullyImplemented": true,
              "id": 596,
              "linearizedBaseContracts": [596],
              "name": "SafeMath",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 408,
                    "nodeType": "Block",
                    "src": "902:64:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 403,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 395,
                              "src": "923:1:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 404,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 397,
                              "src": "926:1:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                              "id": 405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "929:29:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              },
                              "value": "SafeMath: addition overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              {
                                "typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
                                "typeString": "literal_string \"SafeMath: addition overflow\""
                              }
                            ],
                            "id": 402,
                            "name": "add",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [409, 436],
                            "referencedDeclaration": 436,
                            "src": "919:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "919:40:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 401,
                        "id": 407,
                        "nodeType": "Return",
                        "src": "912:47:4"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `+` operator.\n     * Requirements:\n- Addition cannot overflow.",
                  "id": 409,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 398,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 395,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "848:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 394,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "848:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 397,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "859:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 396,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "859:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "847:22:4"
                  },
                  "returnParameters": {
                    "id": 401,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 400,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "893:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 399,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "893:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "892:9:4"
                  },
                  "scope": 596,
                  "src": "835:131:4",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 435,
                    "nodeType": "Block",
                    "src": "1345:92:4",
                    "statements": [
                      {
                        "assignments": [421],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 421,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 435,
                            "src": "1355:9:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                            "typeName": {
                              "id": 420,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1355:7:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 425,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 422,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 411,
                            "src": "1367:1:4",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 423,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 413,
                            "src": "1371:1:4",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "src": "1367:5:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1355:17:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 427,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 421,
                                "src": "1390:1:4",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 428,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 411,
                                "src": "1395:1:4",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "src": "1390:6:4",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 430,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "1398:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                            ],
                            "id": 426,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "1382:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1382:29:4",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 432,
                        "nodeType": "ExpressionStatement",
                        "src": "1382:29:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 433,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 421,
                          "src": "1429:1:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 419,
                        "id": 434,
                        "nodeType": "Return",
                        "src": "1422:8:4"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
                  "id": 436,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 416,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 411,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 436,
                        "src": "1263:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 410,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1263:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 413,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 436,
                        "src": "1274:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 412,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1274:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 415,
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 436,
                        "src": "1285:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                        "typeName": {
                          "id": 414,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1285:6:4",
                          "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1262:50:4"
                  },
                  "returnParameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 418,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 436,
                        "src": "1336:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 417,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1335:9:4"
                  },
                  "scope": 596,
                  "src": "1250:187:4",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 451,
                    "nodeType": "Block",
                    "src": "1768:67:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 446,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 438,
                              "src": "1789:1:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 447,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 440,
                              "src": "1792:1:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1795:32:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              },
                              "value": "SafeMath: subtraction overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              {
                                "typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
                                "typeString": "literal_string \"SafeMath: subtraction overflow\""
                              }
                            ],
                            "id": 445,
                            "name": "sub",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [452, 479],
                            "referencedDeclaration": 479,
                            "src": "1785:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1785:43:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 444,
                        "id": 450,
                        "nodeType": "Return",
                        "src": "1778:50:4"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
                  "id": 452,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 438,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 452,
                        "src": "1714:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 437,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1714:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 440,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 452,
                        "src": "1725:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 439,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1725:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1713:22:4"
                  },
                  "returnParameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 452,
                        "src": "1759:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 442,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1759:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1758:9:4"
                  },
                  "scope": 596,
                  "src": "1701:134:4",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 478,
                    "nodeType": "Block",
                    "src": "2214:92:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 464,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 456,
                                "src": "2232:1:4",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 465,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 454,
                                "src": "2237:1:4",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "src": "2232:6:4",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 467,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 458,
                              "src": "2240:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                            ],
                            "id": 463,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "2224:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2224:29:4",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 469,
                        "nodeType": "ExpressionStatement",
                        "src": "2224:29:4"
                      },
                      {
                        "assignments": [471],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 471,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 478,
                            "src": "2263:9:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                            "typeName": {
                              "id": 470,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2263:7:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 475,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 472,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 454,
                            "src": "2275:1:4",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 473,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 456,
                            "src": "2279:1:4",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "src": "2275:5:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2263:17:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 476,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 471,
                          "src": "2298:1:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 462,
                        "id": 477,
                        "nodeType": "Return",
                        "src": "2291:8:4"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the subtraction of two unsigned integers, reverting with custom message on\noverflow (when the result is negative).\n     * Counterpart to Solidity's `-` operator.\n     * Requirements:\n- Subtraction cannot overflow.",
                  "id": 479,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 459,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 454,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 479,
                        "src": "2132:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 453,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2132:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 456,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 479,
                        "src": "2143:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 455,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2143:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 458,
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 479,
                        "src": "2154:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                        "typeName": {
                          "id": 457,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2154:6:4",
                          "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2131:50:4"
                  },
                  "returnParameters": {
                    "id": 462,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 461,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 479,
                        "src": "2205:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 460,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2205:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2204:9:4"
                  },
                  "scope": 596,
                  "src": "2119:187:4",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 512,
                    "nodeType": "Block",
                    "src": "2613:392:4",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          "id": 490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 488,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "2845:1:4",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2850:1:4",
                            "subdenomination": null,
                            "typeDescriptions": { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" },
                            "value": "0"
                          },
                          "src": "2845:6:4",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "falseBody": null,
                        "id": 494,
                        "nodeType": "IfStatement",
                        "src": "2841:45:4",
                        "trueBody": {
                          "id": 493,
                          "nodeType": "Block",
                          "src": "2853:33:4",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 491,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2874:1:4",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "functionReturnParameters": 487,
                              "id": 492,
                              "nodeType": "Return",
                              "src": "2867:8:4"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [496],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 496,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 512,
                            "src": "2896:9:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                            "typeName": {
                              "id": 495,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2896:7:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 500,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          "id": 499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 497,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "2908:1:4",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 498,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 483,
                            "src": "2912:1:4",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "src": "2908:5:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2896:17:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                                "id": 504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 502,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 496,
                                  "src": "2931:1:4",
                                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 503,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 481,
                                  "src": "2935:1:4",
                                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                },
                                "src": "2931:5:4",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 505,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 483,
                                "src": "2940:1:4",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "src": "2931:10:4",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2943:35:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              },
                              "value": "SafeMath: multiplication overflow"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
                                "typeString": "literal_string \"SafeMath: multiplication overflow\""
                              }
                            ],
                            "id": 501,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "2923:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2923:56:4",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 509,
                        "nodeType": "ExpressionStatement",
                        "src": "2923:56:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 510,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 496,
                          "src": "2997:1:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 487,
                        "id": 511,
                        "nodeType": "Return",
                        "src": "2990:8:4"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n     * Counterpart to Solidity's `*` operator.\n     * Requirements:\n- Multiplication cannot overflow.",
                  "id": 513,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 481,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 513,
                        "src": "2559:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 480,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2559:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 483,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 513,
                        "src": "2570:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 482,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2558:22:4"
                  },
                  "returnParameters": {
                    "id": 487,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 486,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 513,
                        "src": "2604:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 485,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2604:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2603:9:4"
                  },
                  "scope": 596,
                  "src": "2546:459:4",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "3527:63:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 523,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 515,
                              "src": "3548:1:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 524,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 517,
                              "src": "3551:1:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
                              "id": 525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3554:28:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              },
                              "value": "SafeMath: division by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              {
                                "typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
                                "typeString": "literal_string \"SafeMath: division by zero\""
                              }
                            ],
                            "id": 522,
                            "name": "div",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [529, 556],
                            "referencedDeclaration": 556,
                            "src": "3544:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3544:39:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 521,
                        "id": 527,
                        "nodeType": "Return",
                        "src": "3537:46:4"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 518,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 515,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "3473:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 514,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3473:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 517,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "3484:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 516,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3484:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3472:22:4"
                  },
                  "returnParameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 520,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "3518:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 519,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3518:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3517:9:4"
                  },
                  "scope": 596,
                  "src": "3460:130:4",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 555,
                    "nodeType": "Block",
                    "src": "4160:243:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              "id": 543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 541,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 533,
                                "src": "4244:1:4",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4248:1:4",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4244:5:4",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 544,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 535,
                              "src": "4251:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                            ],
                            "id": 540,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "4236:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4236:28:4",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 546,
                        "nodeType": "ExpressionStatement",
                        "src": "4236:28:4"
                      },
                      {
                        "assignments": [548],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 548,
                            "name": "c",
                            "nodeType": "VariableDeclaration",
                            "scope": 555,
                            "src": "4274:9:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                            "typeName": {
                              "id": 547,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4274:7:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 552,
                        "initialValue": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          "id": 551,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 549,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 531,
                            "src": "4286:1:4",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 550,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 533,
                            "src": "4290:1:4",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "src": "4286:5:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4274:17:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 553,
                          "name": "c",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "4395:1:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 539,
                        "id": 554,
                        "nodeType": "Return",
                        "src": "4388:8:4"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the integer division of two unsigned integers. Reverts with custom message on\ndivision by zero. The result is rounded towards zero.\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
                  "id": 556,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 536,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 531,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "4078:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4078:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 533,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "4089:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 532,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4089:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 535,
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "4100:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                        "typeName": {
                          "id": 534,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4100:6:4",
                          "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4077:50:4"
                  },
                  "returnParameters": {
                    "id": 539,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 538,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 556,
                        "src": "4151:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 537,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4151:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4150:9:4"
                  },
                  "scope": 596,
                  "src": "4065:338:4",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "4914:61:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 566,
                              "name": "a",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 558,
                              "src": "4935:1:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 567,
                              "name": "b",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 560,
                              "src": "4938:1:4",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
                              "id": 568,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4941:26:4",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                                "typeString": "literal_string \"SafeMath: modulo by zero\""
                              },
                              "value": "SafeMath: modulo by zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              {
                                "typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
                                "typeString": "literal_string \"SafeMath: modulo by zero\""
                              }
                            ],
                            "id": 565,
                            "name": "mod",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [572, 595],
                            "referencedDeclaration": 595,
                            "src": "4931:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
                            }
                          },
                          "id": 569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4931:37:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 564,
                        "id": 570,
                        "nodeType": "Return",
                        "src": "4924:44:4"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
                  "id": 572,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 558,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "4860:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 557,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 560,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "4871:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 559,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4871:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:22:4"
                  },
                  "returnParameters": {
                    "id": 564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 563,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "4905:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 562,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4905:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4904:9:4"
                  },
                  "scope": 596,
                  "src": "4847:128:4",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 594,
                    "nodeType": "Block",
                    "src": "5534:68:4",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              "id": 586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 584,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 576,
                                "src": "5552:1:4",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 585,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5557:1:4",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "5552:6:4",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 587,
                              "name": "errorMessage",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 578,
                              "src": "5560:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              { "typeIdentifier": "t_string_memory_ptr", "typeString": "string memory" }
                            ],
                            "id": 583,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "5544:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5544:29:4",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 589,
                        "nodeType": "ExpressionStatement",
                        "src": "5544:29:4"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                          "id": 592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 590,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 574,
                            "src": "5590:1:4",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 591,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 576,
                            "src": "5594:1:4",
                            "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                          },
                          "src": "5590:5:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 582,
                        "id": 593,
                        "nodeType": "Return",
                        "src": "5583:12:4"
                      }
                    ]
                  },
                  "documentation": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts with custom message when dividing by zero.\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n     * Requirements:\n- The divisor cannot be zero.",
                  "id": 595,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 579,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 574,
                        "name": "a",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "5452:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 573,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5452:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 576,
                        "name": "b",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "5463:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 575,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5463:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 578,
                        "name": "errorMessage",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "5474:26:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": { "typeIdentifier": "t_string_memory_ptr", "typeString": "string" },
                        "typeName": {
                          "id": 577,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5474:6:4",
                          "typeDescriptions": { "typeIdentifier": "t_string_storage_ptr", "typeString": "string" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5451:50:4"
                  },
                  "returnParameters": {
                    "id": 582,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 581,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 595,
                        "src": "5525:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 580,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5525:7:4",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "5524:9:4"
                  },
                  "scope": 596,
                  "src": "5439:163:4",
                  "stateMutability": "pure",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 597,
              "src": "590:5014:4"
            }
          ],
          "src": "0:5605:4"
        }
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol": {
        "id": 5,
        "ast": {
          "absolutePath": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol",
          "exportedSymbols": { "XVSStore": [870] },
          "id": 871,
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 598, "literals": ["solidity", "0.5", ".16"], "nodeType": "PragmaDirective", "src": "0:23:5" },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/Utils/SafeBEP20.sol",
              "file": "../Utils/SafeBEP20.sol",
              "id": 599,
              "nodeType": "ImportDirective",
              "scope": 871,
              "sourceUnit": 392,
              "src": "24:32:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol",
              "file": "../Utils/IBEP20.sol",
              "id": 600,
              "nodeType": "ImportDirective",
              "scope": 871,
              "sourceUnit": 172,
              "src": "57:29:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": "@title XVS Store\n@author Venus\n@notice XVS Store responsible for distributing XVS rewards",
              "fullyImplemented": true,
              "id": 870,
              "linearizedBaseContracts": [870],
              "name": "XVSStore",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 603,
                  "libraryName": {
                    "contractScope": null,
                    "id": 601,
                    "name": "SafeMath",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 596,
                    "src": "225:8:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeMath_$596",
                      "typeString": "library SafeMath"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "219:27:5",
                  "typeName": {
                    "id": 602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "238:7:5",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  }
                },
                {
                  "id": 606,
                  "libraryName": {
                    "contractScope": null,
                    "id": 604,
                    "name": "SafeBEP20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 391,
                    "src": "257:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SafeBEP20_$391",
                      "typeString": "library SafeBEP20"
                    }
                  },
                  "nodeType": "UsingForDirective",
                  "src": "251:27:5",
                  "typeName": {
                    "contractScope": null,
                    "id": 605,
                    "name": "IBEP20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 171,
                    "src": "271:6:5",
                    "typeDescriptions": { "typeIdentifier": "t_contract$_IBEP20_$171", "typeString": "contract IBEP20" }
                  }
                },
                {
                  "constant": false,
                  "id": 608,
                  "name": "admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "318:20:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "318:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 610,
                  "name": "pendingAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "387:27:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "387:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 612,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "455:20:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 611,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "455:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 616,
                  "name": "rewardTokens",
                  "nodeType": "VariableDeclaration",
                  "scope": 870,
                  "src": "516:44:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 615,
                    "keyType": {
                      "id": 613,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "524:7:5",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "516:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 614,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "535:4:5",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice Emitted when pendingAdmin is changed",
                  "id": 622,
                  "name": "NewPendingAdmin",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 621,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 618,
                        "indexed": false,
                        "name": "oldPendingAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "642:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 617,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "642:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 620,
                        "indexed": false,
                        "name": "newPendingAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "667:23:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 619,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "641:50:5"
                  },
                  "src": "620:72:5"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice Event emitted when admin changed",
                  "id": 628,
                  "name": "AdminTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "indexed": true,
                        "name": "oldAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "770:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 623,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "770:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 626,
                        "indexed": true,
                        "name": "newAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 628,
                        "src": "796:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 625,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "796:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "769:52:5"
                  },
                  "src": "747:75:5"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice Event emitted when owner changed",
                  "id": 634,
                  "name": "OwnerTransferred",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 633,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 630,
                        "indexed": true,
                        "name": "oldOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "900:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 629,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "900:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 632,
                        "indexed": true,
                        "name": "newOwner",
                        "nodeType": "VariableDeclaration",
                        "scope": 634,
                        "src": "926:24:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 631,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "899:52:5"
                  },
                  "src": "877:75:5"
                },
                {
                  "body": {
                    "id": 642,
                    "nodeType": "Block",
                    "src": "979:35:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 637,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "989:5:5",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 638,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1359,
                              "src": "997:3:5",
                              "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                            },
                            "id": 639,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "997:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "989:18:5",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 641,
                        "nodeType": "ExpressionStatement",
                        "src": "989:18:5"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 643,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": { "id": 635, "nodeType": "ParameterList", "parameters": [], "src": "969:2:5" },
                  "returnParameters": { "id": 636, "nodeType": "ParameterList", "parameters": [], "src": "979:0:5" },
                  "scope": 870,
                  "src": "958:56:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 654,
                    "nodeType": "Block",
                    "src": "1041:74:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                              "id": 649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 646,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1359,
                                  "src": "1059:3:5",
                                  "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                                },
                                "id": 647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1059:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 648,
                                "name": "admin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 608,
                                "src": "1073:5:5",
                                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                              },
                              "src": "1059:19:5",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6f6e6c792061646d696e2063616e",
                              "id": 650,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1080:16:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b23133e00453c5653fa03eafcd07ee82293e5fd9f839af75b39fe7053870cf04",
                                "typeString": "literal_string \"only admin can\""
                              },
                              "value": "only admin can"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_b23133e00453c5653fa03eafcd07ee82293e5fd9f839af75b39fe7053870cf04",
                                "typeString": "literal_string \"only admin can\""
                              }
                            ],
                            "id": 645,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "1051:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1051:46:5",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 652,
                        "nodeType": "ExpressionStatement",
                        "src": "1051:46:5"
                      },
                      { "id": 653, "nodeType": "PlaceholderStatement", "src": "1107:1:5" }
                    ]
                  },
                  "documentation": null,
                  "id": 655,
                  "name": "onlyAdmin",
                  "nodeType": "ModifierDefinition",
                  "parameters": { "id": 644, "nodeType": "ParameterList", "parameters": [], "src": "1038:2:5" },
                  "src": "1020:95:5",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 666,
                    "nodeType": "Block",
                    "src": "1142:74:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                              "id": 661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 658,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1359,
                                  "src": "1160:3:5",
                                  "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                                },
                                "id": 659,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "1160:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 660,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 612,
                                "src": "1174:5:5",
                                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                              },
                              "src": "1160:19:5",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6f6e6c79206f776e65722063616e",
                              "id": 662,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1181:16:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_39b72786d7672a5adaa4dd08bb468ad2b2e9b39434df1b4fc2f8099dd76cc265",
                                "typeString": "literal_string \"only owner can\""
                              },
                              "value": "only owner can"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_39b72786d7672a5adaa4dd08bb468ad2b2e9b39434df1b4fc2f8099dd76cc265",
                                "typeString": "literal_string \"only owner can\""
                              }
                            ],
                            "id": 657,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "1152:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1152:46:5",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 664,
                        "nodeType": "ExpressionStatement",
                        "src": "1152:46:5"
                      },
                      { "id": 665, "nodeType": "PlaceholderStatement", "src": "1208:1:5" }
                    ]
                  },
                  "documentation": null,
                  "id": 667,
                  "name": "onlyOwner",
                  "nodeType": "ModifierDefinition",
                  "parameters": { "id": 656, "nodeType": "ParameterList", "parameters": [], "src": "1139:2:5" },
                  "src": "1121:95:5",
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 729,
                    "nodeType": "Block",
                    "src": "1716:406:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                              "id": 683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 679,
                                  "name": "rewardTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 616,
                                  "src": "1734:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 681,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 680,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 669,
                                  "src": "1747:5:5",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1734:19:5",
                                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "hexValue": "74727565",
                                "id": 682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1757:4:5",
                                "subdenomination": null,
                                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                                "value": "true"
                              },
                              "src": "1734:27:5",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6f6e6c792072657761726420746f6b656e2063616e",
                              "id": 684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1763:23:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e8f88438f2f3d7184f5933afccededeb2aa8de3b349d01936c7d2b3ee5467e80",
                                "typeString": "literal_string \"only reward token can\""
                              },
                              "value": "only reward token can"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_e8f88438f2f3d7184f5933afccededeb2aa8de3b349d01936c7d2b3ee5467e80",
                                "typeString": "literal_string \"only reward token can\""
                              }
                            ],
                            "id": 678,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "1726:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1726:61:5",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 686,
                        "nodeType": "ExpressionStatement",
                        "src": "1726:61:5"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                          "id": 693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 688,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 669,
                                "src": "1810:5:5",
                                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                              "id": 687,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1802:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1802:14:5",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1828:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }],
                              "id": 690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1820:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1820:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1802:28:5",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "falseBody": null,
                        "id": 728,
                        "nodeType": "IfStatement",
                        "src": "1798:318:5",
                        "trueBody": {
                          "id": 727,
                          "nodeType": "Block",
                          "src": "1832:284:5",
                          "statements": [
                            {
                              "assignments": [695],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 695,
                                  "name": "tokenBalance",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 727,
                                  "src": "1846:20:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                                  "typeName": {
                                    "id": 694,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1846:7:5",
                                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                  },
                                  "value": null,
                                  "visibility": "internal"
                                }
                              ],
                              "id": 704,
                              "initialValue": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 701,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1383,
                                        "src": "1901:4:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_XVSStore_$870",
                                          "typeString": "contract XVSStore"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_XVSStore_$870",
                                          "typeString": "contract XVSStore"
                                        }
                                      ],
                                      "id": 700,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1893:7:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": "address"
                                    },
                                    "id": 702,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1893:13:5",
                                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                                  "expression": {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "id": 697,
                                        "name": "token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 669,
                                        "src": "1876:5:5",
                                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                                      "id": 696,
                                      "name": "IBEP20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 171,
                                      "src": "1869:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IBEP20_$171_$",
                                        "typeString": "type(contract IBEP20)"
                                      }
                                    },
                                    "id": 698,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1869:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IBEP20_$171",
                                      "typeString": "contract IBEP20"
                                    }
                                  },
                                  "id": 699,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "balanceOf",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 116,
                                  "src": "1869:23:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address) view external returns (uint256)"
                                  }
                                },
                                "id": 703,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1869:38:5",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1846:61:5"
                            },
                            {
                              "condition": {
                                "argumentTypes": null,
                                "commonType": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "id": 705,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 673,
                                  "src": "1925:7:5",
                                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 706,
                                  "name": "tokenBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 695,
                                  "src": "1935:12:5",
                                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                },
                                "src": "1925:22:5",
                                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                              },
                              "falseBody": {
                                "id": 725,
                                "nodeType": "Block",
                                "src": "2033:73:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 721,
                                          "name": "_to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 671,
                                          "src": "2078:3:5",
                                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 722,
                                          "name": "_amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 673,
                                          "src": "2083:7:5",
                                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          { "typeIdentifier": "t_address", "typeString": "address" },
                                          { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 718,
                                              "name": "token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 669,
                                              "src": "2058:5:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              { "typeIdentifier": "t_address", "typeString": "address" }
                                            ],
                                            "id": 717,
                                            "name": "IBEP20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 171,
                                            "src": "2051:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IBEP20_$171_$",
                                              "typeString": "type(contract IBEP20)"
                                            }
                                          },
                                          "id": 719,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "2051:13:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IBEP20_$171",
                                            "typeString": "contract IBEP20"
                                          }
                                        },
                                        "id": 720,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safeTransfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 204,
                                        "src": "2051:26:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$171_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$171_$",
                                          "typeString": "function (contract IBEP20,address,uint256)"
                                        }
                                      },
                                      "id": 723,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2051:40:5",
                                      "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                                    },
                                    "id": 724,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2051:40:5"
                                  }
                                ]
                              },
                              "id": 726,
                              "nodeType": "IfStatement",
                              "src": "1921:185:5",
                              "trueBody": {
                                "id": 716,
                                "nodeType": "Block",
                                "src": "1949:78:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "argumentTypes": null,
                                      "arguments": [
                                        {
                                          "argumentTypes": null,
                                          "id": 712,
                                          "name": "_to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 671,
                                          "src": "1994:3:5",
                                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                        },
                                        {
                                          "argumentTypes": null,
                                          "id": 713,
                                          "name": "tokenBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 695,
                                          "src": "1999:12:5",
                                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          { "typeIdentifier": "t_address", "typeString": "address" },
                                          { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                                        ],
                                        "expression": {
                                          "argumentTypes": null,
                                          "arguments": [
                                            {
                                              "argumentTypes": null,
                                              "id": 709,
                                              "name": "token",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 669,
                                              "src": "1974:5:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              { "typeIdentifier": "t_address", "typeString": "address" }
                                            ],
                                            "id": 708,
                                            "name": "IBEP20",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 171,
                                            "src": "1967:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IBEP20_$171_$",
                                              "typeString": "type(contract IBEP20)"
                                            }
                                          },
                                          "id": 710,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1967:13:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IBEP20_$171",
                                            "typeString": "contract IBEP20"
                                          }
                                        },
                                        "id": 711,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safeTransfer",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 204,
                                        "src": "1967:26:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$171_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$171_$",
                                          "typeString": "function (contract IBEP20,address,uint256)"
                                        }
                                      },
                                      "id": 714,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1967:45:5",
                                      "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                                    },
                                    "id": 715,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1967:45:5"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": "@notice Safely transfer rewards. Only active reward tokens can be sent using this function.\nOnly callable by owner\n@dev Safe reward token transfer function, just in case if rounding error causes pool to not have enough tokens.\n@param token Reward token to transfer\n@param _to Destination address of the reward\n@param _amount Amount to transfer",
                  "id": 730,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 676,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 675,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "1706:9:5",
                        "typeDescriptions": { "typeIdentifier": "t_modifier$__$", "typeString": "modifier ()" }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1706:9:5"
                    }
                  ],
                  "name": "safeRewardTransfer",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 669,
                        "name": "token",
                        "nodeType": "VariableDeclaration",
                        "scope": 730,
                        "src": "1652:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 668,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1652:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 671,
                        "name": "_to",
                        "nodeType": "VariableDeclaration",
                        "scope": 730,
                        "src": "1667:11:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 670,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1667:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 673,
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 730,
                        "src": "1680:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 672,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1680:7:5",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1651:45:5"
                  },
                  "returnParameters": { "id": 677, "nodeType": "ParameterList", "parameters": [], "src": "1716:0:5" },
                  "scope": 870,
                  "src": "1624:498:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 750,
                    "nodeType": "Block",
                    "src": "2352:141:5",
                    "statements": [
                      {
                        "assignments": [738],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 738,
                            "name": "oldPendingAdmin",
                            "nodeType": "VariableDeclaration",
                            "scope": 750,
                            "src": "2362:23:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                            "typeName": {
                              "id": 737,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2362:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 740,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 739,
                          "name": "pendingAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 610,
                          "src": "2388:12:5",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2362:38:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 741,
                            "name": "pendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "2410:12:5",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 742,
                            "name": "_admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 732,
                            "src": "2425:6:5",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "2410:21:5",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 744,
                        "nodeType": "ExpressionStatement",
                        "src": "2410:21:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 746,
                              "name": "oldPendingAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 738,
                              "src": "2462:15:5",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 747,
                              "name": "_admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 732,
                              "src": "2479:6:5",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" }
                            ],
                            "id": 745,
                            "name": "NewPendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "2446:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 748,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2446:40:5",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 749,
                        "nodeType": "EmitStatement",
                        "src": "2441:45:5"
                      }
                    ]
                  },
                  "documentation": "@notice Allows the admin to propose a new admin\nOnly callable admin\n@param _admin Propose an account as admin of the XVS store",
                  "id": 751,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 735,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 734,
                        "name": "onlyAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "2342:9:5",
                        "typeDescriptions": { "typeIdentifier": "t_modifier$__$", "typeString": "modifier ()" }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2342:9:5"
                    }
                  ],
                  "name": "setPendingAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 733,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 732,
                        "name": "_admin",
                        "nodeType": "VariableDeclaration",
                        "scope": 751,
                        "src": "2317:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 731,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2317:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "2316:16:5"
                  },
                  "returnParameters": { "id": 736, "nodeType": "ParameterList", "parameters": [], "src": "2352:0:5" },
                  "scope": 870,
                  "src": "2292:201:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 790,
                    "nodeType": "Block",
                    "src": "2666:332:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                              "id": 758,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 755,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1359,
                                  "src": "2684:3:5",
                                  "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                                },
                                "id": 756,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "2684:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 757,
                                "name": "pendingAdmin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 610,
                                "src": "2698:12:5",
                                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                              },
                              "src": "2684:26:5",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6f6e6c792070656e64696e672061646d696e",
                              "id": 759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2712:20:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b0f25065c3db7a45d11b7fc35f6d8f9ed11fa08f93447b90753fb31e1e557c04",
                                "typeString": "literal_string \"only pending admin\""
                              },
                              "value": "only pending admin"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_b0f25065c3db7a45d11b7fc35f6d8f9ed11fa08f93447b90753fb31e1e557c04",
                                "typeString": "literal_string \"only pending admin\""
                              }
                            ],
                            "id": 754,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "2676:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2676:57:5",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 761,
                        "nodeType": "ExpressionStatement",
                        "src": "2676:57:5"
                      },
                      {
                        "assignments": [763],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 763,
                            "name": "oldAdmin",
                            "nodeType": "VariableDeclaration",
                            "scope": 790,
                            "src": "2743:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                            "typeName": {
                              "id": 762,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2743:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 765,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 764,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 608,
                          "src": "2762:5:5",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2743:24:5"
                      },
                      {
                        "assignments": [767],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 767,
                            "name": "oldPendingAdmin",
                            "nodeType": "VariableDeclaration",
                            "scope": 790,
                            "src": "2777:23:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                            "typeName": {
                              "id": 766,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2777:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 769,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 768,
                          "name": "pendingAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 610,
                          "src": "2803:12:5",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2777:38:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 608,
                            "src": "2826:5:5",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 771,
                            "name": "pendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "2834:12:5",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "2826:20:5",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 773,
                        "nodeType": "ExpressionStatement",
                        "src": "2826:20:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 774,
                            "name": "pendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 610,
                            "src": "2856:12:5",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 776,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2879:1:5",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }],
                              "id": 775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2871:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2871:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2856:25:5",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 779,
                        "nodeType": "ExpressionStatement",
                        "src": "2856:25:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 781,
                              "name": "oldPendingAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "2913:15:5",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 782,
                              "name": "pendingAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 610,
                              "src": "2930:12:5",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" }
                            ],
                            "id": 780,
                            "name": "NewPendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 622,
                            "src": "2897:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2897:46:5",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 784,
                        "nodeType": "EmitStatement",
                        "src": "2892:51:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 786,
                              "name": "oldAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "2975:8:5",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 787,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 608,
                              "src": "2985:5:5",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" }
                            ],
                            "id": 785,
                            "name": "AdminTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 628,
                            "src": "2958:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2958:33:5",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 789,
                        "nodeType": "EmitStatement",
                        "src": "2953:38:5"
                      }
                    ]
                  },
                  "documentation": "@notice Allows an account that is pending as admin to accept the role\nnly calllable by the pending admin",
                  "id": 791,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "acceptAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": { "id": 752, "nodeType": "ParameterList", "parameters": [], "src": "2654:2:5" },
                  "returnParameters": { "id": 753, "nodeType": "ParameterList", "parameters": [], "src": "2666:0:5" },
                  "scope": 870,
                  "src": "2634:364:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 820,
                    "nodeType": "Block",
                    "src": "3194:186:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 799,
                                "name": "_owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 793,
                                "src": "3212:6:5",
                                "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "30",
                                    "id": 801,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3230:1:5",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }
                                  ],
                                  "id": 800,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3222:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": "address"
                                },
                                "id": 802,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3222:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "3212:20:5",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3234:31:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38607ac5a9bcc7964325a39d4a1ce1900aea87a9097675134657eb809c0d1562",
                                "typeString": "literal_string \"new owner is the zero address\""
                              },
                              "value": "new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_38607ac5a9bcc7964325a39d4a1ce1900aea87a9097675134657eb809c0d1562",
                                "typeString": "literal_string \"new owner is the zero address\""
                              }
                            ],
                            "id": 798,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "3204:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3204:62:5",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 806,
                        "nodeType": "ExpressionStatement",
                        "src": "3204:62:5"
                      },
                      {
                        "assignments": [808],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 808,
                            "name": "oldOwner",
                            "nodeType": "VariableDeclaration",
                            "scope": 820,
                            "src": "3276:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                            "typeName": {
                              "id": 807,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3276:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 810,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 809,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 612,
                          "src": "3295:5:5",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3276:24:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 811,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 612,
                            "src": "3310:5:5",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 812,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "3318:6:5",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "3310:14:5",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 814,
                        "nodeType": "ExpressionStatement",
                        "src": "3310:14:5"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 816,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 808,
                              "src": "3356:8:5",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 817,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 793,
                              "src": "3366:6:5",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" }
                            ],
                            "id": 815,
                            "name": "OwnerTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 634,
                            "src": "3339:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3339:34:5",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 819,
                        "nodeType": "EmitStatement",
                        "src": "3334:39:5"
                      }
                    ]
                  },
                  "documentation": "@notice Set the contract owner\n@param _owner The address of the owner to set\nOnly callable admin",
                  "id": 821,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 796,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 795,
                        "name": "onlyAdmin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 655,
                        "src": "3184:9:5",
                        "typeDescriptions": { "typeIdentifier": "t_modifier$__$", "typeString": "modifier ()" }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "3184:9:5"
                    }
                  ],
                  "name": "setNewOwner",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 793,
                        "name": "_owner",
                        "nodeType": "VariableDeclaration",
                        "scope": 821,
                        "src": "3159:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 792,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3159:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3158:16:5"
                  },
                  "returnParameters": { "id": 797, "nodeType": "ParameterList", "parameters": [], "src": "3194:0:5" },
                  "scope": 870,
                  "src": "3138:242:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 847,
                    "nodeType": "Block",
                    "src": "3661:141:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": { "typeIdentifier": "t_bool", "typeString": "bool" },
                              "id": 837,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                                "id": 832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 829,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1359,
                                    "src": "3679:3:5",
                                    "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                                  },
                                  "id": 830,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3679:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 831,
                                  "name": "admin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 608,
                                  "src": "3693:5:5",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                "src": "3679:19:5",
                                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "argumentTypes": null,
                                "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                                "id": 836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 833,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1359,
                                    "src": "3702:3:5",
                                    "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                                  },
                                  "id": 834,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "3702:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "argumentTypes": null,
                                  "id": 835,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 612,
                                  "src": "3716:5:5",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                },
                                "src": "3702:19:5",
                                "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                              },
                              "src": "3679:42:5",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "6f6e6c792061646d696e206f72206f776e65722063616e",
                              "id": 838,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3723:25:5",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_08625a188eb958e0d15cd281acc054f64c28121046a0647c4792d1d944cc7a2f",
                                "typeString": "literal_string \"only admin or owner can\""
                              },
                              "value": "only admin or owner can"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bool", "typeString": "bool" },
                              {
                                "typeIdentifier": "t_stringliteral_08625a188eb958e0d15cd281acc054f64c28121046a0647c4792d1d944cc7a2f",
                                "typeString": "literal_string \"only admin or owner can\""
                              }
                            ],
                            "id": 828,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [1362, 1363],
                            "referencedDeclaration": 1363,
                            "src": "3671:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3671:78:5",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 840,
                        "nodeType": "ExpressionStatement",
                        "src": "3671:78:5"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 841,
                              "name": "rewardTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 616,
                              "src": "3759:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 843,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 842,
                              "name": "_tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 823,
                              "src": "3772:13:5",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3759:27:5",
                            "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 844,
                            "name": "status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 825,
                            "src": "3789:6:5",
                            "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                          },
                          "src": "3759:36:5",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "id": 846,
                        "nodeType": "ExpressionStatement",
                        "src": "3759:36:5"
                      }
                    ]
                  },
                  "documentation": "@notice Set or disable a reward token\n@param _tokenAddress The address of a token to set as active or inactive\n@param status Set whether a reward token is active or not",
                  "id": 848,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setRewardToken",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 823,
                        "name": "_tokenAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "3616:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 822,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3616:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 825,
                        "name": "status",
                        "nodeType": "VariableDeclaration",
                        "scope": 848,
                        "src": "3639:11:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                        "typeName": {
                          "id": 824,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3639:4:5",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3615:36:5"
                  },
                  "returnParameters": { "id": 827, "nodeType": "ParameterList", "parameters": [], "src": "3661:0:5" },
                  "scope": 870,
                  "src": "3592:210:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 868,
                    "nodeType": "Block",
                    "src": "4125:81:5",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 862,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1359,
                                    "src": "4178:3:5",
                                    "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                                  },
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "4178:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  { "typeIdentifier": "t_address_payable", "typeString": "address payable" }
                                ],
                                "id": 861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4170:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4170:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 865,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "4191:7:5",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address_payable", "typeString": "address payable" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 858,
                                  "name": "_tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 850,
                                  "src": "4142:13:5",
                                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [{ "typeIdentifier": "t_address", "typeString": "address" }],
                                "id": 857,
                                "name": "IBEP20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 171,
                                "src": "4135:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IBEP20_$171_$",
                                  "typeString": "type(contract IBEP20)"
                                }
                              },
                              "id": 859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4135:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IBEP20_$171",
                                "typeString": "contract IBEP20"
                              }
                            },
                            "id": 860,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 204,
                            "src": "4135:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IBEP20_$171_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IBEP20_$171_$",
                              "typeString": "function (contract IBEP20,address,uint256)"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4135:64:5",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 867,
                        "nodeType": "ExpressionStatement",
                        "src": "4135:64:5"
                      }
                    ]
                  },
                  "documentation": "@notice Security function to allow the owner of the contract to withdraw from the contract\n@param _tokenAddress Reward token address to withdraw\n@param _amount Amount of token to withdraw",
                  "id": 869,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": null,
                      "id": 855,
                      "modifierName": {
                        "argumentTypes": null,
                        "id": 854,
                        "name": "onlyOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 667,
                        "src": "4115:9:5",
                        "typeDescriptions": { "typeIdentifier": "t_modifier$__$", "typeString": "modifier ()" }
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4115:9:5"
                    }
                  ],
                  "name": "emergencyRewardWithdraw",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 853,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 850,
                        "name": "_tokenAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "4066:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 849,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4066:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 852,
                        "name": "_amount",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "4089:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 851,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4089:7:5",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4065:40:5"
                  },
                  "returnParameters": { "id": 856, "nodeType": "ParameterList", "parameters": [], "src": "4125:0:5" },
                  "scope": 870,
                  "src": "4033:173:5",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 871,
              "src": "195:4013:5"
            }
          ],
          "src": "0:4209:5"
        }
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol": {
        "id": 6,
        "ast": {
          "absolutePath": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol",
          "exportedSymbols": { "XVSVaultErrorReporter": [939] },
          "id": 940,
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 872, "literals": ["solidity", "^", "0.5", ".16"], "nodeType": "PragmaDirective", "src": "0:24:6" },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 939,
              "linearizedBaseContracts": [939],
              "name": "XVSVaultErrorReporter",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "XVSVaultErrorReporter.Error",
                  "id": 875,
                  "members": [
                    { "id": 873, "name": "NO_ERROR", "nodeType": "EnumValue", "src": "84:8:6" },
                    { "id": 874, "name": "UNAUTHORIZED", "nodeType": "EnumValue", "src": "102:12:6" }
                  ],
                  "name": "Error",
                  "nodeType": "EnumDefinition",
                  "src": "63:57:6"
                },
                {
                  "canonicalName": "XVSVaultErrorReporter.FailureInfo",
                  "id": 880,
                  "members": [
                    {
                      "id": 876,
                      "name": "ACCEPT_ADMIN_PENDING_ADMIN_CHECK",
                      "nodeType": "EnumValue",
                      "src": "153:32:6"
                    },
                    {
                      "id": 877,
                      "name": "ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK",
                      "nodeType": "EnumValue",
                      "src": "195:43:6"
                    },
                    { "id": 878, "name": "SET_PENDING_ADMIN_OWNER_CHECK", "nodeType": "EnumValue", "src": "248:29:6" },
                    {
                      "id": 879,
                      "name": "SET_PENDING_IMPLEMENTATION_OWNER_CHECK",
                      "nodeType": "EnumValue",
                      "src": "287:38:6"
                    }
                  ],
                  "name": "FailureInfo",
                  "nodeType": "EnumDefinition",
                  "src": "126:205:6"
                },
                {
                  "anonymous": false,
                  "documentation": "@dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\ncontract-specific code that enables us to report opaque error codes from upgradeable contracts.*",
                  "id": 888,
                  "name": "Failure",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 887,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 882,
                        "indexed": false,
                        "name": "error",
                        "nodeType": "VariableDeclaration",
                        "scope": 888,
                        "src": "587:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 881,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "587:4:6",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 884,
                        "indexed": false,
                        "name": "info",
                        "nodeType": "VariableDeclaration",
                        "scope": 888,
                        "src": "599:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 883,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "599:4:6",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 886,
                        "indexed": false,
                        "name": "detail",
                        "nodeType": "VariableDeclaration",
                        "scope": 888,
                        "src": "610:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 885,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "610:4:6",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "586:36:6"
                  },
                  "src": "573:50:6"
                },
                {
                  "body": {
                    "id": 911,
                    "nodeType": "Block",
                    "src": "818:82:6",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 899,
                                  "name": "err",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 890,
                                  "src": "846:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Error_$875",
                                    "typeString": "enum XVSVaultErrorReporter.Error"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_Error_$875",
                                    "typeString": "enum XVSVaultErrorReporter.Error"
                                  }
                                ],
                                "id": 898,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "841:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint"
                              },
                              "id": 900,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "841:9:6",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 902,
                                  "name": "info",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 892,
                                  "src": "857:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_FailureInfo_$880",
                                    "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_FailureInfo_$880",
                                    "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                  }
                                ],
                                "id": 901,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "852:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint"
                              },
                              "id": 903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "852:10:6",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "864:1:6",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              { "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }
                            ],
                            "id": 897,
                            "name": "Failure",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "833:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "833:33:6",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 906,
                        "nodeType": "EmitStatement",
                        "src": "828:38:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 908,
                              "name": "err",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 890,
                              "src": "889:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            ],
                            "id": 907,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "884:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "884:9:6",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 896,
                        "id": 910,
                        "nodeType": "Return",
                        "src": "877:16:6"
                      }
                    ]
                  },
                  "documentation": "@dev use this when reporting a known error from the money market or a non-upgradeable collaborator",
                  "id": 912,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fail",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 893,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 890,
                        "name": "err",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "765:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Error_$875",
                          "typeString": "enum XVSVaultErrorReporter.Error"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 889,
                          "name": "Error",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 875,
                          "src": "765:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$875",
                            "typeString": "enum XVSVaultErrorReporter.Error"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 892,
                        "name": "info",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "776:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_FailureInfo_$880",
                          "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 891,
                          "name": "FailureInfo",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 880,
                          "src": "776:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FailureInfo_$880",
                            "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "764:29:6"
                  },
                  "returnParameters": {
                    "id": 896,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 895,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 912,
                        "src": "812:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 894,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "812:4:6",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "811:6:6"
                  },
                  "scope": 939,
                  "src": "751:149:6",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 937,
                    "nodeType": "Block",
                    "src": "1107:92:6",
                    "statements": [
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 925,
                                  "name": "err",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 914,
                                  "src": "1135:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Error_$875",
                                    "typeString": "enum XVSVaultErrorReporter.Error"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_Error_$875",
                                    "typeString": "enum XVSVaultErrorReporter.Error"
                                  }
                                ],
                                "id": 924,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1130:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint"
                              },
                              "id": 926,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1130:9:6",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 928,
                                  "name": "info",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 916,
                                  "src": "1146:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_FailureInfo_$880",
                                    "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_enum$_FailureInfo_$880",
                                    "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                  }
                                ],
                                "id": 927,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1141:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": "uint"
                              },
                              "id": 929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1141:10:6",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 930,
                              "name": "opaqueError",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 918,
                              "src": "1153:11:6",
                              "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                              { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                            ],
                            "id": 923,
                            "name": "Failure",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 888,
                            "src": "1122:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256,uint256)"
                            }
                          },
                          "id": 931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1122:43:6",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 932,
                        "nodeType": "EmitStatement",
                        "src": "1117:48:6"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 934,
                              "name": "err",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "1188:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            ],
                            "id": 933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1183:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1183:9:6",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 922,
                        "id": 936,
                        "nodeType": "Return",
                        "src": "1176:16:6"
                      }
                    ]
                  },
                  "documentation": "@dev use this when reporting an opaque error from an upgradeable collaborator contract",
                  "id": 938,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "failOpaque",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 919,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 914,
                        "name": "err",
                        "nodeType": "VariableDeclaration",
                        "scope": 938,
                        "src": "1036:9:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Error_$875",
                          "typeString": "enum XVSVaultErrorReporter.Error"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 913,
                          "name": "Error",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 875,
                          "src": "1036:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Error_$875",
                            "typeString": "enum XVSVaultErrorReporter.Error"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 916,
                        "name": "info",
                        "nodeType": "VariableDeclaration",
                        "scope": 938,
                        "src": "1047:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_FailureInfo_$880",
                          "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                        },
                        "typeName": {
                          "contractScope": null,
                          "id": 915,
                          "name": "FailureInfo",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 880,
                          "src": "1047:11:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_FailureInfo_$880",
                            "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 918,
                        "name": "opaqueError",
                        "nodeType": "VariableDeclaration",
                        "scope": 938,
                        "src": "1065:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 917,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1065:4:6",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1035:47:6"
                  },
                  "returnParameters": {
                    "id": 922,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 921,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 938,
                        "src": "1101:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 920,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1101:4:6",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1100:6:6"
                  },
                  "scope": 939,
                  "src": "1016:183:6",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "internal"
                }
              ],
              "scope": 940,
              "src": "26:1175:6"
            }
          ],
          "src": "0:1202:6"
        }
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol": {
        "id": 7,
        "ast": {
          "absolutePath": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol",
          "exportedSymbols": { "XVSVaultProxy": [1176] },
          "id": 1177,
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 941, "literals": ["solidity", "^", "0.5", ".16"], "nodeType": "PragmaDirective", "src": "0:24:7" },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol",
              "file": "./XVSVaultStorage.sol",
              "id": 942,
              "nodeType": "ImportDirective",
              "scope": 1177,
              "sourceUnit": 1333,
              "src": "26:31:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol",
              "file": "./XVSVaultErrorReporter.sol",
              "id": 943,
              "nodeType": "ImportDirective",
              "scope": 1177,
              "sourceUnit": 940,
              "src": "58:37:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 944,
                    "name": "XVSVaultAdminStorage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1190,
                    "src": "210:20:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_XVSVaultAdminStorage_$1190",
                      "typeString": "contract XVSVaultAdminStorage"
                    }
                  },
                  "id": 945,
                  "nodeType": "InheritanceSpecifier",
                  "src": "210:20:7"
                },
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 946,
                    "name": "XVSVaultErrorReporter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 939,
                    "src": "232:21:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_XVSVaultErrorReporter_$939",
                      "typeString": "contract XVSVaultErrorReporter"
                    }
                  },
                  "id": 947,
                  "nodeType": "InheritanceSpecifier",
                  "src": "232:21:7"
                }
              ],
              "contractDependencies": [939, 1190],
              "contractKind": "contract",
              "documentation": "@title XVS Vault Proxy\n@author Venus\n@notice XVS Vault Proxy contract",
              "fullyImplemented": true,
              "id": 1176,
              "linearizedBaseContracts": [1176, 939, 1190],
              "name": "XVSVaultProxy",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": "@notice Emitted when pendingXVSVaultImplementation is changed",
                  "id": 953,
                  "name": "NewPendingImplementation",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 952,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 949,
                        "indexed": false,
                        "name": "oldPendingImplementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 953,
                        "src": "376:32:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 948,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "376:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 951,
                        "indexed": false,
                        "name": "newPendingImplementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 953,
                        "src": "410:32:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 950,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "410:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "375:68:7"
                  },
                  "src": "345:99:7"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice Emitted when pendingXVSVaultImplementation is accepted, which means XVS Vault implementation is updated",
                  "id": 959,
                  "name": "NewImplementation",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 958,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 955,
                        "indexed": false,
                        "name": "oldImplementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 959,
                        "src": "609:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 954,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "609:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 957,
                        "indexed": false,
                        "name": "newImplementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 959,
                        "src": "636:25:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 956,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "608:54:7"
                  },
                  "src": "585:78:7"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice Emitted when pendingAdmin is changed",
                  "id": 965,
                  "name": "NewPendingAdmin",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 964,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 961,
                        "indexed": false,
                        "name": "oldPendingAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 965,
                        "src": "759:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 960,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "759:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 963,
                        "indexed": false,
                        "name": "newPendingAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 965,
                        "src": "784:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 962,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "784:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "758:50:7"
                  },
                  "src": "737:72:7"
                },
                {
                  "anonymous": false,
                  "documentation": "@notice Emitted when pendingAdmin is accepted, which means admin is updated",
                  "id": 971,
                  "name": "NewAdmin",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 970,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 967,
                        "indexed": false,
                        "name": "oldAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 971,
                        "src": "929:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 966,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "929:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 969,
                        "indexed": false,
                        "name": "newAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 971,
                        "src": "947:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 968,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "947:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "928:36:7"
                  },
                  "src": "914:51:7"
                },
                {
                  "body": {
                    "id": 979,
                    "nodeType": "Block",
                    "src": "992:66:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 977,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 974,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "1033:5:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 975,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1359,
                              "src": "1041:3:7",
                              "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                            },
                            "id": 976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1041:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "1033:18:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 978,
                        "nodeType": "ExpressionStatement",
                        "src": "1033:18:7"
                      }
                    ]
                  },
                  "documentation": null,
                  "id": 980,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": { "id": 972, "nodeType": "ParameterList", "parameters": [], "src": "982:2:7" },
                  "returnParameters": { "id": 973, "nodeType": "ParameterList", "parameters": [], "src": "992:0:7" },
                  "scope": 1176,
                  "src": "971:87:7",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1018,
                    "nodeType": "Block",
                    "src": "1185:426:7",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                          "id": 990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 987,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1359,
                              "src": "1199:3:7",
                              "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                            },
                            "id": 988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1199:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 989,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "1213:5:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "1199:19:7",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "falseBody": null,
                        "id": 999,
                        "nodeType": "IfStatement",
                        "src": "1195:133:7",
                        "trueBody": {
                          "id": 998,
                          "nodeType": "Block",
                          "src": "1220:108:7",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 992,
                                      "name": "Error",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 875,
                                      "src": "1246:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Error_$875_$",
                                        "typeString": "type(enum XVSVaultErrorReporter.Error)"
                                      }
                                    },
                                    "id": 993,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "UNAUTHORIZED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1246:18:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Error_$875",
                                      "typeString": "enum XVSVaultErrorReporter.Error"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 994,
                                      "name": "FailureInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 880,
                                      "src": "1266:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_FailureInfo_$880_$",
                                        "typeString": "type(enum XVSVaultErrorReporter.FailureInfo)"
                                      }
                                    },
                                    "id": 995,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "SET_PENDING_IMPLEMENTATION_OWNER_CHECK",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "1266:50:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_FailureInfo_$880",
                                      "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Error_$875",
                                      "typeString": "enum XVSVaultErrorReporter.Error"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_FailureInfo_$880",
                                      "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                    }
                                  ],
                                  "id": 991,
                                  "name": "fail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 912,
                                  "src": "1241:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Error_$875_$_t_enum$_FailureInfo_$880_$returns$_t_uint256_$",
                                    "typeString": "function (enum XVSVaultErrorReporter.Error,enum XVSVaultErrorReporter.FailureInfo) returns (uint256)"
                                  }
                                },
                                "id": 996,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1241:76:7",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "functionReturnParameters": 986,
                              "id": 997,
                              "nodeType": "Return",
                              "src": "1234:83:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [1001],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1001,
                            "name": "oldPendingImplementation",
                            "nodeType": "VariableDeclaration",
                            "scope": 1018,
                            "src": "1338:32:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                            "typeName": {
                              "id": 1000,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1338:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1003,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 1002,
                          "name": "pendingXVSVaultImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "1373:29:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1338:64:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1004,
                            "name": "pendingXVSVaultImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "1413:29:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1005,
                            "name": "newPendingImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 982,
                            "src": "1445:24:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "1413:56:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 1007,
                        "nodeType": "ExpressionStatement",
                        "src": "1413:56:7"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1009,
                              "name": "oldPendingImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1001,
                              "src": "1510:24:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1010,
                              "name": "pendingXVSVaultImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "1536:29:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" }
                            ],
                            "id": 1008,
                            "name": "NewPendingImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 953,
                            "src": "1485:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1485:81:7",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 1012,
                        "nodeType": "EmitStatement",
                        "src": "1480:86:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1014,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 875,
                                "src": "1589:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$875_$",
                                  "typeString": "type(enum XVSVaultErrorReporter.Error)"
                                }
                              },
                              "id": 1015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NO_ERROR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "1589:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            ],
                            "id": 1013,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1584:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 1016,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1584:20:7",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 986,
                        "id": 1017,
                        "nodeType": "Return",
                        "src": "1577:27:7"
                      }
                    ]
                  },
                  "documentation": "* Admin Functions **",
                  "id": 1019,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setPendingImplementation",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 983,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 982,
                        "name": "newPendingImplementation",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "1129:32:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 981,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1129:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1128:34:7"
                  },
                  "returnParameters": {
                    "id": 986,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 985,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1019,
                        "src": "1179:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 984,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1179:4:7",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1178:6:7"
                  },
                  "scope": 1176,
                  "src": "1094:517:7",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1070,
                    "nodeType": "Block",
                    "src": "1960:718:7",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                          "id": 1027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1024,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1359,
                              "src": "2023:3:7",
                              "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                            },
                            "id": 1025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2023:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1026,
                            "name": "pendingXVSVaultImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "2037:29:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "2023:43:7",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "falseBody": null,
                        "id": 1036,
                        "nodeType": "IfStatement",
                        "src": "2019:162:7",
                        "trueBody": {
                          "id": 1035,
                          "nodeType": "Block",
                          "src": "2068:113:7",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1029,
                                      "name": "Error",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 875,
                                      "src": "2094:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Error_$875_$",
                                        "typeString": "type(enum XVSVaultErrorReporter.Error)"
                                      }
                                    },
                                    "id": 1030,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "UNAUTHORIZED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "2094:18:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Error_$875",
                                      "typeString": "enum XVSVaultErrorReporter.Error"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1031,
                                      "name": "FailureInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 880,
                                      "src": "2114:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_FailureInfo_$880_$",
                                        "typeString": "type(enum XVSVaultErrorReporter.FailureInfo)"
                                      }
                                    },
                                    "id": 1032,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "2114:55:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_FailureInfo_$880",
                                      "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Error_$875",
                                      "typeString": "enum XVSVaultErrorReporter.Error"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_FailureInfo_$880",
                                      "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                    }
                                  ],
                                  "id": 1028,
                                  "name": "fail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 912,
                                  "src": "2089:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Error_$875_$_t_enum$_FailureInfo_$880_$returns$_t_uint256_$",
                                    "typeString": "function (enum XVSVaultErrorReporter.Error,enum XVSVaultErrorReporter.FailureInfo) returns (uint256)"
                                  }
                                },
                                "id": 1033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2089:81:7",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "functionReturnParameters": 1023,
                              "id": 1034,
                              "nodeType": "Return",
                              "src": "2082:88:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [1038],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1038,
                            "name": "oldImplementation",
                            "nodeType": "VariableDeclaration",
                            "scope": 1070,
                            "src": "2243:25:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                            "typeName": {
                              "id": 1037,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2243:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1040,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 1039,
                          "name": "implementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1187,
                          "src": "2271:14:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2243:42:7"
                      },
                      {
                        "assignments": [1042],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1042,
                            "name": "oldPendingImplementation",
                            "nodeType": "VariableDeclaration",
                            "scope": 1070,
                            "src": "2295:32:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                            "typeName": {
                              "id": 1041,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2295:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1044,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 1043,
                          "name": "pendingXVSVaultImplementation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1189,
                          "src": "2330:29:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2295:64:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1045,
                            "name": "implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1187,
                            "src": "2370:14:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1046,
                            "name": "pendingXVSVaultImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "2387:29:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "2370:46:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 1048,
                        "nodeType": "ExpressionStatement",
                        "src": "2370:46:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1053,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1049,
                            "name": "pendingXVSVaultImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1189,
                            "src": "2427:29:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1051,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2467:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }],
                              "id": 1050,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2459:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1052,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2459:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2427:42:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 1054,
                        "nodeType": "ExpressionStatement",
                        "src": "2427:42:7"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1056,
                              "name": "oldImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1038,
                              "src": "2503:17:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1057,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1187,
                              "src": "2522:14:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" }
                            ],
                            "id": 1055,
                            "name": "NewImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 959,
                            "src": "2485:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2485:52:7",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 1059,
                        "nodeType": "EmitStatement",
                        "src": "2480:57:7"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1061,
                              "name": "oldPendingImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1042,
                              "src": "2577:24:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1062,
                              "name": "pendingXVSVaultImplementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1189,
                              "src": "2603:29:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" }
                            ],
                            "id": 1060,
                            "name": "NewPendingImplementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 953,
                            "src": "2552:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2552:81:7",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 1064,
                        "nodeType": "EmitStatement",
                        "src": "2547:86:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1066,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 875,
                                "src": "2656:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$875_$",
                                  "typeString": "type(enum XVSVaultErrorReporter.Error)"
                                }
                              },
                              "id": 1067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NO_ERROR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "2656:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            ],
                            "id": 1065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2651:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2651:20:7",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 1023,
                        "id": 1069,
                        "nodeType": "Return",
                        "src": "2644:27:7"
                      }
                    ]
                  },
                  "documentation": "@notice Accepts new implementation of XVS Vault. msg.sender must be pendingImplementation\n@dev Admin function for new implementation to accept it's role as implementation\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
                  "id": 1071,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_acceptImplementation",
                  "nodeType": "FunctionDefinition",
                  "parameters": { "id": 1020, "nodeType": "ParameterList", "parameters": [], "src": "1935:2:7" },
                  "returnParameters": {
                    "id": 1023,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1022,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1071,
                        "src": "1954:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 1021,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1954:4:7",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "1953:6:7"
                  },
                  "scope": 1176,
                  "src": "1905:773:7",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1109,
                    "nodeType": "Block",
                    "src": "3152:548:7",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                          "id": 1081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1078,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1359,
                              "src": "3198:3:7",
                              "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                            },
                            "id": 1079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3198:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1080,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "3212:5:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "3198:19:7",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "falseBody": null,
                        "id": 1090,
                        "nodeType": "IfStatement",
                        "src": "3194:124:7",
                        "trueBody": {
                          "id": 1089,
                          "nodeType": "Block",
                          "src": "3219:99:7",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1083,
                                      "name": "Error",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 875,
                                      "src": "3245:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Error_$875_$",
                                        "typeString": "type(enum XVSVaultErrorReporter.Error)"
                                      }
                                    },
                                    "id": 1084,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "UNAUTHORIZED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "3245:18:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Error_$875",
                                      "typeString": "enum XVSVaultErrorReporter.Error"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1085,
                                      "name": "FailureInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 880,
                                      "src": "3265:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_FailureInfo_$880_$",
                                        "typeString": "type(enum XVSVaultErrorReporter.FailureInfo)"
                                      }
                                    },
                                    "id": 1086,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "SET_PENDING_ADMIN_OWNER_CHECK",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "3265:41:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_FailureInfo_$880",
                                      "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Error_$875",
                                      "typeString": "enum XVSVaultErrorReporter.Error"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_FailureInfo_$880",
                                      "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                    }
                                  ],
                                  "id": 1082,
                                  "name": "fail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 912,
                                  "src": "3240:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Error_$875_$_t_enum$_FailureInfo_$880_$returns$_t_uint256_$",
                                    "typeString": "function (enum XVSVaultErrorReporter.Error,enum XVSVaultErrorReporter.FailureInfo) returns (uint256)"
                                  }
                                },
                                "id": 1087,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3240:67:7",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "functionReturnParameters": 1077,
                              "id": 1088,
                              "nodeType": "Return",
                              "src": "3233:74:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [1092],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1092,
                            "name": "oldPendingAdmin",
                            "nodeType": "VariableDeclaration",
                            "scope": 1109,
                            "src": "3388:23:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                            "typeName": {
                              "id": 1091,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3388:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1094,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 1093,
                          "name": "pendingAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1185,
                          "src": "3414:12:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3388:38:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1095,
                            "name": "pendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "3494:12:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1096,
                            "name": "newPendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1073,
                            "src": "3509:15:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "3494:30:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 1098,
                        "nodeType": "ExpressionStatement",
                        "src": "3494:30:7"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1100,
                              "name": "oldPendingAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1092,
                              "src": "3622:15:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1101,
                              "name": "newPendingAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1073,
                              "src": "3639:15:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" }
                            ],
                            "id": 1099,
                            "name": "NewPendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "3606:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3606:49:7",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 1103,
                        "nodeType": "EmitStatement",
                        "src": "3601:54:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1105,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 875,
                                "src": "3678:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$875_$",
                                  "typeString": "type(enum XVSVaultErrorReporter.Error)"
                                }
                              },
                              "id": 1106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NO_ERROR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3678:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            ],
                            "id": 1104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3673:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 1107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3673:20:7",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 1077,
                        "id": 1108,
                        "nodeType": "Return",
                        "src": "3666:27:7"
                      }
                    ]
                  },
                  "documentation": "@notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\n@dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\n@param newPendingAdmin New pending admin.\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
                  "id": 1110,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setPendingAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1073,
                        "name": "newPendingAdmin",
                        "nodeType": "VariableDeclaration",
                        "scope": 1110,
                        "src": "3105:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                        "typeName": {
                          "id": 1072,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3105:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3104:25:7"
                  },
                  "returnParameters": {
                    "id": 1077,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1076,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1110,
                        "src": "3146:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 1075,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3146:4:7",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "3145:6:7"
                  },
                  "scope": 1176,
                  "src": "3079:621:7",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1161,
                    "nodeType": "Block",
                    "src": "4013:614:7",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": { "typeIdentifier": "t_address", "typeString": "address" },
                          "id": 1118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 1115,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1359,
                              "src": "4067:3:7",
                              "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                            },
                            "id": 1116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4067:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 1117,
                            "name": "pendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "4081:12:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "4067:26:7",
                          "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                        },
                        "falseBody": null,
                        "id": 1127,
                        "nodeType": "IfStatement",
                        "src": "4063:134:7",
                        "trueBody": {
                          "id": 1126,
                          "nodeType": "Block",
                          "src": "4095:102:7",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1120,
                                      "name": "Error",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 875,
                                      "src": "4121:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Error_$875_$",
                                        "typeString": "type(enum XVSVaultErrorReporter.Error)"
                                      }
                                    },
                                    "id": 1121,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "UNAUTHORIZED",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "4121:18:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Error_$875",
                                      "typeString": "enum XVSVaultErrorReporter.Error"
                                    }
                                  },
                                  {
                                    "argumentTypes": null,
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 1122,
                                      "name": "FailureInfo",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 880,
                                      "src": "4141:11:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_FailureInfo_$880_$",
                                        "typeString": "type(enum XVSVaultErrorReporter.FailureInfo)"
                                      }
                                    },
                                    "id": 1123,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "ACCEPT_ADMIN_PENDING_ADMIN_CHECK",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": null,
                                    "src": "4141:44:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_FailureInfo_$880",
                                      "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_enum$_Error_$875",
                                      "typeString": "enum XVSVaultErrorReporter.Error"
                                    },
                                    {
                                      "typeIdentifier": "t_enum$_FailureInfo_$880",
                                      "typeString": "enum XVSVaultErrorReporter.FailureInfo"
                                    }
                                  ],
                                  "id": 1119,
                                  "name": "fail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 912,
                                  "src": "4116:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_Error_$875_$_t_enum$_FailureInfo_$880_$returns$_t_uint256_$",
                                    "typeString": "function (enum XVSVaultErrorReporter.Error,enum XVSVaultErrorReporter.FailureInfo) returns (uint256)"
                                  }
                                },
                                "id": 1124,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4116:70:7",
                                "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                              },
                              "functionReturnParameters": 1114,
                              "id": 1125,
                              "nodeType": "Return",
                              "src": "4109:77:7"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [1129],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1129,
                            "name": "oldAdmin",
                            "nodeType": "VariableDeclaration",
                            "scope": 1161,
                            "src": "4259:16:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                            "typeName": {
                              "id": 1128,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4259:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1131,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 1130,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1183,
                          "src": "4278:5:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4259:24:7"
                      },
                      {
                        "assignments": [1133],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1133,
                            "name": "oldPendingAdmin",
                            "nodeType": "VariableDeclaration",
                            "scope": 1161,
                            "src": "4293:23:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                            "typeName": {
                              "id": 1132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4293:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1135,
                        "initialValue": {
                          "argumentTypes": null,
                          "id": 1134,
                          "name": "pendingAdmin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1185,
                          "src": "4319:12:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4293:38:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1136,
                            "name": "admin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1183,
                            "src": "4389:5:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 1137,
                            "name": "pendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "4397:12:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "src": "4389:20:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 1139,
                        "nodeType": "ExpressionStatement",
                        "src": "4389:20:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 1140,
                            "name": "pendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1185,
                            "src": "4455:12:7",
                            "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 1142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4478:1:7",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [{ "typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0" }],
                              "id": 1141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4470:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 1143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4470:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "4455:25:7",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "id": 1145,
                        "nodeType": "ExpressionStatement",
                        "src": "4455:25:7"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1147,
                              "name": "oldAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1129,
                              "src": "4505:8:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1148,
                              "name": "admin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1183,
                              "src": "4515:5:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" }
                            ],
                            "id": 1146,
                            "name": "NewAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 971,
                            "src": "4496:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4496:25:7",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 1150,
                        "nodeType": "EmitStatement",
                        "src": "4491:30:7"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1152,
                              "name": "oldPendingAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1133,
                              "src": "4552:15:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1153,
                              "name": "pendingAdmin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1185,
                              "src": "4569:12:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_address", "typeString": "address" },
                              { "typeIdentifier": "t_address", "typeString": "address" }
                            ],
                            "id": 1151,
                            "name": "NewPendingAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 965,
                            "src": "4536:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4536:46:7",
                          "typeDescriptions": { "typeIdentifier": "t_tuple$__$", "typeString": "tuple()" }
                        },
                        "id": 1155,
                        "nodeType": "EmitStatement",
                        "src": "4531:51:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1157,
                                "name": "Error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 875,
                                "src": "4605:5:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Error_$875_$",
                                  "typeString": "type(enum XVSVaultErrorReporter.Error)"
                                }
                              },
                              "id": 1158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "NO_ERROR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4605:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_Error_$875",
                                "typeString": "enum XVSVaultErrorReporter.Error"
                              }
                            ],
                            "id": 1156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4600:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": "uint"
                          },
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4600:20:7",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "functionReturnParameters": 1114,
                        "id": 1160,
                        "nodeType": "Return",
                        "src": "4593:27:7"
                      }
                    ]
                  },
                  "documentation": "@notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\n@dev Admin function for pending admin to accept role and update admin\n@return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)",
                  "id": 1162,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_acceptAdmin",
                  "nodeType": "FunctionDefinition",
                  "parameters": { "id": 1111, "nodeType": "ParameterList", "parameters": [], "src": "3988:2:7" },
                  "returnParameters": {
                    "id": 1114,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1113,
                        "name": "",
                        "nodeType": "VariableDeclaration",
                        "scope": 1162,
                        "src": "4007:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                        "typeName": {
                          "id": 1112,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4007:4:7",
                          "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "src": "4006:6:7"
                  },
                  "scope": 1176,
                  "src": "3967:660:7",
                  "stateMutability": "nonpayable",
                  "superFunction": null,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1174,
                    "nodeType": "Block",
                    "src": "4845:478:7",
                    "statements": [
                      {
                        "assignments": [1166, null],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1166,
                            "name": "success",
                            "nodeType": "VariableDeclaration",
                            "scope": 1174,
                            "src": "4922:12:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                            "typeName": {
                              "id": 1165,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "4922:4:7",
                              "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                            },
                            "value": null,
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1172,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1169,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1359,
                                "src": "4968:3:7",
                                "typeDescriptions": { "typeIdentifier": "t_magic_message", "typeString": "msg" }
                              },
                              "id": 1170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "4968:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              { "typeIdentifier": "t_bytes_calldata_ptr", "typeString": "bytes calldata" }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 1167,
                              "name": "implementation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1187,
                              "src": "4940:14:7",
                              "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                            },
                            "id": 1168,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4940:27:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 1171,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4940:37:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4921:56:7"
                      },
                      {
                        "externalReferences": [
                          {
                            "success": {
                              "declaration": 1166,
                              "isOffset": false,
                              "isSlot": false,
                              "src": "5123:7:7",
                              "valueSize": 1
                            }
                          }
                        ],
                        "id": 1173,
                        "nodeType": "InlineAssembly",
                        "operations": "{\n    let free_mem_ptr := mload(0x40)\n    returndatacopy(free_mem_ptr, 0, returndatasize())\n    switch success\n    case 0 {\n        revert(free_mem_ptr, returndatasize())\n    }\n    default {\n        return(free_mem_ptr, returndatasize())\n    }\n}",
                        "src": "4988:329:7"
                      }
                    ]
                  },
                  "documentation": "@dev Delegates execution to an implementation contract.\nIt returns to the external caller whatever the implementation returns\nor forwards reverts.",
                  "id": 1175,
                  "implemented": true,
                  "kind": "fallback",
                  "modifiers": [],
                  "name": "",
                  "nodeType": "FunctionDefinition",
                  "parameters": { "id": 1163, "nodeType": "ParameterList", "parameters": [], "src": "4825:2:7" },
                  "returnParameters": { "id": 1164, "nodeType": "ParameterList", "parameters": [], "src": "4845:0:7" },
                  "scope": 1176,
                  "src": "4817:506:7",
                  "stateMutability": "payable",
                  "superFunction": null,
                  "visibility": "external"
                }
              ],
              "scope": 1177,
              "src": "184:5141:7"
            }
          ],
          "src": "0:5326:7"
        }
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol": {
        "id": 8,
        "ast": {
          "absolutePath": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol",
          "exportedSymbols": { "XVSVaultAdminStorage": [1190], "XVSVaultStorage": [1332], "XVSVaultStorageV1": [1287] },
          "id": 1333,
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 1178, "literals": ["solidity", "^", "0.5", ".16"], "nodeType": "PragmaDirective", "src": "0:24:8" },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol",
              "file": "../Utils/SafeMath.sol",
              "id": 1179,
              "nodeType": "ImportDirective",
              "scope": 1333,
              "sourceUnit": 597,
              "src": "26:31:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol",
              "file": "../Utils/IBEP20.sol",
              "id": 1180,
              "nodeType": "ImportDirective",
              "scope": 1333,
              "sourceUnit": 172,
              "src": "58:29:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol",
              "file": "../Tokens/Prime/IPrime.sol",
              "id": 1181,
              "nodeType": "ImportDirective",
              "scope": 1333,
              "sourceUnit": 28,
              "src": "88:36:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1190,
              "linearizedBaseContracts": [1190],
              "name": "XVSVaultAdminStorage",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1183,
                  "name": "admin",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "225:20:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 1182,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "225:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1185,
                  "name": "pendingAdmin",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "323:27:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 1184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1187,
                  "name": "implementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "415:29:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 1186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "415:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1189,
                  "name": "pendingXVSVaultImplementation",
                  "nodeType": "VariableDeclaration",
                  "scope": 1190,
                  "src": "510:44:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 1188,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "value": null,
                  "visibility": "public"
                }
              ],
              "scope": 1333,
              "src": "126:431:8"
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1191,
                    "name": "XVSVaultAdminStorage",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1190,
                    "src": "589:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_XVSVaultAdminStorage_$1190",
                      "typeString": "contract XVSVaultAdminStorage"
                    }
                  },
                  "id": 1192,
                  "nodeType": "InheritanceSpecifier",
                  "src": "589:20:8"
                }
              ],
              "contractDependencies": [1190],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1287,
              "linearizedBaseContracts": [1287, 1190],
              "name": "XVSVaultStorageV1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1194,
                  "name": "_notEntered",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "670:25:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 1193,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:4:8",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1196,
                  "name": "xvsStore",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "741:23:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 1195,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "741:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1198,
                  "name": "xvsAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "809:25:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 1197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "809:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1202,
                  "name": "rewardTokenAmountsPerBlockOrSecond",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "927:69:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1201,
                    "keyType": {
                      "id": 1199,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "935:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "927:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 1200,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "946:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "canonicalName": "XVSVaultStorageV1.UserInfo",
                  "id": 1209,
                  "members": [
                    {
                      "constant": false,
                      "id": 1204,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1209,
                      "src": "1064:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 1203,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1064:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1206,
                      "name": "rewardDebt",
                      "nodeType": "VariableDeclaration",
                      "scope": 1209,
                      "src": "1088:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 1205,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1088:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1208,
                      "name": "pendingWithdrawals",
                      "nodeType": "VariableDeclaration",
                      "scope": 1209,
                      "src": "1116:26:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 1207,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1116:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "UserInfo",
                  "nodeType": "StructDefinition",
                  "scope": 1287,
                  "src": "1038:111:8",
                  "visibility": "public"
                },
                {
                  "canonicalName": "XVSVaultStorageV1.PoolInfo",
                  "id": 1220,
                  "members": [
                    {
                      "constant": false,
                      "id": 1211,
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "scope": 1220,
                      "src": "1207:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IBEP20_$171",
                        "typeString": "contract IBEP20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 1210,
                        "name": "IBEP20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 171,
                        "src": "1207:6:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IBEP20_$171",
                          "typeString": "contract IBEP20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1213,
                      "name": "allocPoint",
                      "nodeType": "VariableDeclaration",
                      "scope": 1220,
                      "src": "1268:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 1212,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1268:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1215,
                      "name": "lastRewardBlockOrSecond",
                      "nodeType": "VariableDeclaration",
                      "scope": 1220,
                      "src": "1349:31:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 1214,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1349:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1217,
                      "name": "accRewardPerShare",
                      "nodeType": "VariableDeclaration",
                      "scope": 1220,
                      "src": "1461:25:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 1216,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1461:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1219,
                      "name": "lockPeriod",
                      "nodeType": "VariableDeclaration",
                      "scope": 1220,
                      "src": "1545:18:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 1218,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1545:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "PoolInfo",
                  "nodeType": "StructDefinition",
                  "scope": 1287,
                  "src": "1181:447:8",
                  "visibility": "public"
                },
                {
                  "canonicalName": "XVSVaultStorageV1.WithdrawalRequest",
                  "id": 1227,
                  "members": [
                    {
                      "constant": false,
                      "id": 1222,
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "scope": 1227,
                      "src": "1714:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                      "typeName": {
                        "id": 1221,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1714:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1224,
                      "name": "lockedUntil",
                      "nodeType": "VariableDeclaration",
                      "scope": 1227,
                      "src": "1738:19:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" },
                      "typeName": {
                        "id": 1223,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1738:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1226,
                      "name": "afterUpgrade",
                      "nodeType": "VariableDeclaration",
                      "scope": 1227,
                      "src": "1767:20:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" },
                      "typeName": {
                        "id": 1225,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1767:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint128", "typeString": "uint128" }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "WithdrawalRequest",
                  "nodeType": "StructDefinition",
                  "scope": 1287,
                  "src": "1679:115:8",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1235,
                  "name": "userInfos",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "1845:87:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1209_storage_$_$_$",
                    "typeString": "mapping(address => mapping(uint256 => mapping(address => struct XVSVaultStorageV1.UserInfo)))"
                  },
                  "typeName": {
                    "id": 1234,
                    "keyType": {
                      "id": 1228,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1853:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "1845:68:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1209_storage_$_$_$",
                      "typeString": "mapping(address => mapping(uint256 => mapping(address => struct XVSVaultStorageV1.UserInfo)))"
                    },
                    "valueType": {
                      "id": 1233,
                      "keyType": {
                        "id": 1229,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1872:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "nodeType": "Mapping",
                      "src": "1864:48:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1209_storage_$_$",
                        "typeString": "mapping(uint256 => mapping(address => struct XVSVaultStorageV1.UserInfo))"
                      },
                      "valueType": {
                        "id": 1232,
                        "keyType": {
                          "id": 1230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1891:7:8",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "Mapping",
                        "src": "1883:28:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1209_storage_$",
                          "typeString": "mapping(address => struct XVSVaultStorageV1.UserInfo)"
                        },
                        "valueType": {
                          "contractScope": null,
                          "id": 1231,
                          "name": "UserInfo",
                          "nodeType": "UserDefinedTypeName",
                          "referencedDeclaration": 1209,
                          "src": "1902:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserInfo_$1209_storage_ptr",
                            "typeString": "struct XVSVaultStorageV1.UserInfo"
                          }
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1240,
                  "name": "poolInfos",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "1965:47:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PoolInfo_$1220_storage_$dyn_storage_$",
                    "typeString": "mapping(address => struct XVSVaultStorageV1.PoolInfo[])"
                  },
                  "typeName": {
                    "id": 1239,
                    "keyType": {
                      "id": 1236,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1973:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "1965:30:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_PoolInfo_$1220_storage_$dyn_storage_$",
                      "typeString": "mapping(address => struct XVSVaultStorageV1.PoolInfo[])"
                    },
                    "valueType": {
                      "baseType": {
                        "contractScope": null,
                        "id": 1237,
                        "name": "PoolInfo",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1220,
                        "src": "1984:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PoolInfo_$1220_storage_ptr",
                          "typeString": "struct XVSVaultStorageV1.PoolInfo"
                        }
                      },
                      "id": 1238,
                      "length": null,
                      "nodeType": "ArrayTypeName",
                      "src": "1984:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PoolInfo_$1220_storage_$dyn_storage_ptr",
                        "typeString": "struct XVSVaultStorageV1.PoolInfo[]"
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1244,
                  "name": "totalAllocPoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "2106:51:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1243,
                    "keyType": {
                      "id": 1241,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2114:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "2106:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 1242,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2125:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1253,
                  "name": "withdrawalRequests",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "2222:107:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_WithdrawalRequest_$1227_storage_$dyn_storage_$_$_$",
                    "typeString": "mapping(address => mapping(uint256 => mapping(address => struct XVSVaultStorageV1.WithdrawalRequest[])))"
                  },
                  "typeName": {
                    "id": 1252,
                    "keyType": {
                      "id": 1245,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2230:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "2222:79:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_WithdrawalRequest_$1227_storage_$dyn_storage_$_$_$",
                      "typeString": "mapping(address => mapping(uint256 => mapping(address => struct XVSVaultStorageV1.WithdrawalRequest[])))"
                    },
                    "valueType": {
                      "id": 1251,
                      "keyType": {
                        "id": 1246,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2249:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "nodeType": "Mapping",
                      "src": "2241:59:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_array$_t_struct$_WithdrawalRequest_$1227_storage_$dyn_storage_$_$",
                        "typeString": "mapping(uint256 => mapping(address => struct XVSVaultStorageV1.WithdrawalRequest[]))"
                      },
                      "valueType": {
                        "id": 1250,
                        "keyType": {
                          "id": 1247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2268:7:8",
                          "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                        },
                        "nodeType": "Mapping",
                        "src": "2260:39:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_WithdrawalRequest_$1227_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct XVSVaultStorageV1.WithdrawalRequest[])"
                        },
                        "valueType": {
                          "baseType": {
                            "contractScope": null,
                            "id": 1248,
                            "name": "WithdrawalRequest",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 1227,
                            "src": "2279:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawalRequest_$1227_storage_ptr",
                              "typeString": "struct XVSVaultStorageV1.WithdrawalRequest"
                            }
                          },
                          "id": 1249,
                          "length": null,
                          "nodeType": "ArrayTypeName",
                          "src": "2279:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_WithdrawalRequest_$1227_storage_$dyn_storage_ptr",
                            "typeString": "struct XVSVaultStorageV1.WithdrawalRequest[]"
                          }
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1257,
                  "name": "__oldDelegatesSlot",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "2428:54:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 1256,
                    "keyType": {
                      "id": 1254,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2436:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "2428:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueType": {
                      "id": 1255,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2447:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "canonicalName": "XVSVaultStorageV1.Checkpoint",
                  "id": 1262,
                  "members": [
                    {
                      "constant": false,
                      "id": 1259,
                      "name": "fromBlockOrSecond",
                      "nodeType": "VariableDeclaration",
                      "scope": 1262,
                      "src": "2603:24:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" },
                      "typeName": {
                        "id": 1258,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2603:6:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1261,
                      "name": "votes",
                      "nodeType": "VariableDeclaration",
                      "scope": 1262,
                      "src": "2637:12:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": { "typeIdentifier": "t_uint96", "typeString": "uint96" },
                      "typeName": {
                        "id": 1260,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "2637:6:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint96", "typeString": "uint96" }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "name": "Checkpoint",
                  "nodeType": "StructDefinition",
                  "scope": 1287,
                  "src": "2575:81:8",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1268,
                  "name": "__oldCheckpointsSlot",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "2776:78:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1262_storage_$_$",
                    "typeString": "mapping(address => mapping(uint32 => struct XVSVaultStorageV1.Checkpoint))"
                  },
                  "typeName": {
                    "id": 1267,
                    "keyType": {
                      "id": 1263,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2784:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "2776:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1262_storage_$_$",
                      "typeString": "mapping(address => mapping(uint32 => struct XVSVaultStorageV1.Checkpoint))"
                    },
                    "valueType": {
                      "id": 1266,
                      "keyType": {
                        "id": 1264,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2803:6:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                      },
                      "nodeType": "Mapping",
                      "src": "2795:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1262_storage_$",
                        "typeString": "mapping(uint32 => struct XVSVaultStorageV1.Checkpoint)"
                      },
                      "valueType": {
                        "contractScope": null,
                        "id": 1265,
                        "name": "Checkpoint",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1262,
                        "src": "2813:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$1262_storage_ptr",
                          "typeString": "struct XVSVaultStorageV1.Checkpoint"
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1272,
                  "name": "__oldNumCheckpointsSlot",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "2961:58:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                    "typeString": "mapping(address => uint32)"
                  },
                  "typeName": {
                    "id": 1271,
                    "keyType": {
                      "id": 1269,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2969:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "2961:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                      "typeString": "mapping(address => uint32)"
                    },
                    "valueType": {
                      "id": 1270,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2980:6:8",
                      "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                    }
                  },
                  "value": null,
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1276,
                  "name": "nonces",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "3097:38:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1275,
                    "keyType": {
                      "id": 1273,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3105:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "3097:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 1274,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "3116:4:8",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 1281,
                  "name": "DOMAIN_TYPEHASH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "3205:130:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 1277,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:7:8",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "value": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3265:69:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                          "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                        },
                        "value": "EIP712Domain(string name,uint256 chainId,address verifyingContract)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866",
                          "typeString": "literal_string \"EIP712Domain(string name,uint256 chainId,address verifyingContract)\""
                        }
                      ],
                      "id": 1278,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1353,
                      "src": "3255:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3255:80:8",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 1286,
                  "name": "DELEGATION_TYPEHASH",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "3426:125:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" },
                  "typeName": {
                    "id": 1282,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3426:7:8",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "value": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "44656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929",
                        "id": 1284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3490:60:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                          "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                        },
                        "value": "Delegation(address delegatee,uint256 nonce,uint256 expiry)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_e48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf",
                          "typeString": "literal_string \"Delegation(address delegatee,uint256 nonce,uint256 expiry)\""
                        }
                      ],
                      "id": 1283,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1353,
                      "src": "3480:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3480:71:8",
                    "typeDescriptions": { "typeIdentifier": "t_bytes32", "typeString": "bytes32" }
                  },
                  "visibility": "public"
                }
              ],
              "scope": 1333,
              "src": "559:2995:8"
            },
            {
              "baseContracts": [
                {
                  "arguments": null,
                  "baseName": {
                    "contractScope": null,
                    "id": 1288,
                    "name": "XVSVaultStorageV1",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1287,
                    "src": "3584:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_XVSVaultStorageV1_$1287",
                      "typeString": "contract XVSVaultStorageV1"
                    }
                  },
                  "id": 1289,
                  "nodeType": "InheritanceSpecifier",
                  "src": "3584:17:8"
                }
              ],
              "contractDependencies": [1190, 1287],
              "contractKind": "contract",
              "documentation": null,
              "fullyImplemented": true,
              "id": 1332,
              "linearizedBaseContracts": [1332, 1287, 1190],
              "name": "XVSVaultStorage",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1293,
                  "name": "delegates",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "3659:44:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                    "typeString": "mapping(address => address)"
                  },
                  "typeName": {
                    "id": 1292,
                    "keyType": {
                      "id": 1290,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3667:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "3659:27:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                      "typeString": "mapping(address => address)"
                    },
                    "valueType": {
                      "id": 1291,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3678:7:8",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1299,
                  "name": "checkpoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "3783:68:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1262_storage_$_$",
                    "typeString": "mapping(address => mapping(uint32 => struct XVSVaultStorageV1.Checkpoint))"
                  },
                  "typeName": {
                    "id": 1298,
                    "keyType": {
                      "id": 1294,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3791:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "3783:49:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1262_storage_$_$",
                      "typeString": "mapping(address => mapping(uint32 => struct XVSVaultStorageV1.Checkpoint))"
                    },
                    "valueType": {
                      "id": 1297,
                      "keyType": {
                        "id": 1295,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3810:6:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                      },
                      "nodeType": "Mapping",
                      "src": "3802:29:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint32_$_t_struct$_Checkpoint_$1262_storage_$",
                        "typeString": "mapping(uint32 => struct XVSVaultStorageV1.Checkpoint)"
                      },
                      "valueType": {
                        "contractScope": null,
                        "id": 1296,
                        "name": "Checkpoint",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 1262,
                        "src": "3820:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Checkpoint_$1262_storage_ptr",
                          "typeString": "struct XVSVaultStorageV1.Checkpoint"
                        }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1303,
                  "name": "numCheckpoints",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "3917:48:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                    "typeString": "mapping(address => uint32)"
                  },
                  "typeName": {
                    "id": 1302,
                    "keyType": {
                      "id": 1300,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3925:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "3917:26:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint32_$",
                      "typeString": "mapping(address => uint32)"
                    },
                    "valueType": {
                      "id": 1301,
                      "name": "uint32",
                      "nodeType": "ElementaryTypeName",
                      "src": "3936:6:8",
                      "typeDescriptions": { "typeIdentifier": "t_uint32", "typeString": "uint32" }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1309,
                  "name": "totalPendingWithdrawals",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "4071:80:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(uint256 => uint256))"
                  },
                  "typeName": {
                    "id": 1308,
                    "keyType": {
                      "id": 1304,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4079:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "4071:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(uint256 => uint256))"
                    },
                    "valueType": {
                      "id": 1307,
                      "keyType": {
                        "id": 1305,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4098:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      },
                      "nodeType": "Mapping",
                      "src": "4090:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      },
                      "valueType": {
                        "id": 1306,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4109:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1311,
                  "name": "vaultPaused",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "4200:23:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" },
                  "typeName": {
                    "id": 1310,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4200:4:8",
                    "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1315,
                  "name": "isStakedToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "4288:45:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1314,
                    "keyType": {
                      "id": 1312,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4296:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "4288:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueType": {
                      "id": 1313,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "4307:4:8",
                      "typeDescriptions": { "typeIdentifier": "t_bool", "typeString": "bool" }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1321,
                  "name": "pendingRewardTransfers",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "4415:77:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 1320,
                    "keyType": {
                      "id": 1316,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4423:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                    },
                    "nodeType": "Mapping",
                    "src": "4415:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 1319,
                      "keyType": {
                        "id": 1317,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4442:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                      },
                      "nodeType": "Mapping",
                      "src": "4434:27:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 1318,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4453:7:8",
                        "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                      }
                    }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1323,
                  "name": "primeToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "4544:24:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_contract$_IPrime_$27", "typeString": "contract IPrime" },
                  "typeName": {
                    "contractScope": null,
                    "id": 1322,
                    "name": "IPrime",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 27,
                    "src": "4544:6:8",
                    "typeDescriptions": { "typeIdentifier": "t_contract$_IPrime_$27", "typeString": "contract IPrime" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1325,
                  "name": "primeRewardToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "4648:31:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" },
                  "typeName": {
                    "id": 1324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4648:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": { "typeIdentifier": "t_address", "typeString": "address" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1327,
                  "name": "primePoolId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "4754:26:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" },
                  "typeName": {
                    "id": 1326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4754:7:8",
                    "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                  },
                  "value": null,
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1331,
                  "name": "__gap",
                  "nodeType": "VariableDeclaration",
                  "scope": 1332,
                  "src": "5046:25:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$46_storage",
                    "typeString": "uint256[46]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1328,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5046:7:8",
                      "typeDescriptions": { "typeIdentifier": "t_uint256", "typeString": "uint256" }
                    },
                    "id": 1330,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "3436",
                      "id": 1329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5054:2:8",
                      "subdenomination": null,
                      "typeDescriptions": { "typeIdentifier": "t_rational_46_by_1", "typeString": "int_const 46" },
                      "value": "46"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "5046:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$46_storage_ptr",
                      "typeString": "uint256[46]"
                    }
                  },
                  "value": null,
                  "visibility": "private"
                }
              ],
              "scope": 1333,
              "src": "3556:1518:8"
            }
          ],
          "src": "0:5075:8"
        }
      },
      "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol": {
        "id": 9,
        "ast": {
          "absolutePath": "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol",
          "exportedSymbols": {},
          "id": 1336,
          "nodeType": "SourceUnit",
          "nodes": [
            { "id": 1334, "literals": ["solidity", ">", "0.0", ".0"], "nodeType": "PragmaDirective", "src": "39:23:9" },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol",
              "file": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol",
              "id": 1335,
              "nodeType": "ImportDirective",
              "scope": 1336,
              "sourceUnit": 871,
              "src": "63:71:9",
              "symbolAliases": [],
              "unitAlias": ""
            }
          ],
          "src": "39:96:9"
        }
      },
      "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol": {
        "id": 10,
        "ast": {
          "absolutePath": "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol",
          "exportedSymbols": {},
          "id": 1339,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1337,
              "literals": ["solidity", ">", "0.0", ".0"],
              "nodeType": "PragmaDirective",
              "src": "39:23:10"
            },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol",
              "file": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol",
              "id": 1338,
              "nodeType": "ImportDirective",
              "scope": 1339,
              "sourceUnit": 940,
              "src": "63:84:10",
              "symbolAliases": [],
              "unitAlias": ""
            }
          ],
          "src": "39:109:10"
        }
      },
      "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol": {
        "id": 11,
        "ast": {
          "absolutePath": "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol",
          "exportedSymbols": {},
          "id": 1342,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1340,
              "literals": ["solidity", ">", "0.0", ".0"],
              "nodeType": "PragmaDirective",
              "src": "39:23:11"
            },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol",
              "file": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol",
              "id": 1341,
              "nodeType": "ImportDirective",
              "scope": 1342,
              "sourceUnit": 1177,
              "src": "63:76:11",
              "symbolAliases": [],
              "unitAlias": ""
            }
          ],
          "src": "39:101:11"
        }
      },
      "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol": {
        "id": 12,
        "ast": {
          "absolutePath": "contracts/hardhat-dependency-compiler/@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol",
          "exportedSymbols": {},
          "id": 1345,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1343,
              "literals": ["solidity", ">", "0.0", ".0"],
              "nodeType": "PragmaDirective",
              "src": "39:23:12"
            },
            {
              "absolutePath": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol",
              "file": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol",
              "id": 1344,
              "nodeType": "ImportDirective",
              "scope": 1345,
              "sourceUnit": 1333,
              "src": "63:78:12",
              "symbolAliases": [],
              "unitAlias": ""
            }
          ],
          "src": "39:103:12"
        }
      }
    },
    "contracts": {
      "@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol": {
        "IPrime": {
          "abi": [
            {
              "constant": false,
              "inputs": [{ "internalType": "address", "name": "vToken", "type": "address" }],
              "name": "accrueInterest",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                { "internalType": "address", "name": "user", "type": "address" },
                { "internalType": "address", "name": "market", "type": "address" }
              ],
              "name": "accrueInterestAndUpdateScore",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "user", "type": "address" }],
              "name": "isUserPrimeHolder",
              "outputs": [{ "internalType": "bool", "name": "isPrimeHolder", "type": "bool" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [{ "internalType": "address", "name": "user", "type": "address" }],
              "name": "xvsUpdated",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.b9534989\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"vToken\",\"type\":\"address\"}],\"name\":\"accrueInterest\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"market\",\"type\":\"address\"}],\"name\":\"accrueInterestAndUpdateScore\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserPrimeHolder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isPrimeHolder\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"xvsUpdated\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Venus\",\"methods\":{\"accrueInterest(address)\":{\"params\":{\"vToken\":\"the market for which to distribute the income\"}},\"accrueInterestAndUpdateScore(address,address)\":{\"params\":{\"market\":\"the market for which to accrue interest and update score\",\"user\":\"the account address for which to accrue interest and update score\"}},\"isUserPrimeHolder(address)\":{\"params\":{\"isPrimeHolder\":\"returns if the user is a prime holder\"}},\"xvsUpdated(address)\":{\"params\":{\"user\":\"the account address whose balance was updated\"}}},\"title\":\"IPrime\"},\"userdoc\":{\"methods\":{\"accrueInterest(address)\":{\"notice\":\"Distributes income from market since last distribution\"},\"accrueInterestAndUpdateScore(address,address)\":{\"notice\":\"accrues interest and updates score for an user for a specific market\"},\"isUserPrimeHolder(address)\":{\"notice\":\"Returns if user is a prime holder\"},\"xvsUpdated(address)\":{\"notice\":\"Executed by XVSVault whenever user's XVSVault balance changes\"}},\"notice\":\"Interface for Prime Token\"}},\"settings\":{\"compilationTarget\":{\"@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol\":\"IPrime\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol\":{\"keccak256\":\"0x58861c0c05b8757f1a5d50b107eff479c8680878e6aa51bc93af420caf73f500\",\"urls\":[\"bzz-raw://24d9dc4fc1b4f74df60329f42b3d1c904c02c2164257496959582400b820ec31\",\"dweb:/ipfs/Qmf7SJNV34KqiJ6dibiHv4oWDB9gd9jTpomYngBnDTLLRc\"]}},\"version\":1}",
          "devdoc": {
            "author": "Venus",
            "methods": {
              "accrueInterest(address)": { "params": { "vToken": "the market for which to distribute the income" } },
              "accrueInterestAndUpdateScore(address,address)": {
                "params": {
                  "market": "the market for which to accrue interest and update score",
                  "user": "the account address for which to accrue interest and update score"
                }
              },
              "isUserPrimeHolder(address)": { "params": { "isPrimeHolder": "returns if the user is a prime holder" } },
              "xvsUpdated(address)": { "params": { "user": "the account address whose balance was updated" } }
            },
            "title": "IPrime"
          },
          "userdoc": {
            "methods": {
              "accrueInterest(address)": { "notice": "Distributes income from market since last distribution" },
              "accrueInterestAndUpdateScore(address,address)": {
                "notice": "accrues interest and updates score for an user for a specific market"
              },
              "isUserPrimeHolder(address)": { "notice": "Returns if user is a prime holder" },
              "xvsUpdated(address)": { "notice": "Executed by XVSVault whenever user's XVSVault balance changes" }
            },
            "notice": "Interface for Prime Token"
          },
          "storageLayout": { "storage": [], "types": null },
          "evm": {
            "methodIdentifiers": {
              "accrueInterest(address)": "9198e515",
              "accrueInterestAndUpdateScore(address,address)": "cf329d16",
              "isUserPrimeHolder(address)": "38f6a434",
              "xvsUpdated(address)": "37f23cd3"
            }
          }
        }
      },
      "@venusprotocol/venus-protocol/contracts/Utils/Address.sol": {
        "Address": {
          "abi": [],
          "metadata": {
            "llvm_options": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Aggressive",
              "level_middle_end_size": "Zero"
            },
            "solc_metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.b9534989\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@venusprotocol/venus-protocol/contracts/Utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/venus-protocol/contracts/Utils/Address.sol\":{\"keccak256\":\"0x3c2ef780599a2ae6913282b982633f07e405a4a9c8511590df571e2b773aef9d\",\"urls\":[\"bzz-raw://a771f035082a019892582d2c304e00bdb054d904cf7889eb6aa28e515b12c54e\",\"dweb:/ipfs/QmZr6j1hHr6wLdmU9PujaaNvDraYSN2fpNWyDrVChCSJSW\"]}},\"version\":1}",
            "solc_version": "0.5.16",
            "solc_zkvm_edition": "1.0.1",
            "zk_version": "1.5.1"
          },
          "devdoc": { "details": "Collection of functions related to the address type", "methods": {} },
          "userdoc": { "methods": {} },
          "storageLayout": { "storage": [], "types": null },
          "evm": {
            "bytecode": {
              "object": "0000000100200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff73000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000b35b3bad10d9daac1c765e432d58db675d7d44ecd86f8b9f9db5e17246e1112e"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b45e3975b2e9eafdd4f7b171e0a455274eeb75b1f80f49c4589637495",
          "factoryDependencies": {}
        }
      },
      "@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol": {
        "IBEP20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                { "indexed": true, "internalType": "address", "name": "owner", "type": "address" },
                { "indexed": true, "internalType": "address", "name": "spender", "type": "address" },
                { "indexed": false, "internalType": "uint256", "name": "value", "type": "uint256" }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                { "indexed": true, "internalType": "address", "name": "from", "type": "address" },
                { "indexed": true, "internalType": "address", "name": "to", "type": "address" },
                { "indexed": false, "internalType": "uint256", "name": "value", "type": "uint256" }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "constant": true,
              "inputs": [
                { "internalType": "address", "name": "owner", "type": "address" },
                { "internalType": "address", "name": "spender", "type": "address" }
              ],
              "name": "allowance",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                { "internalType": "address", "name": "spender", "type": "address" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" }
              ],
              "name": "approve",
              "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "account", "type": "address" }],
              "name": "balanceOf",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "totalSupply",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" }
              ],
              "name": "transfer",
              "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                { "internalType": "address", "name": "sender", "type": "address" },
                { "internalType": "address", "name": "recipient", "type": "address" },
                { "internalType": "uint256", "name": "amount", "type": "uint256" }
              ],
              "name": "transferFrom",
              "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.b9534989\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the BEP20 standard as defined in the EIP. Does not include the optional functions; to access them see {BEP20Detailed}.\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol\":\"IBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol\":{\"keccak256\":\"0x839b08895eb1ad83502d3631e8e9e3a856d2a8c63c46f070d604af7b26c62c07\",\"urls\":[\"bzz-raw://5908d7afba215ef2350294a7b6220394b25ea51e3e878de8d16be93a5b815153\",\"dweb:/ipfs/QmeDMMMHDZ5jBDUYgTQXpktwjvMv5pvfAYTVjtgrNCEMmj\"]}},\"version\":1}",
          "devdoc": {
            "details": "Interface of the BEP20 standard as defined in the EIP. Does not include the optional functions; to access them see {BEP20Detailed}.",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default.     * This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens.     * Returns a boolean value indicating whether the operation succeeded.     * IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729     * Emits an {Approval} event."
              },
              "balanceOf(address)": { "details": "Returns the amount of tokens owned by `account`." },
              "totalSupply()": { "details": "Returns the amount of tokens in existence." },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `recipient`.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance.     * Returns a boolean value indicating whether the operation succeeded.     * Emits a {Transfer} event."
              }
            }
          },
          "userdoc": { "methods": {} },
          "storageLayout": { "storage": [], "types": null },
          "evm": {
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@venusprotocol/venus-protocol/contracts/Utils/SafeBEP20.sol": {
        "SafeBEP20": {
          "abi": [],
          "metadata": {
            "llvm_options": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Aggressive",
              "level_middle_end_size": "Zero"
            },
            "solc_metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.b9534989\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for BEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"methods\":{},\"title\":\"SafeBEP20\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@venusprotocol/venus-protocol/contracts/Utils/SafeBEP20.sol\":\"SafeBEP20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/venus-protocol/contracts/Utils/Address.sol\":{\"keccak256\":\"0x3c2ef780599a2ae6913282b982633f07e405a4a9c8511590df571e2b773aef9d\",\"urls\":[\"bzz-raw://a771f035082a019892582d2c304e00bdb054d904cf7889eb6aa28e515b12c54e\",\"dweb:/ipfs/QmZr6j1hHr6wLdmU9PujaaNvDraYSN2fpNWyDrVChCSJSW\"]},\"@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol\":{\"keccak256\":\"0x839b08895eb1ad83502d3631e8e9e3a856d2a8c63c46f070d604af7b26c62c07\",\"urls\":[\"bzz-raw://5908d7afba215ef2350294a7b6220394b25ea51e3e878de8d16be93a5b815153\",\"dweb:/ipfs/QmeDMMMHDZ5jBDUYgTQXpktwjvMv5pvfAYTVjtgrNCEMmj\"]},\"@venusprotocol/venus-protocol/contracts/Utils/SafeBEP20.sol\":{\"keccak256\":\"0x540ef6ddc47232a59d3ab0e95537f7a7d1c8a36f8dba315b010e60c6487bd768\",\"urls\":[\"bzz-raw://7acd695f71c1006c7f17f021381503e99b3baf395f8d8dae8d3829a524679298\",\"dweb:/ipfs/QmVhGHQZxo8J9bGpH9vgTD4px4jdEie3WnbHognBf6ABPP\"]},\"@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol\":{\"keccak256\":\"0x9431fd772ed4abc038cdfe9ce6c0066897bd1685ad45848748d1952935d5b8ef\",\"urls\":[\"bzz-raw://84233cdf4579e66aeb99788758f8cc750816c15ea495495c4fbb446f74da2469\",\"dweb:/ipfs/QmfPGduxT3Ty4uCcYCppy5E2ED5pwypwoaMrkC98i9Szyq\"]}},\"version\":1}",
            "solc_version": "0.5.16",
            "solc_zkvm_edition": "1.0.1",
            "zk_version": "1.5.1"
          },
          "devdoc": {
            "details": "Wrappers around BEP20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeBEP20 for BEP20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
            "methods": {},
            "title": "SafeBEP20"
          },
          "userdoc": { "methods": {} },
          "storageLayout": { "storage": [], "types": null },
          "evm": {
            "bytecode": {
              "object": "0000000100200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff73000000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000a6d5005ca32d90d1960a646d8e75416bce82ace0a9e2366e344b69eb8d5c386e"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000bde775d5349b51de8850ddfd2a04456320d9766a29bd799a329573ced",
          "factoryDependencies": {}
        }
      },
      "@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol": {
        "SafeMath": {
          "abi": [],
          "metadata": {
            "llvm_options": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Aggressive",
              "level_middle_end_size": "Zero"
            },
            "solc_metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.b9534989\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol\":{\"keccak256\":\"0x9431fd772ed4abc038cdfe9ce6c0066897bd1685ad45848748d1952935d5b8ef\",\"urls\":[\"bzz-raw://84233cdf4579e66aeb99788758f8cc750816c15ea495495c4fbb446f74da2469\",\"dweb:/ipfs/QmfPGduxT3Ty4uCcYCppy5E2ED5pwypwoaMrkC98i9Szyq\"]}},\"version\":1}",
            "solc_version": "0.5.16",
            "solc_zkvm_edition": "1.0.1",
            "zk_version": "1.5.1"
          },
          "devdoc": {
            "details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
            "methods": {}
          },
          "userdoc": { "methods": {} },
          "storageLayout": { "storage": [], "types": null },
          "evm": {
            "bytecode": {
              "object": "0000000100200190000000060000c13d0000008001000039000000400010043f000000000100001900000017000104300000000b0100043d000000070110019700000008011001c70000000b0010043f000000000100041000000000001004350000000b0100043d000000070110019700000008011001c70000000b0010043f0000002001000039000001000010044300000120000004430000000901000041000000160001042e0000001500000432000000160001042e0000001700010430000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7300000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000021a82ec491ee653c4a38674b9874608bd5210f85afeb5b49cddcec52fab7b616"
            },
            "methodIdentifiers": {}
          },
          "hash": "0100000b3788e0b9e3fd372f82c48d3e4e9fb045ee7ab432e8e5346e023bdffb",
          "factoryDependencies": {}
        }
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol": {
        "XVSStore": {
          "abi": [
            { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" },
            {
              "anonymous": false,
              "inputs": [
                { "indexed": true, "internalType": "address", "name": "oldAdmin", "type": "address" },
                { "indexed": true, "internalType": "address", "name": "newAdmin", "type": "address" }
              ],
              "name": "AdminTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                { "indexed": false, "internalType": "address", "name": "oldPendingAdmin", "type": "address" },
                { "indexed": false, "internalType": "address", "name": "newPendingAdmin", "type": "address" }
              ],
              "name": "NewPendingAdmin",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                { "indexed": true, "internalType": "address", "name": "oldOwner", "type": "address" },
                { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }
              ],
              "name": "OwnerTransferred",
              "type": "event"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "acceptAdmin",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "admin",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                { "internalType": "address", "name": "_tokenAddress", "type": "address" },
                { "internalType": "uint256", "name": "_amount", "type": "uint256" }
              ],
              "name": "emergencyRewardWithdraw",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "owner",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "pendingAdmin",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "name": "rewardTokens",
              "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                { "internalType": "address", "name": "token", "type": "address" },
                { "internalType": "address", "name": "_to", "type": "address" },
                { "internalType": "uint256", "name": "_amount", "type": "uint256" }
              ],
              "name": "safeRewardTransfer",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [{ "internalType": "address", "name": "_owner", "type": "address" }],
              "name": "setNewOwner",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [{ "internalType": "address", "name": "_admin", "type": "address" }],
              "name": "setPendingAdmin",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [
                { "internalType": "address", "name": "_tokenAddress", "type": "address" },
                { "internalType": "bool", "name": "status", "type": "bool" }
              ],
              "name": "setRewardToken",
              "outputs": [],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_options": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Aggressive",
              "level_middle_end_size": "Zero"
            },
            "solc_metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.b9534989\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"emergencyRewardWithdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"safeRewardTransfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setNewOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"setPendingAdmin\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Venus\",\"methods\":{\"emergencyRewardWithdraw(address,uint256)\":{\"params\":{\"_amount\":\"Amount of token to withdraw\",\"_tokenAddress\":\"Reward token address to withdraw\"}},\"safeRewardTransfer(address,address,uint256)\":{\"details\":\"Safe reward token transfer function, just in case if rounding error causes pool to not have enough tokens.\",\"params\":{\"_amount\":\"Amount to transfer\",\"_to\":\"Destination address of the reward\",\"token\":\"Reward token to transfer\"}},\"setNewOwner(address)\":{\"params\":{\"_owner\":\"The address of the owner to set Only callable admin\"}},\"setPendingAdmin(address)\":{\"params\":{\"_admin\":\"Propose an account as admin of the XVS store\"}},\"setRewardToken(address,bool)\":{\"params\":{\"_tokenAddress\":\"The address of a token to set as active or inactive\",\"status\":\"Set whether a reward token is active or not\"}}},\"title\":\"XVS Store\"},\"userdoc\":{\"methods\":{\"acceptAdmin()\":{\"notice\":\"Allows an account that is pending as admin to accept the role nly calllable by the pending admin\"},\"emergencyRewardWithdraw(address,uint256)\":{\"notice\":\"Security function to allow the owner of the contract to withdraw from the contract\"},\"safeRewardTransfer(address,address,uint256)\":{\"notice\":\"Safely transfer rewards. Only active reward tokens can be sent using this function. Only callable by owner\"},\"setNewOwner(address)\":{\"notice\":\"Set the contract owner\"},\"setPendingAdmin(address)\":{\"notice\":\"Allows the admin to propose a new admin Only callable admin\"},\"setRewardToken(address,bool)\":{\"notice\":\"Set or disable a reward token\"}},\"notice\":\"XVS Store responsible for distributing XVS rewards\"}},\"settings\":{\"compilationTarget\":{\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol\":\"XVSStore\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/venus-protocol/contracts/Utils/Address.sol\":{\"keccak256\":\"0x3c2ef780599a2ae6913282b982633f07e405a4a9c8511590df571e2b773aef9d\",\"urls\":[\"bzz-raw://a771f035082a019892582d2c304e00bdb054d904cf7889eb6aa28e515b12c54e\",\"dweb:/ipfs/QmZr6j1hHr6wLdmU9PujaaNvDraYSN2fpNWyDrVChCSJSW\"]},\"@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol\":{\"keccak256\":\"0x839b08895eb1ad83502d3631e8e9e3a856d2a8c63c46f070d604af7b26c62c07\",\"urls\":[\"bzz-raw://5908d7afba215ef2350294a7b6220394b25ea51e3e878de8d16be93a5b815153\",\"dweb:/ipfs/QmeDMMMHDZ5jBDUYgTQXpktwjvMv5pvfAYTVjtgrNCEMmj\"]},\"@venusprotocol/venus-protocol/contracts/Utils/SafeBEP20.sol\":{\"keccak256\":\"0x540ef6ddc47232a59d3ab0e95537f7a7d1c8a36f8dba315b010e60c6487bd768\",\"urls\":[\"bzz-raw://7acd695f71c1006c7f17f021381503e99b3baf395f8d8dae8d3829a524679298\",\"dweb:/ipfs/QmVhGHQZxo8J9bGpH9vgTD4px4jdEie3WnbHognBf6ABPP\"]},\"@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol\":{\"keccak256\":\"0x9431fd772ed4abc038cdfe9ce6c0066897bd1685ad45848748d1952935d5b8ef\",\"urls\":[\"bzz-raw://84233cdf4579e66aeb99788758f8cc750816c15ea495495c4fbb446f74da2469\",\"dweb:/ipfs/QmfPGduxT3Ty4uCcYCppy5E2ED5pwypwoaMrkC98i9Szyq\"]},\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol\":{\"keccak256\":\"0x8082f92b13448bd4fa982c93c763439f10fe016a5f3be6d613dfe3cca68501ef\",\"urls\":[\"bzz-raw://1e2d8ee8ab3f170c35c83776b850ed024df7ce2da5fc7ce8bf46caca98fc820d\",\"dweb:/ipfs/QmPD2Q11LUCvdwqoWkiCKEXE621tfVv2pVRmcwxBPxCLS4\"]}},\"version\":1}",
            "solc_version": "0.5.16",
            "solc_zkvm_edition": "1.0.1",
            "zk_version": "1.5.1"
          },
          "devdoc": {
            "author": "Venus",
            "methods": {
              "emergencyRewardWithdraw(address,uint256)": {
                "params": {
                  "_amount": "Amount of token to withdraw",
                  "_tokenAddress": "Reward token address to withdraw"
                }
              },
              "safeRewardTransfer(address,address,uint256)": {
                "details": "Safe reward token transfer function, just in case if rounding error causes pool to not have enough tokens.",
                "params": {
                  "_amount": "Amount to transfer",
                  "_to": "Destination address of the reward",
                  "token": "Reward token to transfer"
                }
              },
              "setNewOwner(address)": { "params": { "_owner": "The address of the owner to set Only callable admin" } },
              "setPendingAdmin(address)": { "params": { "_admin": "Propose an account as admin of the XVS store" } },
              "setRewardToken(address,bool)": {
                "params": {
                  "_tokenAddress": "The address of a token to set as active or inactive",
                  "status": "Set whether a reward token is active or not"
                }
              }
            },
            "title": "XVS Store"
          },
          "userdoc": {
            "methods": {
              "acceptAdmin()": {
                "notice": "Allows an account that is pending as admin to accept the role nly calllable by the pending admin"
              },
              "emergencyRewardWithdraw(address,uint256)": {
                "notice": "Security function to allow the owner of the contract to withdraw from the contract"
              },
              "safeRewardTransfer(address,address,uint256)": {
                "notice": "Safely transfer rewards. Only active reward tokens can be sent using this function. Only callable by owner"
              },
              "setNewOwner(address)": { "notice": "Set the contract owner" },
              "setPendingAdmin(address)": { "notice": "Allows the admin to propose a new admin Only callable admin" },
              "setRewardToken(address,bool)": { "notice": "Set or disable a reward token" }
            },
            "notice": "XVS Store responsible for distributing XVS rewards"
          },
          "storageLayout": {
            "storage": [
              {
                "astId": 608,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol:XVSStore",
                "label": "admin",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 610,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol:XVSStore",
                "label": "pendingAdmin",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 612,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol:XVSStore",
                "label": "owner",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
              },
              {
                "astId": 616,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSStore.sol:XVSStore",
                "label": "rewardTokens",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_address,t_bool)"
              }
            ],
            "types": {
              "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
              "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              }
            }
          },
          "evm": {
            "bytecode": {
              "object": "0002000000000002000600000000000200000000030100190000006003300270000000e90330019700010000003103550000008005000039000000400050043f000000000400041600000001002001900000001d0000c13d000000000004004b000003860000c13d000000040030008c000003860000413d000000000401043b000000e002400270000000ed0040009c0000002a0000813d000001040020009c000000510000a13d000001050020009c000000720000613d000001060020009c0000008d0000613d000001070020009c000003860000c13d0000000201000039000000560000013d000000000004004b000003860000c13d0000000001000411000000ea01100197000000000200041a000000eb02200197000000000112019f000000000010041b000000200100003900000100001004430000012000000443000000ec01000041000003a10001042e000000ee0020009c000000580000a13d000000ef0020009c000000bf0000613d000000f00020009c000000d00000613d000000f10020009c000003860000c13d000000440230008a000001150020009c000003860000813d0000002402100370000000000402043b0000000401100370000000000101043b0000000002000411000000ea02200197000000000300041a000000ea03300197000000000032004b000000440000613d0000000203000039000000000303041a000000ea03300197000000000032004b0000015a0000c13d000000ea0110019700000000001004350000000301000039000000200010043f000600000004001d03a003890000040f000000000301041a0000011602300197000000060000006b000000010220c1bf000000000021041b0000000001000019000003a10001042e000001080020009c000000d50000613d000001090020009c000003860000c13d0000000101000039000000000101041a000000d10000013d000000f20020009c000001010000613d000000f30020009c000003860000c13d000000240230008a000001170020009c000003860000813d000000000200041a0000000003000411000000000223013f0000000401100370000000000101043b000000ea002001980000013c0000c13d000000ea06100198000001640000c13d000000f401000041000000800010043f0000002001000039000000840010043f0000001d01000039000000a40010043f000000fa01000041000000c40010043f000000f601000041000003a200010430000000240230008a000001170020009c000003860000813d000000000200041a0000000003000411000000000223013f000000ea002001980000013c0000c13d0000000401100370000000000101043b000000ea011001970000000103000039000000000203041a000000eb04200197000000000414019f000000000043041b000000ea02200197000000800020043f000000a00010043f0000000001000414000000e90010009c000000e901008041000000c00110021000000110011001c70000800d020000390000011104000041000001720000013d000000440230008a000001150020009c000003860000813d0000000402100370000000000302043b0000000002000411000000ea022001970000000204000039000000000404041a000000ea04400197000000000042004b000001500000c13d000000ea033001970000002401100370000000000101043b000000a40020043f000000c40010043f0000004401000039000000800010043f000000e401000039000000400010043f000000a00100043d000000ff0110019700000100011001c7000000a00010043f00000101010000410000000000100439000600000003001d00000004003004430000000001000414000000e90010009c000000e901008041000000c001100210000000fe011001c7000080020200003903a0039b0000040f0000000100200190000002fd0000613d000000000101043b000000000001004b000000b80000613d000001020010009c000001990000c13d000000400100043d00000044021000390000010b03000041000000000032043500000024021000390000001f030000390000012b0000013d000000240230008a000001170020009c000003860000813d0000000401100370000000000101043b0000000302000039000000200020043f000000ea01100197000000000010043503a003890000040f000000000101041a000000ff001001900000000001000019000000010100c039000000800010043f000000f701000041000003a10001042e000000000100041a000000ea01100197000000800010043f000000f701000041000003a10001042e0000000001000411000000ea011001970000000103000039000000000203041a000000ea04200197000000000041004b000001460000c13d000000000400041a000600000004001d000000eb04400197000000000414019f000000000040041b000000eb02200197000000000023041b000000800010043f000000a00000043f0000000001000414000000e90010009c000000e901008041000000c00110021000000110011001c70000800d02000039000001110400004103a003960000040f0000000100200190000003860000613d000000400100043d000000e90010009c000000e9010080410000004001100210000000000200041a0000000003000414000000e90030009c000000e903008041000000c003300210000000000113019f00000113011001c70000000603000029000000ea05300197000000ea062001970000800d0200003900000003030000390000011404000041000001720000013d000000640230008a000001180020009c000003860000813d0000000202000039000000000202041a0000000003000411000000000223013f0000004403100370000000000403043b0000002403100370000000000303043b0000000401100370000000000101043b000000ea00200198000001500000c13d000400000003001d000500000004001d000000ea01100197000600000001001d00000000001004350000000301000039000000200010043f0000000001000414000000e90010009c000000e901008041000000c001100210000000fb011001c70000801002000039000300000005001d03a0039b0000040f0000000100200190000003860000613d000000000101043b000000000101041a000000ff00100190000001770000c13d000000400100043d000000440210003900000103030000410000000000320435000000240210003900000015030000390000000000320435000000f4020000410000000000210435000000040210003900000020030000390000000000320435000000400200043d00000000012100490000006401100039000000e90010009c000000e9010080410000006001100210000000e90020009c000000e9020080410000004002200210000000000121019f000003a200010430000000f401000041000000800010043f0000002001000039000000840010043f0000000e01000039000000a40010043f0000010f01000041000000c40010043f000000f601000041000003a200010430000000f401000041000000800010043f0000002001000039000000840010043f0000001201000039000000a40010043f0000011201000041000000c40010043f000000f601000041000003a200010430000000f401000041000000800010043f0000002001000039000000840010043f0000000e01000039000000a40010043f0000010a01000041000000c40010043f000000f601000041000003a200010430000000f401000041000000800010043f0000002001000039000000840010043f0000001701000039000000a40010043f000000f501000041000000c40010043f000000f601000041000003a2000104300000000201000039000000000201041a000000eb03200197000000000363019f000000000031041b0000000001000414000000ea05200197000000e90010009c000000e901008041000000c001100210000000f8011001c70000800d020000390000000303000039000000f90400004103a003960000040f0000000100200190000003860000613d0000000001000019000003a10001042e0000000603000029000000000003004b000001750000613d000000400200043d000000fc0100004100000000001204350000000001000410000000ea01100197000100000002001d00000004022000390000000000120435000000400100043d000200000001001d000000fd01000041000000000010043900000004003004430000000001000414000000e90010009c000000e901008041000000c001100210000000fe011001c7000080020200003903a0039b0000040f0000000100200190000002fd0000613d000000000101043b000000000001004b0000000602000029000003860000613d0000000001000414000000040020008c0000021e0000c13d0000000003000031000002510000013d000000400100043d000000800700043d000000a004000039000000200070008c000001a10000813d00000000050700190000000003010019000001a80000013d0000000003010019000000000507001900000000460404340000000003630436000000200550008a000000200050008c000001a30000813d00000003065002100000010006600089000000010660020f000000000005004b000000000600601900000000040404330000000005600049000000000454016f000000010560008a0000000006030433000000000565016f000000000445019f0000000000430435000000400400043d00000000030004140000000602000029000000040020008c000001bd0000c13d00000001020000390000000006000031000001d00000013d00000000011700190000000001410049000000e90010009c000000e9010080410000006001100210000000e90040009c000000e9040080410000004004400210000000000141019f000000e90030009c000000e903008041000000c003300210000000000131019f03a003960000040f000000010220018f00010000000103550000006001100270000000e90010019d000000e906100197000000000006004b000001d50000c13d00000060030000390000008001000039000001f60000013d0000003f016000390000011701100197000000400300043d0000000001130019000000400010043f0000001f0460018f000000000163043600000001050003670000000506600272000001e70000613d00000005076002100000000007710019000000000805034f0000000009010019000000008a08043c0000000009a90436000000000079004b000001e30000c13d000000000004004b000001f60000613d0000000506600210000000000565034f00000000066100190000000304400210000000000706043300000000074701cf000000000747022f000000000505043b0000010004400089000000000545022f00000000044501cf000000000474019f0000000000460435000000000002004b000002030000c13d000000400100043d00000044021000390000010e030000410000000000320435000000f40200004100000000002104350000002402100039000000200300003900000000003204350000000402100039000001300000013d0000000002030433000000000002004b000001750000613d0000001f0020008c000003860000a13d0000000001010433000000000001004b000001750000c13d000000400100043d00000064021000390000010c03000041000000000032043500000044021000390000010d03000041000000000032043500000024021000390000002a030000390000000000320435000000f4020000410000000000210435000000040210003900000020030000390000000000320435000000400200043d00000000012100490000008401100039000001340000013d000000020500002900000001035000690000002404300039000000e90050009c000000e90300004100000000030540190000004003300210000000e90040009c000000e9040080410000006004400210000000000334019f000000e90010009c000000e901008041000000c001100210000000000131019f03a0039b0000040f00000000030100190000006003300270000000e903300197000000200030008c000000200500003900000000050340190000001f0450018f00000005055002720000023e0000613d00000002080000290000002006800039000000000701034f000000007907043c0000000008980436000000000068004b0000023a0000c13d000000000004004b0000024d0000613d0000000505500210000000000651034f00000002055000290000000304400210000000000705043300000000074701cf000000000747022f000000000606043b0000010004400089000000000646022f00000000044601cf000000000474019f0000000000450435000000000003001f00010000000103550000000100200190000002a00000613d000000200030008c000003860000413d0000000401000029000000ea01100197000000400300043d00000024023000390000000000120435000000640130003900000044023000390000000003030433000000050030006b000002b90000a13d0000000000320435000000400300043d0000000002320049000400000003001d0000000002230436000000400010043f0000000001020433000000ff0110019700000100011001c7000500000002001d000000000012043500000101010000410000000000100439000000060100002900000004001004430000000001000414000000e90010009c000000e901008041000000c001100210000000fe011001c7000080020200003903a0039b0000040f0000000100200190000002fd0000613d000000000101043b000000000001004b000000b80000613d000001020010009c000000b80000613d000000400100043d00000004020000290000000002020433000000200020008c000000000402001900000000030100190000028a0000413d00000000030100190000000004020019000000050600002900000000650604340000000003530436000000200440008a000000200040008c000002840000813d000500000006001d00000003054002100000010005500089000000010550020f000000000004004b0000000005006019000000050400002900000000040404330000000006500049000000000464016f000000010550008a0000000006030433000000000565016f000000000445019f0000000000430435000000400400043d00000000030004140000000605000029000000040050008c000002fe0000c13d00000001020000390000000006000031000003120000013d0000001f0430018f00000005023002720000000502200210000002aa0000613d000000000501034f0000000006000019000000005705043c0000000006760436000000000026004b000002a60000c13d000000000004004b000002b70000613d0000000304400210000000000502043300000000054501cf000000000545022f000000000121034f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f00000000001204350000006001300210000003a20001043000000005030000290000000000320435000000400300043d0000000002320049000400000003001d0000000002230436000000400010043f0000000001020433000000ff0110019700000100011001c7000500000002001d000000000012043500000101010000410000000000100439000000060100002900000004001004430000000001000414000000e90010009c000000e901008041000000c001100210000000fe011001c7000080020200003903a0039b0000040f0000000100200190000002fd0000613d000000000101043b000000000001004b000000b80000613d000001020010009c000000b80000613d000000400100043d00000004020000290000000002020433000000200020008c00000000040200190000000003010019000002e70000413d00000000030100190000000004020019000000050600002900000000650604340000000003530436000000200440008a000000200040008c000002e10000813d000500000006001d00000003054002100000010005500089000000010550020f000000000004004b0000000005006019000000050400002900000000040404330000000006500049000000000464016f000000010550008a0000000006030433000000000565016f000000000445019f0000000000430435000000400400043d00000000030004140000000605000029000000040050008c000003170000c13d000000010200003900000000050000310000032b0000013d000000000001042f00000000011200190000000001410049000000e90010009c000000e9010080410000006001100210000000e90040009c000000e9040080410000004002400210000000000121019f000000e90030009c000000e903008041000000c002300210000000000121019f000000060200002903a003960000040f000000010220018f00010000000103550000006001100270000000e90010019d000000e906100197000000000006004b0000032f0000c13d00000060030000390000008001000039000003500000013d00000000011200190000000001410049000000e90010009c000000e9010080410000006001100210000000e90040009c000000e9040080410000004002400210000000000121019f000000e90030009c000000e903008041000000c002300210000000000121019f000000060200002903a003960000040f000000010220018f00010000000103550000006001100270000000e90010019d000000e905100197000000000005004b000003580000c13d00000060010000390000037a0000013d0000003f016000390000011701100197000000400300043d0000000001130019000000400010043f0000001f0460018f000000000163043600000001050003670000000506600272000003410000613d00000005076002100000000007710019000000000805034f0000000009010019000000008a08043c0000000009a90436000000000079004b0000033d0000c13d000000000004004b000003500000613d0000000506600210000000000565034f00000000066100190000000304400210000000000706043300000000074701cf000000000747022f000000000505043b0000010004400089000000000545022f00000000044501cf000000000474019f0000000000460435000000000002004b000001f80000613d0000000002030433000000000002004b000001750000613d0000001f0020008c000003860000a13d000002080000013d0000003f015000390000011703100197000000400100043d0000000003310019000000400030043f0000001f0350018f0000000004510436000300000004001d000000010400036700000005055002720000036b0000613d000000050650021000000003080000290000000006680019000000000704034f000000007907043c0000000008980436000000000068004b000003670000c13d000000000003004b0000037a0000613d0000000505500210000000000454034f00000003055000290000000303300210000000000605043300000000063601cf000000000636022f000000000404043b0000010003300089000000000434022f00000000033401cf000000000363019f0000000000350435000000000002004b000001f80000613d0000000001010433000000000001004b0000000302000029000001750000613d0000001f0010008c000003860000a13d0000000001020433000000000001004b000001750000c13d0000020b0000013d0000000001000019000003a200010430000000000001042f0000000001000414000000e90010009c000000e901008041000000c001100210000000fb011001c7000080100200003903a0039b0000040f0000000100200190000003940000613d000000000101043b000000000001042d0000000001000019000003a20001043000000399002104210000000102000039000000000001042d0000000002000019000000000001042d0000039e002104230000000102000039000000000001042d0000000002000019000000000001042d000003a000000432000003a10001042e000003a200010430000000000000000000000000000000000000000000000000000000000000000000000000ffffffff000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000009ad99e680000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000f5ab16cb00000000000000000000000000000000000000000000000000000000f5ab16cc00000000000000000000000000000000000000000000000000000000f851a44000000000000000000000000000000000000000000000000000000000fb66fb4d000000000000000000000000000000000000000000000000000000009ad99e6800000000000000000000000000000000000000000000000000000000f5a1f5b408c379a0000000000000000000000000000000000000000000000000000000006f6e6c792061646d696e206f72206f776e65722063616e0000000000000000000000000000000000000000000000000000000064000000800000000000000000000000000000000000000000000000000000002000000080000000000000000002000000000000000000000000000000000000000000008000000000000000008934ce4adea8d9ce0d714d2c22b86790e41b7731c84b926fbbdc1d40ff6533c96e6577206f776e657220697320746865207a65726f2061646472657373000000020000000000000000000000000000000000004000000000000000000000000070a08231000000000000000000000000000000000000000000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b83020000020000000000000000000000000000002400000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffa9059cbb00000000000000000000000000000000000000000000000000000000e03fe177bb050a40ea1b3ecd64121a3fa063a94b6d404b2f45c64697555efe0ec5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4706f6e6c792072657761726420746f6b656e2063616e0000000000000000000000000000000000000000000000000000000000000000000000000000004dd18bf4000000000000000000000000000000000000000000000000000000004dd18bf500000000000000000000000000000000000000000000000000000000804e523e000000000000000000000000000000000000000000000000000000008da5cb5b000000000000000000000000000000000000000000000000000000000e18b68100000000000000000000000000000000000000000000000000000000267822476f6e6c79206f776e65722063616e0000000000000000000000000000000000005361666542455032303a2063616c6c20746f206e6f6e2d636f6e7472616374006f742073756363656564000000000000000000000000000000000000000000005361666542455032303a204245503230206f7065726174696f6e20646964206e5361666542455032303a206c6f772d6c6576656c2063616c6c206661696c65646f6e6c792061646d696e2063616e0000000000000000000000000000000000000200000000000000000000000000000000000040000000800000000000000000ca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a96f6e6c792070656e64696e672061646d696e00000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000f8ccb027dfcd135e000e9d45e6cc2d662578a8825d4c45b5e32e0adf67e79ec6ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa00000000000000000000000000000000000000000000000000000000000000000fe30150313da5b4f96cb5e0e5551823ab674405c3873e55d5301abc25df986d9"
            },
            "methodIdentifiers": {
              "acceptAdmin()": "0e18b681",
              "admin()": "f851a440",
              "emergencyRewardWithdraw(address,uint256)": "804e523e",
              "owner()": "8da5cb5b",
              "pendingAdmin()": "26782247",
              "rewardTokens(address)": "f5ab16cc",
              "safeRewardTransfer(address,address,uint256)": "9ad99e68",
              "setNewOwner(address)": "f5a1f5b4",
              "setPendingAdmin(address)": "4dd18bf5",
              "setRewardToken(address,bool)": "fb66fb4d"
            }
          },
          "hash": "0100011b7f0310e73e576b21819be41fbbfa61faf6831e85ac3bda9b5e7f9864",
          "factoryDependencies": {}
        }
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol": {
        "XVSVaultErrorReporter": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                { "indexed": false, "internalType": "uint256", "name": "error", "type": "uint256" },
                { "indexed": false, "internalType": "uint256", "name": "info", "type": "uint256" },
                { "indexed": false, "internalType": "uint256", "name": "detail", "type": "uint256" }
              ],
              "name": "Failure",
              "type": "event"
            }
          ],
          "metadata": {
            "llvm_options": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Aggressive",
              "level_middle_end_size": "Zero"
            },
            "solc_metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.b9534989\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"error\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"detail\",\"type\":\"uint256\"}],\"name\":\"Failure\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol\":\"XVSVaultErrorReporter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol\":{\"keccak256\":\"0xa79877a281d024f0d03dbf1842a36a972ee6c1aa36ba93e3d646726d40684a26\",\"urls\":[\"bzz-raw://8b16cb72902db250dc2f43815874664129901d9214ea55bb5ecee0f6a8bb0efd\",\"dweb:/ipfs/QmRUFQV2uS7i7kZNNhZD2aqYCJiFPrEJmEC9Y2f7L2j92E\"]}},\"version\":1}",
            "solc_version": "0.5.16",
            "solc_zkvm_edition": "1.0.1",
            "zk_version": "1.5.1"
          },
          "devdoc": { "methods": {} },
          "userdoc": { "methods": {} },
          "storageLayout": { "storage": [], "types": null },
          "evm": {
            "bytecode": {
              "object": "0000008001000039000000400010043f00000001002001900000000c0000613d0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000cba9da8a0598e4542217185c52b8ee49a1b274faea1434d5cbdff5cd80ca59f1"
            },
            "methodIdentifiers": {}
          },
          "hash": "010000075596af0268a87c52f0066e1ffb4e9e9c7474e2f722dd7b5494165912",
          "factoryDependencies": {}
        }
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol": {
        "XVSVaultProxy": {
          "abi": [
            { "inputs": [], "payable": false, "stateMutability": "nonpayable", "type": "constructor" },
            {
              "anonymous": false,
              "inputs": [
                { "indexed": false, "internalType": "uint256", "name": "error", "type": "uint256" },
                { "indexed": false, "internalType": "uint256", "name": "info", "type": "uint256" },
                { "indexed": false, "internalType": "uint256", "name": "detail", "type": "uint256" }
              ],
              "name": "Failure",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                { "indexed": false, "internalType": "address", "name": "oldAdmin", "type": "address" },
                { "indexed": false, "internalType": "address", "name": "newAdmin", "type": "address" }
              ],
              "name": "NewAdmin",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                { "indexed": false, "internalType": "address", "name": "oldImplementation", "type": "address" },
                { "indexed": false, "internalType": "address", "name": "newImplementation", "type": "address" }
              ],
              "name": "NewImplementation",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                { "indexed": false, "internalType": "address", "name": "oldPendingAdmin", "type": "address" },
                { "indexed": false, "internalType": "address", "name": "newPendingAdmin", "type": "address" }
              ],
              "name": "NewPendingAdmin",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                { "indexed": false, "internalType": "address", "name": "oldPendingImplementation", "type": "address" },
                { "indexed": false, "internalType": "address", "name": "newPendingImplementation", "type": "address" }
              ],
              "name": "NewPendingImplementation",
              "type": "event"
            },
            { "payable": true, "stateMutability": "payable", "type": "fallback" },
            {
              "constant": false,
              "inputs": [],
              "name": "_acceptAdmin",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [],
              "name": "_acceptImplementation",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [{ "internalType": "address", "name": "newPendingAdmin", "type": "address" }],
              "name": "_setPendingAdmin",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": false,
              "inputs": [{ "internalType": "address", "name": "newPendingImplementation", "type": "address" }],
              "name": "_setPendingImplementation",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "admin",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "implementation",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "pendingAdmin",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "pendingXVSVaultImplementation",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_options": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Aggressive",
              "level_middle_end_size": "Zero"
            },
            "solc_metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.b9534989\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"error\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"detail\",\"type\":\"uint256\"}],\"name\":\"Failure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"NewImplementation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingImplementation\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingImplementation\",\"type\":\"address\"}],\"name\":\"NewPendingImplementation\",\"type\":\"event\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"_acceptImplementation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingImplementation\",\"type\":\"address\"}],\"name\":\"_setPendingImplementation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingXVSVaultImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Venus\",\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\",\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_acceptImplementation()\":{\"details\":\"Admin function for new implementation to accept it's role as implementation\",\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"},\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"title\":\"XVS Vault Proxy\"},\"userdoc\":{\"methods\":{\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_acceptImplementation()\":{\"notice\":\"Accepts new implementation of XVS Vault. msg.sender must be pendingImplementation\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setPendingImplementation(address)\":{\"notice\":\"* Admin Functions **\"}},\"notice\":\"XVS Vault Proxy contract\"}},\"settings\":{\"compilationTarget\":{\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol\":\"XVSVaultProxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol\":{\"keccak256\":\"0x58861c0c05b8757f1a5d50b107eff479c8680878e6aa51bc93af420caf73f500\",\"urls\":[\"bzz-raw://24d9dc4fc1b4f74df60329f42b3d1c904c02c2164257496959582400b820ec31\",\"dweb:/ipfs/Qmf7SJNV34KqiJ6dibiHv4oWDB9gd9jTpomYngBnDTLLRc\"]},\"@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol\":{\"keccak256\":\"0x839b08895eb1ad83502d3631e8e9e3a856d2a8c63c46f070d604af7b26c62c07\",\"urls\":[\"bzz-raw://5908d7afba215ef2350294a7b6220394b25ea51e3e878de8d16be93a5b815153\",\"dweb:/ipfs/QmeDMMMHDZ5jBDUYgTQXpktwjvMv5pvfAYTVjtgrNCEMmj\"]},\"@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol\":{\"keccak256\":\"0x9431fd772ed4abc038cdfe9ce6c0066897bd1685ad45848748d1952935d5b8ef\",\"urls\":[\"bzz-raw://84233cdf4579e66aeb99788758f8cc750816c15ea495495c4fbb446f74da2469\",\"dweb:/ipfs/QmfPGduxT3Ty4uCcYCppy5E2ED5pwypwoaMrkC98i9Szyq\"]},\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultErrorReporter.sol\":{\"keccak256\":\"0xa79877a281d024f0d03dbf1842a36a972ee6c1aa36ba93e3d646726d40684a26\",\"urls\":[\"bzz-raw://8b16cb72902db250dc2f43815874664129901d9214ea55bb5ecee0f6a8bb0efd\",\"dweb:/ipfs/QmRUFQV2uS7i7kZNNhZD2aqYCJiFPrEJmEC9Y2f7L2j92E\"]},\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol\":{\"keccak256\":\"0xb39af917833659fe38f2f76924deda420babed8259b27741dc6cb402ade4d124\",\"urls\":[\"bzz-raw://ff79e8d65251827957467bb8d1db0dc298834d51c777f272e19a4ccb358daaee\",\"dweb:/ipfs/QmXf8EVMrgWdc2jL36kDWgie1MbLda8daEPFUbUyiHnsQJ\"]},\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol\":{\"keccak256\":\"0x36c80fdfd1b494be559413b6eacf3182142e1747d9aa21e7511e7bcaa5b52e9c\",\"urls\":[\"bzz-raw://002be88aedb9b69acb24c948428bbe57863a51c9e31219c2b0001b90a6ceba79\",\"dweb:/ipfs/QmPg5JVpkuDx3xG6DpFR3FmLfUQ42HRwpETygG7Nye56d6\"]}},\"version\":1}",
            "solc_version": "0.5.16",
            "solc_zkvm_edition": "1.0.1",
            "zk_version": "1.5.1"
          },
          "devdoc": {
            "author": "Venus",
            "methods": {
              "_acceptAdmin()": {
                "details": "Admin function for pending admin to accept role and update admin",
                "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
              },
              "_acceptImplementation()": {
                "details": "Admin function for new implementation to accept it's role as implementation",
                "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
              },
              "_setPendingAdmin(address)": {
                "details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
                "params": { "newPendingAdmin": "New pending admin." },
                "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
              }
            },
            "title": "XVS Vault Proxy"
          },
          "userdoc": {
            "methods": {
              "_acceptAdmin()": { "notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin" },
              "_acceptImplementation()": {
                "notice": "Accepts new implementation of XVS Vault. msg.sender must be pendingImplementation"
              },
              "_setPendingAdmin(address)": {
                "notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
              },
              "_setPendingImplementation(address)": { "notice": "* Admin Functions **" }
            },
            "notice": "XVS Vault Proxy contract"
          },
          "storageLayout": {
            "storage": [
              {
                "astId": 1183,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol:XVSVaultProxy",
                "label": "admin",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 1185,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol:XVSVaultProxy",
                "label": "pendingAdmin",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 1187,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol:XVSVaultProxy",
                "label": "implementation",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
              },
              {
                "astId": 1189,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultProxy.sol:XVSVaultProxy",
                "label": "pendingXVSVaultImplementation",
                "offset": 0,
                "slot": "3",
                "type": "t_address"
              }
            ],
            "types": { "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" } }
          },
          "evm": {
            "bytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "_acceptAdmin()": "e9c714f2",
              "_acceptImplementation()": "c1e80334",
              "_setPendingAdmin(address)": "b71d1a0c",
              "_setPendingImplementation(address)": "e992a041",
              "admin()": "f851a440",
              "implementation()": "5c60da1b",
              "pendingAdmin()": "26782247",
              "pendingXVSVaultImplementation()": "de0368b2"
            }
          },
          "hash": "010000a559b3c880ee5acce927822a31c939457f574cf3f0832d86d9337a234d",
          "factoryDependencies": {}
        }
      },
      "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol": {
        "XVSVaultAdminStorage": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "admin",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "implementation",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "pendingAdmin",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "pendingXVSVaultImplementation",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_options": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Aggressive",
              "level_middle_end_size": "Zero"
            },
            "solc_metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.b9534989\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingXVSVaultImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol\":\"XVSVaultAdminStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol\":{\"keccak256\":\"0x58861c0c05b8757f1a5d50b107eff479c8680878e6aa51bc93af420caf73f500\",\"urls\":[\"bzz-raw://24d9dc4fc1b4f74df60329f42b3d1c904c02c2164257496959582400b820ec31\",\"dweb:/ipfs/Qmf7SJNV34KqiJ6dibiHv4oWDB9gd9jTpomYngBnDTLLRc\"]},\"@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol\":{\"keccak256\":\"0x839b08895eb1ad83502d3631e8e9e3a856d2a8c63c46f070d604af7b26c62c07\",\"urls\":[\"bzz-raw://5908d7afba215ef2350294a7b6220394b25ea51e3e878de8d16be93a5b815153\",\"dweb:/ipfs/QmeDMMMHDZ5jBDUYgTQXpktwjvMv5pvfAYTVjtgrNCEMmj\"]},\"@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol\":{\"keccak256\":\"0x9431fd772ed4abc038cdfe9ce6c0066897bd1685ad45848748d1952935d5b8ef\",\"urls\":[\"bzz-raw://84233cdf4579e66aeb99788758f8cc750816c15ea495495c4fbb446f74da2469\",\"dweb:/ipfs/QmfPGduxT3Ty4uCcYCppy5E2ED5pwypwoaMrkC98i9Szyq\"]},\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol\":{\"keccak256\":\"0x36c80fdfd1b494be559413b6eacf3182142e1747d9aa21e7511e7bcaa5b52e9c\",\"urls\":[\"bzz-raw://002be88aedb9b69acb24c948428bbe57863a51c9e31219c2b0001b90a6ceba79\",\"dweb:/ipfs/QmPg5JVpkuDx3xG6DpFR3FmLfUQ42HRwpETygG7Nye56d6\"]}},\"version\":1}",
            "solc_version": "0.5.16",
            "solc_zkvm_edition": "1.0.1",
            "zk_version": "1.5.1"
          },
          "devdoc": { "methods": {} },
          "userdoc": { "methods": {} },
          "storageLayout": {
            "storage": [
              {
                "astId": 1183,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultAdminStorage",
                "label": "admin",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 1185,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultAdminStorage",
                "label": "pendingAdmin",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 1187,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultAdminStorage",
                "label": "implementation",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
              },
              {
                "astId": 1189,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultAdminStorage",
                "label": "pendingXVSVaultImplementation",
                "offset": 0,
                "slot": "3",
                "type": "t_address"
              }
            ],
            "types": { "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" } }
          },
          "evm": {
            "bytecode": {
              "object": "0000008003000039000000400030043f00000000030004160000000100200190000000140000c13d000000000003004b000000210000c13d00000000020100190000000d00200198000000210000613d000000000101043b000000e0011002700000000e0010009c0000001b0000213d000000110010009c000000230000613d000000120010009c000000210000c13d0000000201000039000000260000013d000000000003004b000000210000c13d0000002001000039000001000010044300000120000004430000000c010000410000002c0001042e0000000f0010009c000000250000613d000000100010009c000000210000c13d000000000100041a000000270000013d00000000010000190000002d000104300000000101000039000000260000013d0000000301000039000000000101041a0000001301100197000000800010043f00000014010000410000002c0001042e0000002b000004320000002c0001042e0000002d0001043000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000000000000000000000000000000000000fffffffc00000000000000000000000000000000000000000000000000000000000000000000000000000000de0368b100000000000000000000000000000000000000000000000000000000de0368b200000000000000000000000000000000000000000000000000000000f851a4400000000000000000000000000000000000000000000000000000000026782247000000000000000000000000000000000000000000000000000000005c60da1b000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000002000000080000000000000000000000000000000000000000000000000000000000000000000000000000000007a873c749be32b4f1d98fcadb50ecf9684ae5104c5d4bc6a43ae645e8d877f3a"
            },
            "methodIdentifiers": {
              "admin()": "f851a440",
              "implementation()": "5c60da1b",
              "pendingAdmin()": "26782247",
              "pendingXVSVaultImplementation()": "de0368b2"
            }
          },
          "hash": "01000017105bc6c96369c7f0b6a73801c0872bd0c223e9af64f3f94c4f0889dc",
          "factoryDependencies": {}
        },
        "XVSVaultStorage": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "DELEGATION_TYPEHASH",
              "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "DOMAIN_TYPEHASH",
              "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "admin",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                { "internalType": "address", "name": "", "type": "address" },
                { "internalType": "uint32", "name": "", "type": "uint32" }
              ],
              "name": "checkpoints",
              "outputs": [
                { "internalType": "uint32", "name": "fromBlockOrSecond", "type": "uint32" },
                { "internalType": "uint96", "name": "votes", "type": "uint96" }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "name": "delegates",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "implementation",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "name": "isStakedToken",
              "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "name": "nonces",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "name": "numCheckpoints",
              "outputs": [{ "internalType": "uint32", "name": "", "type": "uint32" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "pendingAdmin",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                { "internalType": "address", "name": "", "type": "address" },
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "name": "pendingRewardTransfers",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "pendingXVSVaultImplementation",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                { "internalType": "address", "name": "", "type": "address" },
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "name": "poolInfos",
              "outputs": [
                { "internalType": "contract IBEP20", "name": "token", "type": "address" },
                { "internalType": "uint256", "name": "allocPoint", "type": "uint256" },
                { "internalType": "uint256", "name": "lastRewardBlockOrSecond", "type": "uint256" },
                { "internalType": "uint256", "name": "accRewardPerShare", "type": "uint256" },
                { "internalType": "uint256", "name": "lockPeriod", "type": "uint256" }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "primePoolId",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "primeRewardToken",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "primeToken",
              "outputs": [{ "internalType": "contract IPrime", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "name": "rewardTokenAmountsPerBlockOrSecond",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "name": "totalAllocPoints",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "vaultPaused",
              "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "xvsAddress",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "xvsStore",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_options": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Aggressive",
              "level_middle_end_size": "Zero"
            },
            "solc_metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.b9534989\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fromBlockOrSecond\",\"type\":\"uint32\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegates\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isStakedToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numCheckpoints\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingRewardTransfers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingXVSVaultImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfos\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlockOrSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accRewardPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"primePoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"primeRewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"primeToken\",\"outputs\":[{\"internalType\":\"contract IPrime\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardTokenAmountsPerBlockOrSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalAllocPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vaultPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xvsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xvsStore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol\":\"XVSVaultStorage\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol\":{\"keccak256\":\"0x58861c0c05b8757f1a5d50b107eff479c8680878e6aa51bc93af420caf73f500\",\"urls\":[\"bzz-raw://24d9dc4fc1b4f74df60329f42b3d1c904c02c2164257496959582400b820ec31\",\"dweb:/ipfs/Qmf7SJNV34KqiJ6dibiHv4oWDB9gd9jTpomYngBnDTLLRc\"]},\"@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol\":{\"keccak256\":\"0x839b08895eb1ad83502d3631e8e9e3a856d2a8c63c46f070d604af7b26c62c07\",\"urls\":[\"bzz-raw://5908d7afba215ef2350294a7b6220394b25ea51e3e878de8d16be93a5b815153\",\"dweb:/ipfs/QmeDMMMHDZ5jBDUYgTQXpktwjvMv5pvfAYTVjtgrNCEMmj\"]},\"@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol\":{\"keccak256\":\"0x9431fd772ed4abc038cdfe9ce6c0066897bd1685ad45848748d1952935d5b8ef\",\"urls\":[\"bzz-raw://84233cdf4579e66aeb99788758f8cc750816c15ea495495c4fbb446f74da2469\",\"dweb:/ipfs/QmfPGduxT3Ty4uCcYCppy5E2ED5pwypwoaMrkC98i9Szyq\"]},\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol\":{\"keccak256\":\"0x36c80fdfd1b494be559413b6eacf3182142e1747d9aa21e7511e7bcaa5b52e9c\",\"urls\":[\"bzz-raw://002be88aedb9b69acb24c948428bbe57863a51c9e31219c2b0001b90a6ceba79\",\"dweb:/ipfs/QmPg5JVpkuDx3xG6DpFR3FmLfUQ42HRwpETygG7Nye56d6\"]}},\"version\":1}",
            "solc_version": "0.5.16",
            "solc_zkvm_edition": "1.0.1",
            "zk_version": "1.5.1"
          },
          "devdoc": { "methods": {} },
          "userdoc": { "methods": {} },
          "storageLayout": {
            "storage": [
              {
                "astId": 1183,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "admin",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 1185,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "pendingAdmin",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 1187,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "implementation",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
              },
              {
                "astId": 1189,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "pendingXVSVaultImplementation",
                "offset": 0,
                "slot": "3",
                "type": "t_address"
              },
              {
                "astId": 1194,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "_notEntered",
                "offset": 20,
                "slot": "3",
                "type": "t_bool"
              },
              {
                "astId": 1196,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "xvsStore",
                "offset": 0,
                "slot": "4",
                "type": "t_address"
              },
              {
                "astId": 1198,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "xvsAddress",
                "offset": 0,
                "slot": "5",
                "type": "t_address"
              },
              {
                "astId": 1202,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "rewardTokenAmountsPerBlockOrSecond",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 1235,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "userInfos",
                "offset": 0,
                "slot": "7",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1209_storage)))"
              },
              {
                "astId": 1240,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "poolInfos",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_address,t_array(t_struct(PoolInfo)1220_storage)dyn_storage)"
              },
              {
                "astId": 1244,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "totalAllocPoints",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 1253,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "withdrawalRequests",
                "offset": 0,
                "slot": "10",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage)))"
              },
              {
                "astId": 1257,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "__oldDelegatesSlot",
                "offset": 0,
                "slot": "11",
                "type": "t_mapping(t_address,t_address)"
              },
              {
                "astId": 1268,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "__oldCheckpointsSlot",
                "offset": 0,
                "slot": "12",
                "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)1262_storage))"
              },
              {
                "astId": 1272,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "__oldNumCheckpointsSlot",
                "offset": 0,
                "slot": "13",
                "type": "t_mapping(t_address,t_uint32)"
              },
              {
                "astId": 1276,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "nonces",
                "offset": 0,
                "slot": "14",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 1293,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "delegates",
                "offset": 0,
                "slot": "15",
                "type": "t_mapping(t_address,t_address)"
              },
              {
                "astId": 1299,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "checkpoints",
                "offset": 0,
                "slot": "16",
                "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)1262_storage))"
              },
              {
                "astId": 1303,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "numCheckpoints",
                "offset": 0,
                "slot": "17",
                "type": "t_mapping(t_address,t_uint32)"
              },
              {
                "astId": 1309,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "totalPendingWithdrawals",
                "offset": 0,
                "slot": "18",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
              },
              {
                "astId": 1311,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "vaultPaused",
                "offset": 0,
                "slot": "19",
                "type": "t_bool"
              },
              {
                "astId": 1315,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "isStakedToken",
                "offset": 0,
                "slot": "20",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "astId": 1321,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "pendingRewardTransfers",
                "offset": 0,
                "slot": "21",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
              },
              {
                "astId": 1323,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "primeToken",
                "offset": 0,
                "slot": "22",
                "type": "t_contract(IPrime)27"
              },
              {
                "astId": 1325,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "primeRewardToken",
                "offset": 0,
                "slot": "23",
                "type": "t_address"
              },
              {
                "astId": 1327,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "primePoolId",
                "offset": 0,
                "slot": "24",
                "type": "t_uint256"
              },
              {
                "astId": 1331,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                "label": "__gap",
                "offset": 0,
                "slot": "25",
                "type": "t_array(t_uint256)46_storage"
              }
            ],
            "types": {
              "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
              "t_array(t_struct(PoolInfo)1220_storage)dyn_storage": {
                "base": "t_struct(PoolInfo)1220_storage",
                "encoding": "dynamic_array",
                "label": "struct XVSVaultStorageV1.PoolInfo[]",
                "numberOfBytes": "32"
              },
              "t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage": {
                "base": "t_struct(WithdrawalRequest)1227_storage",
                "encoding": "dynamic_array",
                "label": "struct XVSVaultStorageV1.WithdrawalRequest[]",
                "numberOfBytes": "32"
              },
              "t_array(t_uint256)46_storage": {
                "base": "t_uint256",
                "encoding": "inplace",
                "label": "uint256[46]",
                "numberOfBytes": "1472"
              },
              "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
              "t_contract(IBEP20)171": { "encoding": "inplace", "label": "contract IBEP20", "numberOfBytes": "20" },
              "t_contract(IPrime)27": { "encoding": "inplace", "label": "contract IPrime", "numberOfBytes": "20" },
              "t_mapping(t_address,t_address)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => address)",
                "numberOfBytes": "32",
                "value": "t_address"
              },
              "t_mapping(t_address,t_array(t_struct(PoolInfo)1220_storage)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct XVSVaultStorageV1.PoolInfo[])",
                "numberOfBytes": "32",
                "value": "t_array(t_struct(PoolInfo)1220_storage)dyn_storage"
              },
              "t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct XVSVaultStorageV1.WithdrawalRequest[])",
                "numberOfBytes": "32",
                "value": "t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage"
              },
              "t_mapping(t_address,t_bool)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => bool)",
                "numberOfBytes": "32",
                "value": "t_bool"
              },
              "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
              },
              "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage)))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(uint256 => mapping(address => struct XVSVaultStorageV1.WithdrawalRequest[])))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage))"
              },
              "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1209_storage)))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(uint256 => mapping(address => struct XVSVaultStorageV1.UserInfo)))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1209_storage))"
              },
              "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(uint256 => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_uint256,t_uint256)"
              },
              "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)1262_storage))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(uint32 => struct XVSVaultStorageV1.Checkpoint))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_uint32,t_struct(Checkpoint)1262_storage)"
              },
              "t_mapping(t_address,t_struct(UserInfo)1209_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct XVSVaultStorageV1.UserInfo)",
                "numberOfBytes": "32",
                "value": "t_struct(UserInfo)1209_storage"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_mapping(t_address,t_uint32)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint32)",
                "numberOfBytes": "32",
                "value": "t_uint32"
              },
              "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage))": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => mapping(address => struct XVSVaultStorageV1.WithdrawalRequest[]))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage)"
              },
              "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1209_storage))": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => mapping(address => struct XVSVaultStorageV1.UserInfo))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_struct(UserInfo)1209_storage)"
              },
              "t_mapping(t_uint256,t_uint256)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_mapping(t_uint32,t_struct(Checkpoint)1262_storage)": {
                "encoding": "mapping",
                "key": "t_uint32",
                "label": "mapping(uint32 => struct XVSVaultStorageV1.Checkpoint)",
                "numberOfBytes": "32",
                "value": "t_struct(Checkpoint)1262_storage"
              },
              "t_struct(Checkpoint)1262_storage": {
                "encoding": "inplace",
                "label": "struct XVSVaultStorageV1.Checkpoint",
                "members": [
                  {
                    "astId": 1259,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "fromBlockOrSecond",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint32"
                  },
                  {
                    "astId": 1261,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "votes",
                    "offset": 4,
                    "slot": "0",
                    "type": "t_uint96"
                  }
                ],
                "numberOfBytes": "32"
              },
              "t_struct(PoolInfo)1220_storage": {
                "encoding": "inplace",
                "label": "struct XVSVaultStorageV1.PoolInfo",
                "members": [
                  {
                    "astId": 1211,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "token",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_contract(IBEP20)171"
                  },
                  {
                    "astId": 1213,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "allocPoint",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1215,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "lastRewardBlockOrSecond",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1217,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "accRewardPerShare",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1219,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "lockPeriod",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "160"
              },
              "t_struct(UserInfo)1209_storage": {
                "encoding": "inplace",
                "label": "struct XVSVaultStorageV1.UserInfo",
                "members": [
                  {
                    "astId": 1204,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "amount",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1206,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "rewardDebt",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1208,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "pendingWithdrawals",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "96"
              },
              "t_struct(WithdrawalRequest)1227_storage": {
                "encoding": "inplace",
                "label": "struct XVSVaultStorageV1.WithdrawalRequest",
                "members": [
                  {
                    "astId": 1222,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "amount",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1224,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "lockedUntil",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint128"
                  },
                  {
                    "astId": 1226,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorage",
                    "label": "afterUpgrade",
                    "offset": 16,
                    "slot": "1",
                    "type": "t_uint128"
                  }
                ],
                "numberOfBytes": "64"
              },
              "t_uint128": { "encoding": "inplace", "label": "uint128", "numberOfBytes": "16" },
              "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" },
              "t_uint32": { "encoding": "inplace", "label": "uint32", "numberOfBytes": "4" },
              "t_uint96": { "encoding": "inplace", "label": "uint96", "numberOfBytes": "12" }
            }
          },
          "evm": {
            "bytecode": {
              "object": ""
            },
            "methodIdentifiers": {
              "DELEGATION_TYPEHASH()": "e7a324dc",
              "DOMAIN_TYPEHASH()": "20606b70",
              "admin()": "f851a440",
              "checkpoints(address,uint32)": "f1127ed8",
              "delegates(address)": "587cde1e",
              "implementation()": "5c60da1b",
              "isStakedToken(address)": "c3c754a8",
              "nonces(address)": "7ecebe00",
              "numCheckpoints(address)": "6fcfff45",
              "pendingAdmin()": "26782247",
              "pendingRewardTransfers(address,address)": "3d4180f9",
              "pendingXVSVaultImplementation()": "de0368b2",
              "poolInfos(address,uint256)": "92e35000",
              "primePoolId()": "e8f2be6f",
              "primeRewardToken()": "add89337",
              "primeToken()": "fe5a451a",
              "rewardTokenAmountsPerBlockOrSecond(address)": "cd9b94e7",
              "totalAllocPoints(address)": "4298bdbd",
              "vaultPaused()": "73d025d6",
              "xvsAddress()": "358ae036",
              "xvsStore()": "24f52bbf"
            }
          },
          "hash": "01000085d672312860da79ff78203855e74c4173971334c804148ce78c643254",
          "factoryDependencies": {}
        },
        "XVSVaultStorageV1": {
          "abi": [
            {
              "constant": true,
              "inputs": [],
              "name": "DELEGATION_TYPEHASH",
              "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "DOMAIN_TYPEHASH",
              "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "admin",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "implementation",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "name": "nonces",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "pendingAdmin",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "pendingXVSVaultImplementation",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [
                { "internalType": "address", "name": "", "type": "address" },
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "name": "poolInfos",
              "outputs": [
                { "internalType": "contract IBEP20", "name": "token", "type": "address" },
                { "internalType": "uint256", "name": "allocPoint", "type": "uint256" },
                { "internalType": "uint256", "name": "lastRewardBlockOrSecond", "type": "uint256" },
                { "internalType": "uint256", "name": "accRewardPerShare", "type": "uint256" },
                { "internalType": "uint256", "name": "lockPeriod", "type": "uint256" }
              ],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "name": "rewardTokenAmountsPerBlockOrSecond",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "name": "totalAllocPoints",
              "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "xvsAddress",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            },
            {
              "constant": true,
              "inputs": [],
              "name": "xvsStore",
              "outputs": [{ "internalType": "address", "name": "", "type": "address" }],
              "payable": false,
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "metadata": {
            "llvm_options": [],
            "optimizer_settings": {
              "is_debug_logging_enabled": false,
              "is_fallback_to_size_enabled": false,
              "is_verify_each_enabled": false,
              "level_back_end": "Aggressive",
              "level_middle_end": "Aggressive",
              "level_middle_end_size": "Zero"
            },
            "solc_metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.b9534989\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"DELEGATION_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingXVSVaultImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfos\",\"outputs\":[{\"internalType\":\"contract IBEP20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlockOrSecond\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accRewardPerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockPeriod\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardTokenAmountsPerBlockOrSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"totalAllocPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xvsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"xvsStore\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol\":\"XVSVaultStorageV1\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":false},\"runs\":200},\"remappings\":[]},\"sources\":{\"@venusprotocol/venus-protocol/contracts/Tokens/Prime/IPrime.sol\":{\"keccak256\":\"0x58861c0c05b8757f1a5d50b107eff479c8680878e6aa51bc93af420caf73f500\",\"urls\":[\"bzz-raw://24d9dc4fc1b4f74df60329f42b3d1c904c02c2164257496959582400b820ec31\",\"dweb:/ipfs/Qmf7SJNV34KqiJ6dibiHv4oWDB9gd9jTpomYngBnDTLLRc\"]},\"@venusprotocol/venus-protocol/contracts/Utils/IBEP20.sol\":{\"keccak256\":\"0x839b08895eb1ad83502d3631e8e9e3a856d2a8c63c46f070d604af7b26c62c07\",\"urls\":[\"bzz-raw://5908d7afba215ef2350294a7b6220394b25ea51e3e878de8d16be93a5b815153\",\"dweb:/ipfs/QmeDMMMHDZ5jBDUYgTQXpktwjvMv5pvfAYTVjtgrNCEMmj\"]},\"@venusprotocol/venus-protocol/contracts/Utils/SafeMath.sol\":{\"keccak256\":\"0x9431fd772ed4abc038cdfe9ce6c0066897bd1685ad45848748d1952935d5b8ef\",\"urls\":[\"bzz-raw://84233cdf4579e66aeb99788758f8cc750816c15ea495495c4fbb446f74da2469\",\"dweb:/ipfs/QmfPGduxT3Ty4uCcYCppy5E2ED5pwypwoaMrkC98i9Szyq\"]},\"@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol\":{\"keccak256\":\"0x36c80fdfd1b494be559413b6eacf3182142e1747d9aa21e7511e7bcaa5b52e9c\",\"urls\":[\"bzz-raw://002be88aedb9b69acb24c948428bbe57863a51c9e31219c2b0001b90a6ceba79\",\"dweb:/ipfs/QmPg5JVpkuDx3xG6DpFR3FmLfUQ42HRwpETygG7Nye56d6\"]}},\"version\":1}",
            "solc_version": "0.5.16",
            "solc_zkvm_edition": "1.0.1",
            "zk_version": "1.5.1"
          },
          "devdoc": { "methods": {} },
          "userdoc": { "methods": {} },
          "storageLayout": {
            "storage": [
              {
                "astId": 1183,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "admin",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 1185,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "pendingAdmin",
                "offset": 0,
                "slot": "1",
                "type": "t_address"
              },
              {
                "astId": 1187,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "implementation",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
              },
              {
                "astId": 1189,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "pendingXVSVaultImplementation",
                "offset": 0,
                "slot": "3",
                "type": "t_address"
              },
              {
                "astId": 1194,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "_notEntered",
                "offset": 20,
                "slot": "3",
                "type": "t_bool"
              },
              {
                "astId": 1196,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "xvsStore",
                "offset": 0,
                "slot": "4",
                "type": "t_address"
              },
              {
                "astId": 1198,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "xvsAddress",
                "offset": 0,
                "slot": "5",
                "type": "t_address"
              },
              {
                "astId": 1202,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "rewardTokenAmountsPerBlockOrSecond",
                "offset": 0,
                "slot": "6",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 1235,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "userInfos",
                "offset": 0,
                "slot": "7",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1209_storage)))"
              },
              {
                "astId": 1240,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "poolInfos",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_address,t_array(t_struct(PoolInfo)1220_storage)dyn_storage)"
              },
              {
                "astId": 1244,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "totalAllocPoints",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 1253,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "withdrawalRequests",
                "offset": 0,
                "slot": "10",
                "type": "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage)))"
              },
              {
                "astId": 1257,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "__oldDelegatesSlot",
                "offset": 0,
                "slot": "11",
                "type": "t_mapping(t_address,t_address)"
              },
              {
                "astId": 1268,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "__oldCheckpointsSlot",
                "offset": 0,
                "slot": "12",
                "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)1262_storage))"
              },
              {
                "astId": 1272,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "__oldNumCheckpointsSlot",
                "offset": 0,
                "slot": "13",
                "type": "t_mapping(t_address,t_uint32)"
              },
              {
                "astId": 1276,
                "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                "label": "nonces",
                "offset": 0,
                "slot": "14",
                "type": "t_mapping(t_address,t_uint256)"
              }
            ],
            "types": {
              "t_address": { "encoding": "inplace", "label": "address", "numberOfBytes": "20" },
              "t_array(t_struct(PoolInfo)1220_storage)dyn_storage": {
                "base": "t_struct(PoolInfo)1220_storage",
                "encoding": "dynamic_array",
                "label": "struct XVSVaultStorageV1.PoolInfo[]",
                "numberOfBytes": "32"
              },
              "t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage": {
                "base": "t_struct(WithdrawalRequest)1227_storage",
                "encoding": "dynamic_array",
                "label": "struct XVSVaultStorageV1.WithdrawalRequest[]",
                "numberOfBytes": "32"
              },
              "t_bool": { "encoding": "inplace", "label": "bool", "numberOfBytes": "1" },
              "t_contract(IBEP20)171": { "encoding": "inplace", "label": "contract IBEP20", "numberOfBytes": "20" },
              "t_mapping(t_address,t_address)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => address)",
                "numberOfBytes": "32",
                "value": "t_address"
              },
              "t_mapping(t_address,t_array(t_struct(PoolInfo)1220_storage)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct XVSVaultStorageV1.PoolInfo[])",
                "numberOfBytes": "32",
                "value": "t_array(t_struct(PoolInfo)1220_storage)dyn_storage"
              },
              "t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct XVSVaultStorageV1.WithdrawalRequest[])",
                "numberOfBytes": "32",
                "value": "t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage"
              },
              "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage)))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(uint256 => mapping(address => struct XVSVaultStorageV1.WithdrawalRequest[])))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage))"
              },
              "t_mapping(t_address,t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1209_storage)))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(uint256 => mapping(address => struct XVSVaultStorageV1.UserInfo)))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1209_storage))"
              },
              "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)1262_storage))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(uint32 => struct XVSVaultStorageV1.Checkpoint))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_uint32,t_struct(Checkpoint)1262_storage)"
              },
              "t_mapping(t_address,t_struct(UserInfo)1209_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct XVSVaultStorageV1.UserInfo)",
                "numberOfBytes": "32",
                "value": "t_struct(UserInfo)1209_storage"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_mapping(t_address,t_uint32)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint32)",
                "numberOfBytes": "32",
                "value": "t_uint32"
              },
              "t_mapping(t_uint256,t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage))": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => mapping(address => struct XVSVaultStorageV1.WithdrawalRequest[]))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_array(t_struct(WithdrawalRequest)1227_storage)dyn_storage)"
              },
              "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1209_storage))": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => mapping(address => struct XVSVaultStorageV1.UserInfo))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_struct(UserInfo)1209_storage)"
              },
              "t_mapping(t_uint32,t_struct(Checkpoint)1262_storage)": {
                "encoding": "mapping",
                "key": "t_uint32",
                "label": "mapping(uint32 => struct XVSVaultStorageV1.Checkpoint)",
                "numberOfBytes": "32",
                "value": "t_struct(Checkpoint)1262_storage"
              },
              "t_struct(Checkpoint)1262_storage": {
                "encoding": "inplace",
                "label": "struct XVSVaultStorageV1.Checkpoint",
                "members": [
                  {
                    "astId": 1259,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "fromBlockOrSecond",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint32"
                  },
                  {
                    "astId": 1261,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "votes",
                    "offset": 4,
                    "slot": "0",
                    "type": "t_uint96"
                  }
                ],
                "numberOfBytes": "32"
              },
              "t_struct(PoolInfo)1220_storage": {
                "encoding": "inplace",
                "label": "struct XVSVaultStorageV1.PoolInfo",
                "members": [
                  {
                    "astId": 1211,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "token",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_contract(IBEP20)171"
                  },
                  {
                    "astId": 1213,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "allocPoint",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1215,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "lastRewardBlockOrSecond",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1217,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "accRewardPerShare",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1219,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "lockPeriod",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "160"
              },
              "t_struct(UserInfo)1209_storage": {
                "encoding": "inplace",
                "label": "struct XVSVaultStorageV1.UserInfo",
                "members": [
                  {
                    "astId": 1204,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "amount",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1206,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "rewardDebt",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1208,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "pendingWithdrawals",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "96"
              },
              "t_struct(WithdrawalRequest)1227_storage": {
                "encoding": "inplace",
                "label": "struct XVSVaultStorageV1.WithdrawalRequest",
                "members": [
                  {
                    "astId": 1222,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "amount",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 1224,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "lockedUntil",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint128"
                  },
                  {
                    "astId": 1226,
                    "contract": "@venusprotocol/venus-protocol/contracts/XVSVault/XVSVaultStorage.sol:XVSVaultStorageV1",
                    "label": "afterUpgrade",
                    "offset": 16,
                    "slot": "1",
                    "type": "t_uint128"
                  }
                ],
                "numberOfBytes": "64"
              },
              "t_uint128": { "encoding": "inplace", "label": "uint128", "numberOfBytes": "16" },
              "t_uint256": { "encoding": "inplace", "label": "uint256", "numberOfBytes": "32" },
              "t_uint32": { "encoding": "inplace", "label": "uint32", "numberOfBytes": "4" },
              "t_uint96": { "encoding": "inplace", "label": "uint96", "numberOfBytes": "12" }
            }
          },
          "evm": {
            "bytecode": {
              "object": "00010000000000020000008003000039000000400030043f000000000300041600000001002001900000001b0000c13d000000000003004b000000aa0000c13d000000000201001900000060022002700000003603200197000000040030008c000000aa0000413d000000000401043b000000e002400270000000380040009c000000220000813d000000450020009c000000310000213d000000490020009c000000410000613d0000004a0020009c000000550000613d0000004b0020009c000000aa0000c13d0000000101000039000000560000013d000000000003004b000000aa0000c13d0000002001000039000001000010044300000120000004430000003701000041000000d40001042e000000390020009c000000390000213d0000003d0020009c0000004a0000613d0000003e0020009c0000005b0000613d0000003f0020009c000000aa0000c13d000000240230008a0000004f0020009c000000aa0000813d0000000401100370000000000101043b0000000602000039000000a00000013d000000460020009c000000510000613d000000470020009c0000009a0000613d000000480020009c000000aa0000c13d0000000201000039000000560000013d0000003a0020009c000000530000613d0000003b0020009c000000ac0000613d0000003c0020009c000000aa0000c13d000000000100041a000000570000013d0000004c01000041000000800010043f0000004d01000041000000a00010043f0000004e01000041000000c00010043f00000080010000390000004302000039000000b20000013d000000240230008a0000004f0020009c000000aa0000813d0000000401100370000000000101043b0000000e02000039000000a00000013d0000000501000039000000560000013d0000000301000039000000560000013d0000000401000039000000000101041a0000004001100197000000800010043f0000004101000041000000d40001042e000000440230008a000000500020009c000000aa0000813d0000002402100370000000000202043b000100000002001d0000000401100370000000000101043b0000000802000039000000200020043f000000400110019700000000001004350000000001000414000000360010009c0000003601008041000000c00110021000000044011001c7000080100200003900d300ce0000040f0000000100200190000000aa0000613d000000000101043b000000000201041a000000010020006b000000b60000813d00000000001004350000002002000039000000000100001900d300b90000040f000000010200002900000005022000c900000000012100190000000102100039000000000202041a0000000203100039000000000303041a0000000304100039000000000404041a000000000501041a0000000401100039000000000101041a000000400600043d0000008007600039000000000017043500000060016000390000000000410435000000400160003900000000003104350000002001600039000000000021043500000040015001970000000000160435000000400100043d0000000002160049000000a002200039000000360020009c00000036020080410000006002200210000000360010009c00000036010080410000004001100210000000000112019f000000d40001042e000000240230008a0000004f0020009c000000aa0000813d0000000401100370000000000101043b0000000902000039000000200020043f000000400110019700000000001004350000004002000039000000000100001900d300b90000040f000000000101041a000000800010043f0000004101000041000000d40001042e0000000001000019000000d5000104300000004201000041000000800010043f0000004301000041000000a00010043f00000080010000390000003a0200003900d300b90000040f000000800010043f0000004101000041000000d40001042e000000010100008a00000000000104350000000000000431000000360010009c00000036010080410000004001100210000000360020009c00000036020080410000006002200210000000000112019f0000000002000414000000360020009c0000003602008041000000c002200210000000000112019f00000051011001c7000080100200003900d300ce0000040f0000000100200190000000cc0000613d000000000101043b000000000001042d0000000001000019000000d500010430000000d1002104230000000102000039000000000001042d0000000002000019000000000001042d000000d300000432000000d40001042e000000d5000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000002000000000000000000000000000000400000010000000000000000007ecebe000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000de0368b100000000000000000000000000000000000000000000000000000000de0368b200000000000000000000000000000000000000000000000000000000e7a324dc00000000000000000000000000000000000000000000000000000000f851a440000000000000000000000000000000000000000000000000000000007ecebe000000000000000000000000000000000000000000000000000000000092e3500000000000000000000000000000000000000000000000000000000000cd9b94e7000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000002000000080000000000000000044656c65676174696f6e28616464726573732064656c6567617465652c75696e74323536206e6f6e63652c75696e743235362065787069727929000000000000020000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000000000000000000000358ae03500000000000000000000000000000000000000000000000000000000358ae036000000000000000000000000000000000000000000000000000000004298bdbd000000000000000000000000000000000000000000000000000000005c60da1b0000000000000000000000000000000000000000000000000000000020606b700000000000000000000000000000000000000000000000000000000024f52bbf0000000000000000000000000000000000000000000000000000000026782247454950373132446f6d61696e28737472696e67206e616d652c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e7472616374290000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc002000000000000000000000000000000000000000000000000000000000000009b975efd64bf35c6849b3b7ca723469a5091c81554cf212f8e5860cab9a66c3a"
            },
            "methodIdentifiers": {
              "DELEGATION_TYPEHASH()": "e7a324dc",
              "DOMAIN_TYPEHASH()": "20606b70",
              "admin()": "f851a440",
              "implementation()": "5c60da1b",
              "nonces(address)": "7ecebe00",
              "pendingAdmin()": "26782247",
              "pendingXVSVaultImplementation()": "de0368b2",
              "poolInfos(address,uint256)": "92e35000",
              "rewardTokenAmountsPerBlockOrSecond(address)": "cd9b94e7",
              "totalAllocPoints(address)": "4298bdbd",
              "xvsAddress()": "358ae036",
              "xvsStore()": "24f52bbf"
            }
          },
          "hash": "0100005329695cfb22430e7b47aac73a63c5b5e0dc2868c3f267fe7756ee57ad",
          "factoryDependencies": {}
        }
      }
    }
  }
}
