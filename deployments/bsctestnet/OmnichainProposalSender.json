{
  "address": "0x02d188Be98CF7676Cd98b03C8470f059fD7799Da",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ILayerZeroEndpoint",
          "name": "lzEndpoint_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "accessControlManager_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ZeroAddressNotAllowed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "executionHash",
          "type": "bytes32"
        }
      ],
      "name": "ClearPayload",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "remoteChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "ExecuteRemoteProposal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "FallbackWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldAccessControlManager",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newAccessControlManager",
          "type": "address"
        }
      ],
      "name": "NewAccessControlManager",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxLimit",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxLimit",
          "type": "uint256"
        }
      ],
      "name": "SetMaxDailyLimit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "remoteChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "oldRemoteAddress",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "newRemoteAddress",
          "type": "bytes"
        }
      ],
      "name": "SetTrustedRemoteAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "remoteChainId",
          "type": "uint16"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "adapterParams",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "reason",
          "type": "bytes"
        }
      ],
      "name": "StorePayload",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        }
      ],
      "name": "TrustedRemoteRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "LZ_ENDPOINT",
      "outputs": [
        {
          "internalType": "contract ILayerZeroEndpoint",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "accessControlManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "chainIdToLast24HourCommandsSent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "chainIdToLast24HourWindowStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "chainIdToLastProposalSentTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "chainIdToMaxDailyLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "remoteChainId_",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "payload_",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "adapterParams_",
          "type": "bytes"
        }
      ],
      "name": "estimateFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "remoteChainId_",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "payload_",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "adapterParams_",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "pId_",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "remoteChainId_",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "payload_",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "adapterParams_",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "originalValue_",
          "type": "uint256"
        }
      ],
      "name": "fallbackWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "version_",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "chainId_",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "configType_",
          "type": "uint256"
        }
      ],
      "name": "getConfig",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "remoteChainId_",
          "type": "uint16"
        }
      ],
      "name": "removeTrustedRemote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pId_",
          "type": "uint256"
        },
        {
          "internalType": "uint16",
          "name": "remoteChainId_",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "payload_",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "adapterParams_",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "originalValue_",
          "type": "uint256"
        }
      ],
      "name": "retryExecute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "accessControlManager_",
          "type": "address"
        }
      ],
      "name": "setAccessControlManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "version_",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "chainId_",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "configType_",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "config_",
          "type": "bytes"
        }
      ],
      "name": "setConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "chainId_",
          "type": "uint16"
        },
        {
          "internalType": "uint256",
          "name": "limit_",
          "type": "uint256"
        }
      ],
      "name": "setMaxDailyLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "version_",
          "type": "uint16"
        }
      ],
      "name": "setSendVersion",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "remoteChainId_",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "newRemoteAddress_",
          "type": "bytes"
        }
      ],
      "name": "setTrustedRemoteAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "storedExecutionHashes",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "name": "trustedRemoteLookup",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xb4c1a2935965eac02c565cd223cf9b902d3ee970d144538e38c603e5ed43d495",
  "receipt": {
    "to": null,
    "from": "0x9cc6F5f16498fCEEf4D00A350Bd8F8921D304Dc9",
    "contractAddress": "0x02d188Be98CF7676Cd98b03C8470f059fD7799Da",
    "transactionIndex": 1,
    "gasUsed": "2788351",
    "logsBloom": "0x
    "blockHash": "0x8759ce11fa921cfd0ddf0eb0f9d6b6776a8694244e069673bd08278fc71a0d33",
    "transactionHash": "0xb4c1a2935965eac02c565cd223cf9b902d3ee970d144538e38c603e5ed43d495",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 37874125,
        "transactionHash": "0xb4c1a2935965eac02c565cd223cf9b902d3ee970d144538e38c603e5ed43d495",
        "address": "0x02d188Be98CF7676Cd98b03C8470f059fD7799Da",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009cc6f5f16498fceef4d00a350bd8f8921d304dc9"
        ],
        "data": "0x",
        "logIndex": 8,
        "blockHash": "0x8759ce11fa921cfd0ddf0eb0f9d6b6776a8694244e069673bd08278fc71a0d33"
      }
    ],
    "blockNumber": 37874125,
    "cumulativeGasUsed": "3298711",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x6Fcb97553D41516Cb228ac03FdC8B9a0a9df04A1", "0x45f8a08F534f34A97187626E05d4b6648Eeaa9AA"],
  "numDeployments": 1,
  "solcInputHash": "b379582ce048ce8b7c3cb41f1c420e79",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"lzEndpoint_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessControlManager_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ZeroAddressNotAllowed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"executionHash\",\"type\":\"bytes32\"}],\"name\":\"ClearPayload\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"name\":\"ExecuteRemoteProposal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"FallbackWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAccessControlManager\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAccessControlManager\",\"type\":\"address\"}],\"name\":\"NewAccessControlManager\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxLimit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxLimit\",\"type\":\"uint256\"}],\"name\":\"SetMaxDailyLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"oldRemoteAddress\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"newRemoteAddress\",\"type\":\"bytes\"}],\"name\":\"SetTrustedRemoteAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"remoteChainId\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"adapterParams\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"reason\",\"type\":\"bytes\"}],\"name\":\"StorePayload\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"TrustedRemoteRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LZ_ENDPOINT\",\"outputs\":[{\"internalType\":\"contract ILayerZeroEndpoint\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accessControlManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainIdToLast24HourCommandsSent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainIdToLast24HourWindowStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainIdToLastProposalSentTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"chainIdToMaxDailyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"remoteChainId_\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"payload_\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"adapterParams_\",\"type\":\"bytes\"}],\"name\":\"estimateFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"remoteChainId_\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"payload_\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"adapterParams_\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pId_\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"remoteChainId_\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"payload_\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"adapterParams_\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"originalValue_\",\"type\":\"uint256\"}],\"name\":\"fallbackWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"version_\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"configType_\",\"type\":\"uint256\"}],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"remoteChainId_\",\"type\":\"uint16\"}],\"name\":\"removeTrustedRemote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pId_\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"remoteChainId_\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"payload_\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"adapterParams_\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"originalValue_\",\"type\":\"uint256\"}],\"name\":\"retryExecute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"accessControlManager_\",\"type\":\"address\"}],\"name\":\"setAccessControlManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"version_\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"configType_\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"config_\",\"type\":\"bytes\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"limit_\",\"type\":\"uint256\"}],\"name\":\"setMaxDailyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"version_\",\"type\":\"uint16\"}],\"name\":\"setSendVersion\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"remoteChainId_\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"newRemoteAddress_\",\"type\":\"bytes\"}],\"name\":\"setTrustedRemoteAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"storedExecutionHashes\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"name\":\"trustedRemoteLookup\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Venus\",\"custom:security-contact\":\"https://github.com/VenusProtocol/governance-contracts#discussion\",\"kind\":\"dev\",\"methods\":{\"estimateFees(uint16,bytes,bytes)\":{\"details\":\"The estimated fees are the minimum required; it's recommended to increase the fees amount when sending a message. The unused amount will be refunded\",\"params\":{\"adapterParams_\":\"The params used to specify the custom amount of gas required for the execution on the destination\",\"payload_\":\"The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(abi.encode(targets, values, signatures, calldatas), pId)\",\"remoteChainId_\":\"The LayerZero id of a remote chain\"},\"returns\":{\"_0\":\"nativeFee The amount of fee in the native gas token (e.g. ETH)\",\"_1\":\"zroFee The amount of fee in ZRO token\"}},\"execute(uint16,bytes,bytes)\":{\"custom:access\":\"Controlled by Access Control Manager\",\"custom:event\":\"Emits ExecuteRemoteProposal with remote chain id and payload on successEmits StorePayload with last stored payload proposal ID ,remote chain id , payload, adapter params , values and reason for failure\",\"details\":\"Stores the hash of the execution parameters if sending fails (e.g., due to insufficient fees)\",\"params\":{\"adapterParams_\":\"The params used to specify the custom amount of gas required for the execution on the destination\",\"payload_\":\"The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(targets, values, signatures, calldatas, proposalType)\",\"remoteChainId_\":\"The LayerZero id of the remote chain\"}},\"fallbackWithdraw(address,uint256,uint16,bytes,bytes,uint256)\":{\"custom:access\":\"Only owner\",\"custom:event\":\"Emits ClearPayload with proposal ID and hashEmits FallbackWithdraw with receiver and amount\",\"params\":{\"adapterParams_\":\"The params used to specify the custom amount of gas required for the execution on the destination\",\"originalValue_\":\"The msg.value passed when execute() function was called\",\"pId_\":\"The proposal ID to identify a failed message\",\"payload_\":\"The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(abi.encode(targets, values, signatures, calldatas), pId)\",\"remoteChainId_\":\"The LayerZero id of the remote chain\",\"to_\":\"Address of the receiver\"}},\"getConfig(uint16,uint16,uint256)\":{\"params\":{\"chainId_\":\"The LayerZero chainId\",\"configType_\":\"Type of configuration. Every messaging library has its own convention.\",\"version_\":\"Messaging library version\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"custom:access\":\"Controlled by AccessControlManager.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeTrustedRemote(uint16)\":{\"custom:access\":\"Only owner.\",\"custom:event\":\"Emit TrustedRemoteRemoved with remote chain id.\",\"params\":{\"remoteChainId_\":\"The chain's id corresponds to setting the trusted remote to empty.\"}},\"retryExecute(uint256,uint16,bytes,bytes,uint256)\":{\"custom:access\":\"Controlled by Access Control Manager\",\"custom:event\":\"Emits ClearPayload with proposal ID and hash\",\"details\":\"Allows providing more fees if needed. The extra fees will be refunded to the caller\",\"params\":{\"adapterParams_\":\"The params used to specify the custom amount of gas required for the execution on the destination\",\"originalValue_\":\"The msg.value passed when execute() function was called\",\"pId_\":\"The proposal ID to identify a failed message\",\"payload_\":\"The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(abi.encode(targets, values, signatures, calldatas), pId)\",\"remoteChainId_\":\"The LayerZero id of the remote chain\"}},\"setAccessControlManager(address)\":{\"custom:access\":\"Only owner\",\"custom:event\":\"Emits NewAccessControlManager with old and new access control manager addresses\",\"params\":{\"accessControlManager_\":\"The new address of the Access Control Manager.\"}},\"setConfig(uint16,uint16,uint256,bytes)\":{\"custom:access\":\"Controlled by AccessControlManager.\",\"params\":{\"chainId_\":\"The LayerZero chainId for the pending config change\",\"configType_\":\"The type of configuration. Every messaging library has its own convention\",\"config_\":\"The configuration in bytes. It can encode arbitrary content\",\"version_\":\"Messaging library version\"}},\"setMaxDailyLimit(uint16,uint256)\":{\"custom:access\":\"Controlled by AccessControlManager.\",\"custom:event\":\"Emits SetMaxDailyLimit with old and new limit and its corresponding chain id\",\"params\":{\"chainId_\":\"Destination chain ID.\",\"limit_\":\"Number of commands.\"}},\"setSendVersion(uint16)\":{\"custom:access\":\"Controlled by AccessControlManager.\",\"params\":{\"version_\":\"New messaging library version\"}},\"setTrustedRemoteAddress(uint16,bytes)\":{\"custom:access\":\"Controlled by AccessControlManager.\",\"custom:event\":\"Emits SetTrustedRemoteAddress with remote chain Id and remote address\",\"params\":{\"newRemoteAddress_\":\"The address of the contract on the remote chain to receive messages sent by this contract\",\"remoteChainId_\":\"The LayerZero id of a remote chain\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"custom:access\":\"Controlled by AccessControlManager.\"}},\"stateVariables\":{\"storedExecutionHashes\":{\"details\":\"[proposalId] -> [executionHash]\"}},\"title\":\"OmnichainProposalSender\",\"version\":1},\"userdoc\":{\"errors\":{\"ZeroAddressNotAllowed()\":[{\"notice\":\"Thrown if the supplied address is a zero address where it is not allowed\"}]},\"events\":{\"ClearPayload(uint256,bytes32)\":{\"notice\":\"Emitted when a previously failed message is successfully sent to the remote chain\"},\"ExecuteRemoteProposal(uint16,uint256,bytes)\":{\"notice\":\"Emitted when a proposal execution request is sent to the remote chain\"},\"FallbackWithdraw(address,uint256)\":{\"notice\":\"Emitted while fallback withdraw\"},\"NewAccessControlManager(address,address)\":{\"notice\":\"Emitted when the address of ACM is updated.\"},\"SetMaxDailyLimit(uint16,uint256,uint256)\":{\"notice\":\"Emitted when the maximum daily limit of commands from the local chain is modified.\"},\"SetTrustedRemoteAddress(uint16,bytes,bytes)\":{\"notice\":\"Emitted when a remote message receiver is set for the remote chain\"},\"StorePayload(uint256,uint16,bytes,bytes,uint256,bytes)\":{\"notice\":\"Emitted when an execution hash of a failed message is saved\"},\"TrustedRemoteRemoved(uint16)\":{\"notice\":\"Event emitted when trusted remote sets to empty.\"}},\"kind\":\"user\",\"methods\":{\"LZ_ENDPOINT()\":{\"notice\":\"LayerZero endpoint for sending messages to remote chains\"},\"accessControlManager()\":{\"notice\":\"ACM (Access Control Manager) contract address.\"},\"chainIdToLast24HourCommandsSent(uint16)\":{\"notice\":\"Total commands transferred within the last 24-hour window from the local chain.\"},\"chainIdToLast24HourWindowStart(uint16)\":{\"notice\":\"Timestamp when the last 24-hour window started from the local chain.\"},\"chainIdToLastProposalSentTimestamp(uint16)\":{\"notice\":\"Timestamp when the last proposal sent from the local chain to dest chain.\"},\"chainIdToMaxDailyLimit(uint16)\":{\"notice\":\"Maximum daily limit for commands from the local chain.\"},\"estimateFees(uint16,bytes,bytes)\":{\"notice\":\"Estimates LayerZero fees for cross-chain message delivery to the remote chain\"},\"execute(uint16,bytes,bytes)\":{\"notice\":\"Sends a message to execute a remote proposal\"},\"fallbackWithdraw(address,uint256,uint16,bytes,bytes,uint256)\":{\"notice\":\"Clear previously failed message\"},\"getConfig(uint16,uint16,uint256)\":{\"notice\":\"Gets the configuration of the LayerZero messaging library of the specified version\"},\"pause()\":{\"notice\":\"Triggers the paused state of the controller.\"},\"proposalCount()\":{\"notice\":\"Stores the total number of remote proposals\"},\"removeTrustedRemote(uint16)\":{\"notice\":\"Remove trusted remote from storage.\"},\"renounceOwnership()\":{\"notice\":\"Empty implementation of renounce ownership to avoid any mishap.\"},\"retryExecute(uint256,uint16,bytes,bytes,uint256)\":{\"notice\":\"Resends a previously failed message\"},\"setAccessControlManager(address)\":{\"notice\":\"Sets the address of Access Control Manager (ACM).\"},\"setConfig(uint16,uint16,uint256,bytes)\":{\"notice\":\"Sets the configuration of the LayerZero messaging library of the specified version\"},\"setMaxDailyLimit(uint16,uint256)\":{\"notice\":\"Sets the limit of daily (24 Hour) command amount.\"},\"setSendVersion(uint16)\":{\"notice\":\"Sets the configuration of the LayerZero messaging library of the specified version\"},\"setTrustedRemoteAddress(uint16,bytes)\":{\"notice\":\"Sets the remote message receiver address\"},\"storedExecutionHashes(uint256)\":{\"notice\":\"Execution hashes of failed messages\"},\"trustedRemoteLookup(uint16)\":{\"notice\":\"Specifies the allowed path for sending messages (remote chainId => remote app address + local app address)\"},\"unpause()\":{\"notice\":\"Triggers the resume state of the controller.\"}},\"notice\":\"OmnichainProposalSender contract builds upon the functionality of its parent contract , BaseOmnichainControllerSrc It sends a proposal's data to remote chains for execution after the proposal passes on the main chain when used with GovernorBravo, the owner of this contract must be set to the Timelock contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Cross-chain/OmnichainProposalSender.sol\":\"OmnichainProposalSender\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[]},\"sources\":{\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\nimport \\\"./ILayerZeroUserApplicationConfig.sol\\\";\\n\\ninterface ILayerZeroEndpoint is ILayerZeroUserApplicationConfig {\\n    // @notice send a LayerZero message to the specified address at a LayerZero endpoint.\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _destination - the address on destination chain (in bytes). address length/format may vary by chains\\n    // @param _payload - a custom bytes payload to send to the destination contract\\n    // @param _refundAddress - if the source transaction is cheaper than the amount of value passed, refund the additional amount to this address\\n    // @param _zroPaymentAddress - the address of the ZRO token holder who would pay for the transaction\\n    // @param _adapterParams - parameters for custom functionality. e.g. receive airdropped native gas from the relayer on destination\\n    function send(\\n        uint16 _dstChainId,\\n        bytes calldata _destination,\\n        bytes calldata _payload,\\n        address payable _refundAddress,\\n        address _zroPaymentAddress,\\n        bytes calldata _adapterParams\\n    ) external payable;\\n\\n    // @notice used by the messaging library to publish verified payload\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source contract (as bytes) at the source chain\\n    // @param _dstAddress - the address on destination chain\\n    // @param _nonce - the unbound message ordering nonce\\n    // @param _gasLimit - the gas limit for external contract execution\\n    // @param _payload - verified payload to send to the destination contract\\n    function receivePayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        address _dstAddress,\\n        uint64 _nonce,\\n        uint _gasLimit,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice get the inboundNonce of a lzApp from a source chain which could be EVM or non-EVM chain\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function getInboundNonce(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (uint64);\\n\\n    // @notice get the outboundNonce from this source chain which, consequently, is always an EVM\\n    // @param _srcAddress - the source chain contract address\\n    function getOutboundNonce(uint16 _dstChainId, address _srcAddress) external view returns (uint64);\\n\\n    // @notice gets a quote in source native gas, for the amount that send() requires to pay for message delivery\\n    // @param _dstChainId - the destination chain identifier\\n    // @param _userApplication - the user app address on this EVM chain\\n    // @param _payload - the custom message to send over LayerZero\\n    // @param _payInZRO - if false, user app pays the protocol fee in native token\\n    // @param _adapterParam - parameters for the adapter service, e.g. send some dust native token to dstChain\\n    function estimateFees(\\n        uint16 _dstChainId,\\n        address _userApplication,\\n        bytes calldata _payload,\\n        bool _payInZRO,\\n        bytes calldata _adapterParam\\n    ) external view returns (uint nativeFee, uint zroFee);\\n\\n    // @notice get this Endpoint's immutable source identifier\\n    function getChainId() external view returns (uint16);\\n\\n    // @notice the interface to retry failed message on this Endpoint destination\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    // @param _payload - the payload to be retried\\n    function retryPayload(\\n        uint16 _srcChainId,\\n        bytes calldata _srcAddress,\\n        bytes calldata _payload\\n    ) external;\\n\\n    // @notice query if any STORED payload (message blocking) at the endpoint.\\n    // @param _srcChainId - the source chain identifier\\n    // @param _srcAddress - the source chain contract address\\n    function hasStoredPayload(uint16 _srcChainId, bytes calldata _srcAddress) external view returns (bool);\\n\\n    // @notice query if the _libraryAddress is valid for sending msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getSendLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the _libraryAddress is valid for receiving msgs.\\n    // @param _userApplication - the user app address on this EVM chain\\n    function getReceiveLibraryAddress(address _userApplication) external view returns (address);\\n\\n    // @notice query if the non-reentrancy guard for send() is on\\n    // @return true if the guard is on. false otherwise\\n    function isSendingPayload() external view returns (bool);\\n\\n    // @notice query if the non-reentrancy guard for receive() is on\\n    // @return true if the guard is on. false otherwise\\n    function isReceivingPayload() external view returns (bool);\\n\\n    // @notice get the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _userApplication - the contract address of the user application\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    function getConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        address _userApplication,\\n        uint _configType\\n    ) external view returns (bytes memory);\\n\\n    // @notice get the send() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getSendVersion(address _userApplication) external view returns (uint16);\\n\\n    // @notice get the lzReceive() LayerZero messaging library version\\n    // @param _userApplication - the contract address of the user application\\n    function getReceiveVersion(address _userApplication) external view returns (uint16);\\n}\\n\",\"keccak256\":\"0xab7fcacc672251c850f00c0abd4100df9afcc4ad70b8d331a2fd4cb07acab9f4\",\"license\":\"MIT\"},\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroUserApplicationConfig.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.5.0;\\n\\ninterface ILayerZeroUserApplicationConfig {\\n    // @notice set the configuration of the LayerZero messaging library of the specified version\\n    // @param _version - messaging library version\\n    // @param _chainId - the chainId for the pending config change\\n    // @param _configType - type of configuration. every messaging library has its own convention.\\n    // @param _config - configuration in the bytes. can encode arbitrary content.\\n    function setConfig(\\n        uint16 _version,\\n        uint16 _chainId,\\n        uint _configType,\\n        bytes calldata _config\\n    ) external;\\n\\n    // @notice set the send() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setSendVersion(uint16 _version) external;\\n\\n    // @notice set the lzReceive() LayerZero messaging library version to _version\\n    // @param _version - new messaging library version\\n    function setReceiveVersion(uint16 _version) external;\\n\\n    // @notice Only when the UA needs to resume the message flow in blocking mode and clear the stored payload\\n    // @param _srcChainId - the chainId of the source chain\\n    // @param _srcAddress - the contract address of the source contract at the source chain\\n    function forceResumeReceive(uint16 _srcChainId, bytes calldata _srcAddress) external;\\n}\\n\",\"keccak256\":\"0xb4df93aeb0fb46373a4fb728ad2603edc8b9a1577eee8d801768dc115bf96498\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@venusprotocol/solidity-utilities/contracts/validators.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.8.13;\\n\\n/// @notice Thrown if the supplied address is a zero address where it is not allowed\\nerror ZeroAddressNotAllowed();\\n\\n/// @notice Checks if the provided address is nonzero, reverts otherwise\\n/// @param address_ Address to check\\n/// @custom:error ZeroAddressNotAllowed is thrown if the provided address is a zero address\\nfunction ensureNonzeroAddress(address address_) pure {\\n    if (address_ == address(0)) {\\n        revert ZeroAddressNotAllowed();\\n    }\\n}\\n\",\"keccak256\":\"0x909eb76841ebd57d8f53686b76b1a09da7bbbbcddb29510c41674d5aa84c713e\",\"license\":\"BSD-3-Clause\"},\"contracts/Cross-chain/BaseOmnichainControllerSrc.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\n\\npragma solidity 0.8.13;\\n\\nimport { Pausable } from \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\nimport { Ownable } from \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport { ensureNonzeroAddress } from \\\"@venusprotocol/solidity-utilities/contracts/validators.sol\\\";\\nimport { IAccessControlManagerV8 } from \\\"./../Governance/IAccessControlManagerV8.sol\\\";\\n\\n/**\\n * @title BaseOmnichainControllerSrc\\n * @dev This contract is the base for the Omnichain controller source contracts.\\n * It provides functionality related to daily command limits and pausability.\\n * @custom:security-contact https://github.com/VenusProtocol/governance-contracts#discussion\\n */\\n\\ncontract BaseOmnichainControllerSrc is Ownable, Pausable {\\n    /**\\n     * @notice ACM (Access Control Manager) contract address.\\n     */\\n    address public accessControlManager;\\n\\n    /**\\n     * @notice Maximum daily limit for commands from the local chain.\\n     */\\n    mapping(uint16 => uint256) public chainIdToMaxDailyLimit;\\n\\n    /**\\n     * @notice Total commands transferred within the last 24-hour window from the local chain.\\n     */\\n    mapping(uint16 => uint256) public chainIdToLast24HourCommandsSent;\\n\\n    /**\\n     * @notice Timestamp when the last 24-hour window started from the local chain.\\n     */\\n    mapping(uint16 => uint256) public chainIdToLast24HourWindowStart;\\n    /**\\n     * @notice Timestamp when the last proposal sent from the local chain to dest chain.\\n     */\\n    mapping(uint16 => uint256) public chainIdToLastProposalSentTimestamp;\\n\\n    /**\\n     * @notice Emitted when the maximum daily limit of commands from the local chain is modified.\\n     */\\n    event SetMaxDailyLimit(uint16 indexed chainId, uint256 oldMaxLimit, uint256 newMaxLimit);\\n    /**\\n     * @notice Emitted when the address of ACM is updated.\\n     */\\n    event NewAccessControlManager(address indexed oldAccessControlManager, address indexed newAccessControlManager);\\n\\n    constructor(address accessControlManager_) {\\n        ensureNonzeroAddress(accessControlManager_);\\n        accessControlManager = accessControlManager_;\\n    }\\n\\n    /**\\n     * @notice Sets the limit of daily (24 Hour) command amount.\\n     * @param chainId_ Destination chain ID.\\n     * @param limit_ Number of commands.\\n     * @custom:access Controlled by AccessControlManager.\\n     * @custom:event Emits SetMaxDailyLimit with old and new limit and its corresponding chain id\\n     */\\n    function setMaxDailyLimit(uint16 chainId_, uint256 limit_) external {\\n        _ensureAllowed(\\\"setMaxDailyLimit(uint16,uint256)\\\");\\n        emit SetMaxDailyLimit(chainId_, chainIdToMaxDailyLimit[chainId_], limit_);\\n        chainIdToMaxDailyLimit[chainId_] = limit_;\\n    }\\n\\n    /**\\n     * @notice Triggers the paused state of the controller.\\n     * @custom:access Controlled by AccessControlManager.\\n     */\\n    function pause() external {\\n        _ensureAllowed(\\\"pause()\\\");\\n        _pause();\\n    }\\n\\n    /**\\n     * @notice Triggers the resume state of the controller.\\n     * @custom:access Controlled by AccessControlManager.\\n     */\\n    function unpause() external {\\n        _ensureAllowed(\\\"unpause()\\\");\\n        _unpause();\\n    }\\n\\n    /**\\n     * @notice Sets the address of Access Control Manager (ACM).\\n     * @param accessControlManager_ The new address of the Access Control Manager.\\n     * @custom:access Only owner\\n     * @custom:event Emits NewAccessControlManager with old and new access control manager addresses\\n     */\\n    function setAccessControlManager(address accessControlManager_) external onlyOwner {\\n        ensureNonzeroAddress(accessControlManager_);\\n        emit NewAccessControlManager(accessControlManager, accessControlManager_);\\n        accessControlManager = accessControlManager_;\\n    }\\n\\n    /**\\n     * @notice Empty implementation of renounce ownership to avoid any mishap.\\n     */\\n    function renounceOwnership() public override {}\\n\\n    /**\\n     * @notice Check eligibility to send commands.\\n     * @param dstChainId_ Destination chain id.\\n     * @param noOfCommands_ Number of commands to send.\\n     */\\n    function _isEligibleToSend(uint16 dstChainId_, uint256 noOfCommands_) internal {\\n        // Load values for the 24-hour window checks\\n        uint256 currentBlockTimestamp = block.timestamp;\\n        uint256 lastDayWindowStart = chainIdToLast24HourWindowStart[dstChainId_];\\n        uint256 commandsSentInWindow = chainIdToLast24HourCommandsSent[dstChainId_];\\n        uint256 maxDailyLimit = chainIdToMaxDailyLimit[dstChainId_];\\n        uint256 lastProposalSentTimestamp = chainIdToLastProposalSentTimestamp[dstChainId_];\\n\\n        // Check if the time window has changed (more than 24 hours have passed)\\n        if (currentBlockTimestamp - lastDayWindowStart > 1 days) {\\n            commandsSentInWindow = noOfCommands_;\\n            chainIdToLast24HourWindowStart[dstChainId_] = currentBlockTimestamp;\\n        } else {\\n            commandsSentInWindow += noOfCommands_;\\n        }\\n\\n        // Revert if the amount exceeds the daily limit\\n        require(commandsSentInWindow <= maxDailyLimit, \\\"Daily Transaction Limit Exceeded\\\");\\n        // Revert if the last proposal is already sent in current block i.e multiple proposals cannot be sent within the same block.timestamp\\n        require(lastProposalSentTimestamp != currentBlockTimestamp, \\\"Multiple bridging in a proposal\\\");\\n\\n        // Update the amount for the 24-hour window\\n        chainIdToLast24HourCommandsSent[dstChainId_] = commandsSentInWindow;\\n        // Update the last sent proposal timestamp\\n        chainIdToLastProposalSentTimestamp[dstChainId_] = currentBlockTimestamp;\\n    }\\n\\n    /**\\n     * @notice Ensure that the caller has permission to execute a specific function.\\n     * @param functionSig_ Function signature to be checked for permission.\\n     */\\n    function _ensureAllowed(string memory functionSig_) internal view {\\n        require(\\n            IAccessControlManagerV8(accessControlManager).isAllowedToCall(msg.sender, functionSig_),\\n            \\\"access denied\\\"\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x035ab75f418255bff26f1de45c9dbfb91a7b7ce8d71a4bb2f997f3633529f0c9\",\"license\":\"BSD-3-Clause\"},\"contracts/Cross-chain/OmnichainProposalSender.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.13;\\n\\nimport { ReentrancyGuard } from \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\nimport { ILayerZeroEndpoint } from \\\"@layerzerolabs/solidity-examples/contracts/lzApp/interfaces/ILayerZeroEndpoint.sol\\\";\\nimport { ensureNonzeroAddress } from \\\"@venusprotocol/solidity-utilities/contracts/validators.sol\\\";\\nimport { BaseOmnichainControllerSrc } from \\\"./BaseOmnichainControllerSrc.sol\\\";\\n\\n/**\\n * @title OmnichainProposalSender\\n * @author Venus\\n * @notice OmnichainProposalSender contract builds upon the functionality of its parent contract , BaseOmnichainControllerSrc\\n * It sends a proposal's data to remote chains for execution after the proposal passes on the main chain\\n * when used with GovernorBravo, the owner of this contract must be set to the Timelock contract\\n * @custom:security-contact https://github.com/VenusProtocol/governance-contracts#discussion\\n */\\n\\ncontract OmnichainProposalSender is ReentrancyGuard, BaseOmnichainControllerSrc {\\n    /**\\n     * @notice Stores the total number of remote proposals\\n     */\\n    uint256 public proposalCount;\\n\\n    /**\\n     * @notice Execution hashes of failed messages\\n     * @dev [proposalId] -> [executionHash]\\n     */\\n    mapping(uint256 => bytes32) public storedExecutionHashes;\\n\\n    /**\\n     * @notice LayerZero endpoint for sending messages to remote chains\\n     */\\n    ILayerZeroEndpoint public immutable LZ_ENDPOINT;\\n\\n    /**\\n     * @notice Specifies the allowed path for sending messages (remote chainId => remote app address + local app address)\\n     */\\n    mapping(uint16 => bytes) public trustedRemoteLookup;\\n\\n    /**\\n     * @notice Emitted when a remote message receiver is set for the remote chain\\n     */\\n    event SetTrustedRemoteAddress(uint16 indexed remoteChainId, bytes oldRemoteAddress, bytes newRemoteAddress);\\n\\n    /**\\n     * @notice Event emitted when trusted remote sets to empty.\\n     */\\n    event TrustedRemoteRemoved(uint16 indexed chainId);\\n\\n    /**\\n     * @notice Emitted when a proposal execution request is sent to the remote chain\\n     */\\n    event ExecuteRemoteProposal(uint16 indexed remoteChainId, uint256 proposalId, bytes payload);\\n\\n    /**\\n     * @notice Emitted when a previously failed message is successfully sent to the remote chain\\n     */\\n    event ClearPayload(uint256 indexed proposalId, bytes32 executionHash);\\n\\n    /**\\n     * @notice Emitted when an execution hash of a failed message is saved\\n     */\\n    event StorePayload(\\n        uint256 indexed proposalId,\\n        uint16 indexed remoteChainId,\\n        bytes payload,\\n        bytes adapterParams,\\n        uint256 value,\\n        bytes reason\\n    );\\n    /**\\n     * @notice Emitted while fallback withdraw\\n     */\\n    event FallbackWithdraw(address indexed receiver, uint256 value);\\n\\n    constructor(\\n        ILayerZeroEndpoint lzEndpoint_,\\n        address accessControlManager_\\n    ) BaseOmnichainControllerSrc(accessControlManager_) {\\n        ensureNonzeroAddress(address(lzEndpoint_));\\n        LZ_ENDPOINT = lzEndpoint_;\\n    }\\n\\n    /**\\n     * @notice Estimates LayerZero fees for cross-chain message delivery to the remote chain\\n     * @dev The estimated fees are the minimum required; it's recommended to increase the fees amount when sending a message. The unused amount will be refunded\\n     * @param remoteChainId_ The LayerZero id of a remote chain\\n     * @param payload_ The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(abi.encode(targets, values, signatures, calldatas), pId)\\n     * @param adapterParams_ The params used to specify the custom amount of gas required for the execution on the destination\\n     * @return nativeFee The amount of fee in the native gas token (e.g. ETH)\\n     * @return zroFee The amount of fee in ZRO token\\n     */\\n    function estimateFees(\\n        uint16 remoteChainId_,\\n        bytes calldata payload_,\\n        bytes calldata adapterParams_\\n    ) external view returns (uint256, uint256) {\\n        return LZ_ENDPOINT.estimateFees(remoteChainId_, address(this), payload_, false, adapterParams_);\\n    }\\n\\n    /**\\n     * @notice Remove trusted remote from storage.\\n     * @param remoteChainId_ The chain's id corresponds to setting the trusted remote to empty.\\n     * @custom:access Only owner.\\n     * @custom:event Emit TrustedRemoteRemoved with remote chain id.\\n     */\\n    function removeTrustedRemote(uint16 remoteChainId_) external onlyOwner {\\n        delete trustedRemoteLookup[remoteChainId_];\\n        emit TrustedRemoteRemoved(remoteChainId_);\\n    }\\n\\n    /**\\n     * @notice Sends a message to execute a remote proposal\\n     * @dev Stores the hash of the execution parameters if sending fails (e.g., due to insufficient fees)\\n     * @param remoteChainId_ The LayerZero id of the remote chain\\n     * @param payload_ The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(targets, values, signatures, calldatas, proposalType)\\n     * @param adapterParams_ The params used to specify the custom amount of gas required for the execution on the destination\\n     * @custom:event Emits ExecuteRemoteProposal with remote chain id and payload on success\\n     * @custom:event Emits StorePayload with last stored payload proposal ID ,remote chain id , payload, adapter params , values and reason for failure\\n     * @custom:access Controlled by Access Control Manager\\n     */\\n    function execute(\\n        uint16 remoteChainId_,\\n        bytes calldata payload_,\\n        bytes calldata adapterParams_\\n    ) external payable whenNotPaused {\\n        _ensureAllowed(\\\"execute(uint16,bytes,bytes)\\\");\\n\\n        // A zero value will result in a failed message; therefore, a positive value is required to send a message across the chain.\\n        require(msg.value > 0, \\\"OmnichainProposalSender: value cannot be zero\\\");\\n        require(payload_.length != 0, \\\"OmnichainProposalSender: Empty payload\\\");\\n\\n        bytes memory trustedRemote = trustedRemoteLookup[remoteChainId_];\\n        require(trustedRemote.length != 0, \\\"OmnichainProposalSender: destination chain is not a trusted source\\\");\\n        _validateProposal(remoteChainId_, payload_);\\n        uint256 _pId = ++proposalCount;\\n        bytes memory payload = abi.encode(payload_, _pId);\\n\\n        try\\n            LZ_ENDPOINT.send{ value: msg.value }(\\n                remoteChainId_,\\n                trustedRemote,\\n                payload,\\n                payable(msg.sender),\\n                address(0),\\n                adapterParams_\\n            )\\n        {\\n            emit ExecuteRemoteProposal(remoteChainId_, _pId, payload);\\n        } catch (bytes memory reason) {\\n            storedExecutionHashes[_pId] = keccak256(abi.encode(remoteChainId_, payload, adapterParams_, msg.value));\\n            emit StorePayload(_pId, remoteChainId_, payload, adapterParams_, msg.value, reason);\\n        }\\n    }\\n\\n    /**\\n     * @notice Resends a previously failed message\\n     * @dev Allows providing more fees if needed. The extra fees will be refunded to the caller\\n     * @param pId_ The proposal ID to identify a failed message\\n     * @param remoteChainId_ The LayerZero id of the remote chain\\n     * @param payload_ The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(abi.encode(targets, values, signatures, calldatas), pId)\\n     * @param adapterParams_ The params used to specify the custom amount of gas required for the execution on the destination\\n     * @param originalValue_ The msg.value passed when execute() function was called\\n     * @custom:event Emits ClearPayload with proposal ID and hash\\n     * @custom:access Controlled by Access Control Manager\\n     */\\n    function retryExecute(\\n        uint256 pId_,\\n        uint16 remoteChainId_,\\n        bytes calldata payload_,\\n        bytes calldata adapterParams_,\\n        uint256 originalValue_\\n    ) external payable whenNotPaused nonReentrant {\\n        _ensureAllowed(\\\"retryExecute(uint256,uint16,bytes,bytes,uint256)\\\");\\n        bytes memory trustedRemote = trustedRemoteLookup[remoteChainId_];\\n        require(trustedRemote.length != 0, \\\"OmnichainProposalSender: destination chain is not a trusted source\\\");\\n        bytes32 hash = storedExecutionHashes[pId_];\\n        require(hash != bytes32(0), \\\"OmnichainProposalSender: no stored payload\\\");\\n        require(payload_.length != 0, \\\"OmnichainProposalSender: Empty payload\\\");\\n        (bytes memory payload, ) = abi.decode(payload_, (bytes, uint256));\\n        _validateProposal(remoteChainId_, payload);\\n\\n        bytes memory execution = abi.encode(remoteChainId_, payload_, adapterParams_, originalValue_);\\n        require(keccak256(execution) == hash, \\\"OmnichainProposalSender: invalid execution params\\\");\\n\\n        delete storedExecutionHashes[pId_];\\n\\n        emit ClearPayload(pId_, hash);\\n\\n        LZ_ENDPOINT.send{ value: originalValue_ + msg.value }(\\n            remoteChainId_,\\n            trustedRemoteLookup[remoteChainId_],\\n            payload_,\\n            payable(msg.sender),\\n            address(0),\\n            adapterParams_\\n        );\\n    }\\n\\n    /**\\n     * @notice Clear previously failed message\\n     * @param to_ Address of the receiver\\n     * @param pId_ The proposal ID to identify a failed message\\n     * @param remoteChainId_ The LayerZero id of the remote chain\\n     * @param payload_ The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(abi.encode(targets, values, signatures, calldatas), pId)\\n     * @param adapterParams_ The params used to specify the custom amount of gas required for the execution on the destination\\n     * @param originalValue_ The msg.value passed when execute() function was called\\n     * @custom:access Only owner\\n     * @custom:event Emits ClearPayload with proposal ID and hash\\n     * @custom:event Emits FallbackWithdraw with receiver and amount\\n     */\\n    function fallbackWithdraw(\\n        address to_,\\n        uint256 pId_,\\n        uint16 remoteChainId_,\\n        bytes calldata payload_,\\n        bytes calldata adapterParams_,\\n        uint256 originalValue_\\n    ) external onlyOwner nonReentrant {\\n        ensureNonzeroAddress(to_);\\n        require(originalValue_ > 0, \\\"OmnichainProposalSender: invalid native amount\\\");\\n        require(payload_.length != 0, \\\"OmnichainProposalSender: Empty payload\\\");\\n\\n        bytes32 hash = storedExecutionHashes[pId_];\\n        require(hash != bytes32(0), \\\"OmnichainProposalSender: no stored payload\\\");\\n\\n        bytes memory execution = abi.encode(remoteChainId_, payload_, adapterParams_, originalValue_);\\n        require(keccak256(execution) == hash, \\\"OmnichainProposalSender: invalid execution params\\\");\\n\\n        delete storedExecutionHashes[pId_];\\n\\n        emit FallbackWithdraw(to_, originalValue_);\\n        emit ClearPayload(pId_, hash);\\n\\n        // Transfer the native to the `to_` address\\n        (bool sent, ) = to_.call{ value: originalValue_ }(\\\"\\\");\\n        require(sent, \\\"Call failed\\\");\\n    }\\n\\n    /**\\n     * @notice Sets the remote message receiver address\\n     * @param remoteChainId_ The LayerZero id of a remote chain\\n     * @param newRemoteAddress_ The address of the contract on the remote chain to receive messages sent by this contract\\n     * @custom:access Controlled by AccessControlManager.\\n     * @custom:event Emits SetTrustedRemoteAddress with remote chain Id and remote address\\n     */\\n    function setTrustedRemoteAddress(uint16 remoteChainId_, bytes calldata newRemoteAddress_) external {\\n        _ensureAllowed(\\\"setTrustedRemoteAddress(uint16,bytes)\\\");\\n        require(remoteChainId_ != 0, \\\"ChainId must not be zero\\\");\\n        ensureNonzeroAddress(address(uint160(bytes20(newRemoteAddress_))));\\n        bytes memory oldRemoteAddress = trustedRemoteLookup[remoteChainId_];\\n        trustedRemoteLookup[remoteChainId_] = abi.encodePacked(newRemoteAddress_, address(this));\\n        emit SetTrustedRemoteAddress(remoteChainId_, oldRemoteAddress, trustedRemoteLookup[remoteChainId_]);\\n    }\\n\\n    /**\\n     * @notice Sets the configuration of the LayerZero messaging library of the specified version\\n     * @param version_ Messaging library version\\n     * @param chainId_ The LayerZero chainId for the pending config change\\n     * @param configType_ The type of configuration. Every messaging library has its own convention\\n     * @param config_ The configuration in bytes. It can encode arbitrary content\\n     * @custom:access Controlled by AccessControlManager.\\n     */\\n    function setConfig(uint16 version_, uint16 chainId_, uint256 configType_, bytes calldata config_) external {\\n        _ensureAllowed(\\\"setConfig(uint16,uint16,uint256,bytes)\\\");\\n        LZ_ENDPOINT.setConfig(version_, chainId_, configType_, config_);\\n    }\\n\\n    /**\\n     * @notice Sets the configuration of the LayerZero messaging library of the specified version\\n     * @param version_ New messaging library version\\n     * @custom:access Controlled by AccessControlManager.\\n     */\\n    function setSendVersion(uint16 version_) external {\\n        _ensureAllowed(\\\"setSendVersion(uint16)\\\");\\n        LZ_ENDPOINT.setSendVersion(version_);\\n    }\\n\\n    /**\\n     * @notice Gets the configuration of the LayerZero messaging library of the specified version\\n     * @param version_ Messaging library version\\n     * @param chainId_ The LayerZero chainId\\n     * @param configType_ Type of configuration. Every messaging library has its own convention.\\n     */\\n    function getConfig(uint16 version_, uint16 chainId_, uint256 configType_) external view returns (bytes memory) {\\n        return LZ_ENDPOINT.getConfig(version_, chainId_, address(this), configType_);\\n    }\\n\\n    function _validateProposal(uint16 remoteChainId_, bytes memory payload_) internal {\\n        (\\n            address[] memory targets,\\n            uint256[] memory values,\\n            string[] memory signatures,\\n            bytes[] memory calldatas,\\n\\n        ) = abi.decode(payload_, (address[], uint[], string[], bytes[], uint8));\\n        require(\\n            targets.length == values.length &&\\n                targets.length == signatures.length &&\\n                targets.length == calldatas.length,\\n            \\\"OmnichainProposalSender: proposal function information arity mismatch\\\"\\n        );\\n        _isEligibleToSend(remoteChainId_, targets.length);\\n    }\\n}\\n\",\"keccak256\":\"0xaaa8df2b35a999565a50f31387974f6021c7a9dff315254282129f02cb0265ae\",\"license\":\"MIT\"},\"contracts/Governance/IAccessControlManagerV8.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/access/IAccessControl.sol\\\";\\n\\n/**\\n * @title IAccessControlManagerV8\\n * @author Venus\\n * @notice Interface implemented by the `AccessControlManagerV8` contract.\\n */\\ninterface IAccessControlManagerV8 is IAccessControl {\\n    function giveCallPermission(address contractAddress, string calldata functionSig, address accountToPermit) external;\\n\\n    function revokeCallPermission(\\n        address contractAddress,\\n        string calldata functionSig,\\n        address accountToRevoke\\n    ) external;\\n\\n    function isAllowedToCall(address account, string calldata functionSig) external view returns (bool);\\n\\n    function hasPermission(\\n        address account,\\n        address contractAddress,\\n        string calldata functionSig\\n    ) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x8adbe291d659987faf4de606736227ad9d8e1a0e284a33a6ca12b30ab2a504b2\",\"license\":\"BSD-3-Clause\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620032063803806200320683398101604081905262000034916200012e565b60016000558062000045336200009b565b6001805460ff60a01b191690556200005d81620000ed565b600280546001600160a01b0319166001600160a01b03929092169190911790556200008882620000ed565b506001600160a01b03166080526200016d565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03811662000115576040516342bcdf7f60e11b815260040160405180910390fd5b50565b6001600160a01b03811681146200011557600080fd5b600080604083850312156200014257600080fd5b82516200014f8162000118565b6020840151909250620001628162000118565b809150509250929050565b608051613053620001b3600039600081816104f3015281816105e801528181610bdc01528181610cd80152818161118e01528181611783015261195601526130536000f3fe6080604052600436106101a15760003560e01c80637b4b3933116100e1578063b4a0bdf31161008a578063cd4d1c6411610064578063cd4d1c64146104e1578063da35c66414610515578063e0354d7f1461052b578063f2fde38b1461055857600080fd5b8063b4a0bdf314610481578063bb5a944f146104ae578063cbed8b9c146104c157600080fd5b80638da5cb5b116100bb5780638da5cb5b146103e857806393a61d6c14610434578063a6c3d1651461046157600080fd5b80637b4b3933146103935780637dbb533c146103a65780638456cb59146103d357600080fd5b80633f4ba83a1161014e5780635c975abb116101285780635c975abb146102ff5780635f6716f71461033a578063715018a6146103675780637533d7881461037357600080fd5b80633f4ba83a1461028857806345e380a31461029d5780634f4ba0f4146102d257600080fd5b80632488eec81161017f5780632488eec8146102285780632dbbec081461024857806330fd54a01461026857600080fd5b806307e0db17146101a65780630e32cb86146101c85780631183a3b2146101e8575b600080fd5b3480156101b257600080fd5b506101c66101c13660046121a7565b610578565b005b3480156101d457600080fd5b506101c66101e33660046121e4565b61065c565b3480156101f457600080fd5b506102156102033660046121a7565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561023457600080fd5b506101c6610243366004612201565b6106fb565b34801561025457600080fd5b506101c66102633660046121a7565b61079e565b34801561027457600080fd5b506101c6610283366004612274565b6107f4565b34801561029457600080fd5b506101c6610b8f565b3480156102a957600080fd5b506102bd6102b8366004612318565b610bd7565b6040805192835260208301919091520161021f565b3480156102de57600080fd5b506102156102ed3660046121a7565b60036020526000908152604090205481565b34801561030b57600080fd5b5060015474010000000000000000000000000000000000000000900460ff16604051901515815260200161021f565b34801561034657600080fd5b5061035a610355366004612399565b610c8e565b60405161021f9190612431565b3480156101c657600080fd5b34801561037f57600080fd5b5061035a61038e3660046121a7565b610d66565b6101c66103a1366004612444565b610e00565b3480156103b257600080fd5b506102156103c13660046124d7565b60086020526000908152604090205481565b3480156103df57600080fd5b506101c661124c565b3480156103f457600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161021f565b34801561044057600080fd5b5061021561044f3660046121a7565b60056020526000908152604090205481565b34801561046d57600080fd5b506101c661047c3660046124f0565b611292565b34801561048d57600080fd5b5060025461040f9073ffffffffffffffffffffffffffffffffffffffff1681565b6101c66104bc366004612318565b611458565b3480156104cd57600080fd5b506101c66104dc366004612543565b6118f8565b3480156104ed57600080fd5b5061040f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561052157600080fd5b5061021560075481565b34801561053757600080fd5b506102156105463660046121a7565b60066020526000908152604090205481565b34801561056457600080fd5b506101c66105733660046121e4565b6119cc565b6105b66040518060400160405280601681526020017f73657453656e6456657273696f6e2875696e7431362900000000000000000000815250611a69565b6040517f07e0db1700000000000000000000000000000000000000000000000000000000815261ffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307e0db1790602401600060405180830381600087803b15801561064157600080fd5b505af1158015610655573d6000803e3d6000fd5b5050505050565b610664611b4e565b61066d81611bb5565b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f66fd58e82f7b31a2a5c30e0888f3093efe4e111b00cd2b0c31fe014601293aa090600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6107396040518060400160405280602081526020017f7365744d61784461696c794c696d69742875696e7431362c75696e7432353629815250611a69565b61ffff82166000818152600360209081526040918290205482519081529081018490527f4dd31065e259d5284e44d1f9265710da72eafcf78dc925e3881189fc3b71f693910160405180910390a261ffff909116600090815260036020526040902055565b6107a6611b4e565b61ffff811660009081526009602052604081206107c2916120bd565b60405161ffff8216907f6d5075c81d4d9e75bec6052f4e44f58f8a8cf1327544addbbf015fb06f83bd3790600090a250565b6107fc611b4e565b610804611c02565b61080d88611bb5565b600081116108885760405162461bcd60e51b815260206004820152602e60248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20696e76616c696460448201527f206e617469766520616d6f756e7400000000000000000000000000000000000060648201526084015b60405180910390fd5b60008490036108ff5760405162461bcd60e51b815260206004820152602660248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20456d707479207060448201527f61796c6f61640000000000000000000000000000000000000000000000000000606482015260840161087f565b600087815260086020526040902054806109815760405162461bcd60e51b815260206004820152602a60248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a206e6f2073746f7260448201527f6564207061796c6f616400000000000000000000000000000000000000000000606482015260840161087f565b600087878787878760405160200161099e969594939291906125cc565b604051602081830303815290604052905081818051906020012014610a2b5760405162461bcd60e51b815260206004820152603160248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20696e76616c696460448201527f20657865637574696f6e20706172616d73000000000000000000000000000000606482015260840161087f565b600089815260086020526040808220919091555173ffffffffffffffffffffffffffffffffffffffff8b16907f22fe8e8ead80ad0961d77107e806ba9bcf9ca3b175a9d446145646d39c36ab9690610a869086815260200190565b60405180910390a2887f2dc7ac5d08fd553243fc66b5f15262e3f3013e27abf660d7bb3fccf133322f6e83604051610ac091815260200190565b60405180910390a260008a73ffffffffffffffffffffffffffffffffffffffff168460405160006040518083038185875af1925050503d8060008114610b22576040519150601f19603f3d011682016040523d82523d6000602084013e610b27565b606091505b5050905080610b785760405162461bcd60e51b815260206004820152600b60248201527f43616c6c206661696c6564000000000000000000000000000000000000000000604482015260640161087f565b505050610b856001600055565b5050505050505050565b610bcd6040518060400160405280600981526020017f756e706175736528290000000000000000000000000000000000000000000000815250611a69565b610bd5611c5b565b565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340a7bb108830898960008a8a6040518863ffffffff1660e01b8152600401610c409796959493929190612611565b6040805180830381865afa158015610c5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c809190612674565b915091509550959350505050565b6040517ff5ecbdbc00000000000000000000000000000000000000000000000000000000815261ffff808516600483015283166024820152306044820152606481018290526060907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063f5ecbdbc90608401600060405180830381865afa158015610d34573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d5c9190810190612775565b90505b9392505050565b60096020526000908152604090208054610d7f906127b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610dab906127b2565b8015610df85780601f10610dcd57610100808354040283529160200191610df8565b820191906000526020600020905b815481529060010190602001808311610ddb57829003601f168201915b505050505081565b610e08611cd8565b610e10611c02565b610e31604051806060016040528060308152602001612fa360309139611a69565b61ffff861660009081526009602052604081208054610e4f906127b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7b906127b2565b8015610ec85780601f10610e9d57610100808354040283529160200191610ec8565b820191906000526020600020905b815481529060010190602001808311610eab57829003601f168201915b505050505090508051600003610f6c5760405162461bcd60e51b815260206004820152604260248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a2064657374696e6160448201527f74696f6e20636861696e206973206e6f742061207472757374656420736f757260648201527f6365000000000000000000000000000000000000000000000000000000000000608482015260a40161087f565b60008881526008602052604090205480610fee5760405162461bcd60e51b815260206004820152602a60248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a206e6f2073746f7260448201527f6564207061796c6f616400000000000000000000000000000000000000000000606482015260840161087f565b60008690036110655760405162461bcd60e51b815260206004820152602660248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20456d707479207060448201527f61796c6f61640000000000000000000000000000000000000000000000000000606482015260840161087f565b600061107387890189612805565b5090506110808982611d43565b600089898989898960405160200161109d969594939291906125cc565b60405160208183030381529060405290508281805190602001201461112a5760405162461bcd60e51b815260206004820152603160248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20696e76616c696460448201527f20657865637574696f6e20706172616d73000000000000000000000000000000606482015260840161087f565b60008b81526008602052604080822091909155518b907f2dc7ac5d08fd553243fc66b5f15262e3f3013e27abf660d7bb3fccf133322f6e9061116f9086815260200190565b60405180910390a273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663c58031006111bd34886128b1565b8c600960008f61ffff1661ffff1681526020019081526020016000208d8d3360008f8f6040518a63ffffffff1660e01b815260040161120398979695949392919061299f565b6000604051808303818588803b15801561121c57600080fd5b505af1158015611230573d6000803e3d6000fd5b5050505050505050506112436001600055565b50505050505050565b61128a6040518060400160405280600781526020017f7061757365282900000000000000000000000000000000000000000000000000815250611a69565b610bd5611e30565b6112b3604051806060016040528060258152602001612fd360259139611a69565b8261ffff166000036113075760405162461bcd60e51b815260206004820152601860248201527f436861696e4964206d757374206e6f74206265207a65726f0000000000000000604482015260640161087f565b61131c6113148284612a17565b60601c611bb5565b61ffff83166000908152600960205260408120805461133a906127b2565b80601f0160208091040260200160405190810160405280929190818152602001828054611366906127b2565b80156113b35780601f10611388576101008083540402835291602001916113b3565b820191906000526020600020905b81548152906001019060200180831161139657829003601f168201915b505050505090508282306040516020016113cf93929190612a5f565b60408051601f1981840301815291815261ffff86166000908152600960209081529190208251611404939192909101906120f7565b5061ffff84166000818152600960205260409081902090517fe84e609c32d71c678382f7c65cc051810a41dcaf660e55c9f8fcffeba4621a329161144a91859190612a98565b60405180910390a250505050565b611460611cd8565b61149e6040518060400160405280601b81526020017f657865637574652875696e7431362c62797465732c6279746573290000000000815250611a69565b600034116115145760405162461bcd60e51b815260206004820152602d60248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a2076616c7565206360448201527f616e6e6f74206265207a65726f00000000000000000000000000000000000000606482015260840161087f565b600083900361158b5760405162461bcd60e51b815260206004820152602660248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20456d707479207060448201527f61796c6f61640000000000000000000000000000000000000000000000000000606482015260840161087f565b61ffff8516600090815260096020526040812080546115a9906127b2565b80601f01602080910402602001604051908101604052809291908181526020018280546115d5906127b2565b80156116225780601f106115f757610100808354040283529160200191611622565b820191906000526020600020905b81548152906001019060200180831161160557829003601f168201915b5050505050905080516000036116c65760405162461bcd60e51b815260206004820152604260248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a2064657374696e6160448201527f74696f6e20636861696e206973206e6f742061207472757374656420736f757260648201527f6365000000000000000000000000000000000000000000000000000000000000608482015260a40161087f565b6117068686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d4392505050565b600060076000815461171790612ac6565b9190508190559050600086868360405160200161173693929190612afe565b60408051601f19818403018152908290527fc5803100000000000000000000000000000000000000000000000000000000008252915073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063c58031009034906117c7908c908890879033906000908e908e90600401612b22565b6000604051808303818588803b1580156117e057600080fd5b505af1935050505080156117f2575060015b6118b0573d808015611820576040519150601f19603f3d011682016040523d82523d6000602084013e611825565b606091505b50888287873460405160200161183f959493929190612b8a565b60408051601f198184030181528282528051602091820120600087815260089092529190205561ffff8a169084907f6d16111647e03d7f1cb2b71c02eafe3355b97dfc17af3de1b94ef39c8a9ee4d9906118a29086908b908b9034908990612bcd565b60405180910390a350610b85565b8761ffff167f95a4fcf4eb9be6f5cf2eb6830782870f8907bccc513f765388a9cb2dae2f325983836040516118e6929190612c19565b60405180910390a25050505050505050565b611919604051806060016040528060268152602001612ff860269139611a69565b6040517fcbed8b9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c906119939088908890889088908890600401612c32565b600060405180830381600087803b1580156119ad57600080fd5b505af11580156119c1573d6000803e3d6000fd5b505050505050505050565b6119d4611b4e565b73ffffffffffffffffffffffffffffffffffffffff8116611a5d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161087f565b611a6681611e9f565b50565b6002546040517f18c5e8ab00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906318c5e8ab90611ac19033908590600401612c6b565b602060405180830381865afa158015611ade573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b029190612c9a565b611a665760405162461bcd60e51b815260206004820152600d60248201527f6163636573732064656e69656400000000000000000000000000000000000000604482015260640161087f565b60015473ffffffffffffffffffffffffffffffffffffffff163314610bd55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161087f565b73ffffffffffffffffffffffffffffffffffffffff8116611a66576040517f8579befe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260005403611c545760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161087f565b6002600055565b611c63611f16565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b60015474010000000000000000000000000000000000000000900460ff1615610bd55760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161087f565b60008060008084806020019051810190611d5d9190612e6c565b50935093509350935082518451148015611d78575081518451145b8015611d85575080518451145b611e1d5760405162461bcd60e51b815260206004820152604560248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a2070726f706f736160448201527f6c2066756e6374696f6e20696e666f726d6174696f6e206172697479206d697360648201527f6d61746368000000000000000000000000000000000000000000000000000000608482015260a40161087f565b611e28868551611f80565b505050505050565b611e38611cd8565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611cae3390565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60015474010000000000000000000000000000000000000000900460ff16610bd55760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161087f565b61ffff821660009081526005602090815260408083205460048352818420546003845282852054600690945291909320544293929062015180611fc38587612f8b565b1115611fe75761ffff87166000908152600560205260409020859055859250611ff4565b611ff186846128b1565b92505b818311156120445760405162461bcd60e51b815260206004820181905260248201527f4461696c79205472616e73616374696f6e204c696d6974204578636565646564604482015260640161087f565b8481036120935760405162461bcd60e51b815260206004820152601f60248201527f4d756c7469706c65206272696467696e6720696e20612070726f706f73616c00604482015260640161087f565b505061ffff9094166000908152600460209081526040808320969096556006905293909320555050565b5080546120c9906127b2565b6000825580601f106120d9575050565b601f016020900490600052602060002090810190611a66919061217b565b828054612103906127b2565b90600052602060002090601f016020900481019282612125576000855561216b565b82601f1061213e57805160ff191683800117855561216b565b8280016001018555821561216b579182015b8281111561216b578251825591602001919060010190612150565b5061217792915061217b565b5090565b5b80821115612177576000815560010161217c565b803561ffff811681146121a257600080fd5b919050565b6000602082840312156121b957600080fd5b610d5f82612190565b73ffffffffffffffffffffffffffffffffffffffff81168114611a6657600080fd5b6000602082840312156121f657600080fd5b8135610d5f816121c2565b6000806040838503121561221457600080fd5b61221d83612190565b946020939093013593505050565b60008083601f84011261223d57600080fd5b50813567ffffffffffffffff81111561225557600080fd5b60208301915083602082850101111561226d57600080fd5b9250929050565b60008060008060008060008060c0898b03121561229057600080fd5b883561229b816121c2565b9750602089013596506122b060408a01612190565b9550606089013567ffffffffffffffff808211156122cd57600080fd5b6122d98c838d0161222b565b909750955060808b01359150808211156122f257600080fd5b506122ff8b828c0161222b565b999c989b50969995989497949560a00135949350505050565b60008060008060006060868803121561233057600080fd5b61233986612190565b9450602086013567ffffffffffffffff8082111561235657600080fd5b61236289838a0161222b565b9096509450604088013591508082111561237b57600080fd5b506123888882890161222b565b969995985093965092949392505050565b6000806000606084860312156123ae57600080fd5b6123b784612190565b92506123c560208501612190565b9150604084013590509250925092565b60005b838110156123f05781810151838201526020016123d8565b838111156123ff576000848401525b50505050565b6000815180845261241d8160208601602086016123d5565b601f01601f19169290920160200192915050565b602081526000610d5f6020830184612405565b600080600080600080600060a0888a03121561245f57600080fd5b8735965061246f60208901612190565b9550604088013567ffffffffffffffff8082111561248c57600080fd5b6124988b838c0161222b565b909750955060608a01359150808211156124b157600080fd5b506124be8a828b0161222b565b989b979a50959894979596608090950135949350505050565b6000602082840312156124e957600080fd5b5035919050565b60008060006040848603121561250557600080fd5b61250e84612190565b9250602084013567ffffffffffffffff81111561252a57600080fd5b6125368682870161222b565b9497909650939450505050565b60008060008060006080868803121561255b57600080fd5b61256486612190565b945061257260208701612190565b935060408601359250606086013567ffffffffffffffff81111561259557600080fd5b6123888882890161222b565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b61ffff871681526080602082015260006125ea6080830187896125a1565b82810360408401526125fd8186886125a1565b915050826060830152979650505050505050565b61ffff8816815273ffffffffffffffffffffffffffffffffffffffff8716602082015260a06040820152600061264b60a0830187896125a1565b851515606084015282810360808401526126668185876125a1565b9a9950505050505050505050565b6000806040838503121561268757600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156126f0576126f0612698565b604052919050565b600067ffffffffffffffff82111561271257612712612698565b50601f01601f191660200190565b600061273361272e846126f8565b6126c7565b905082815283838301111561274757600080fd5b610d5f8360208301846123d5565b600082601f83011261276657600080fd5b610d5f83835160208501612720565b60006020828403121561278757600080fd5b815167ffffffffffffffff81111561279e57600080fd5b6127aa84828501612755565b949350505050565b600181811c908216806127c657607f821691505b6020821081036127ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000806040838503121561281857600080fd5b823567ffffffffffffffff81111561282f57600080fd5b8301601f8101851361284057600080fd5b803561284e61272e826126f8565b81815286602083850101111561286357600080fd5b8160208401602083013760006020928201830152969401359450505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156128c4576128c4612882565b500190565b8054600090600181811c90808316806128e357607f831692505b6020808410820361291d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b83885260208801828015612938576001811461296757612992565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00871682528282019750612992565b60008981526020902060005b8781101561298c57815484820152908601908401612973565b83019850505b5050505050505092915050565b61ffff8916815260c0602082015260006129bc60c083018a6128c9565b82810360408401526129cf81898b6125a1565b73ffffffffffffffffffffffffffffffffffffffff88811660608601528716608085015283810360a08501529050612a088185876125a1565b9b9a5050505050505050505050565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015612a575780818660140360031b1b83161692505b505092915050565b8284823760609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b604081526000612aab6040830185612405565b8281036020840152612abd81856128c9565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612af757612af7612882565b5060010190565b604081526000612b126040830185876125a1565b9050826020830152949350505050565b61ffff8816815260c060208201526000612b3f60c0830189612405565b8281036040840152612b518189612405565b73ffffffffffffffffffffffffffffffffffffffff88811660608601528716608085015283810360a085015290506126668185876125a1565b61ffff86168152608060208201526000612ba76080830187612405565b8281036040840152612bba8186886125a1565b9150508260608301529695505050505050565b608081526000612be06080830188612405565b8281036020840152612bf38187896125a1565b90508460408401528281036060840152612c0d8185612405565b98975050505050505050565b828152604060208201526000610d5c6040830184612405565b600061ffff808816835280871660208401525084604083015260806060830152612c606080830184866125a1565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000610d5c6040830184612405565b600060208284031215612cac57600080fd5b81518015158114610d5f57600080fd5b600067ffffffffffffffff821115612cd657612cd6612698565b5060051b60200190565b600082601f830112612cf157600080fd5b81516020612d0161272e83612cbc565b82815260059290921b84018101918181019086841115612d2057600080fd5b8286015b84811015612d3b5780518352918301918301612d24565b509695505050505050565b600082601f830112612d5757600080fd5b81516020612d6761272e83612cbc565b82815260059290921b84018101918181019086841115612d8657600080fd5b8286015b84811015612d3b57805167ffffffffffffffff811115612daa5760008081fd5b8701603f81018913612dbc5760008081fd5b612dcd898683015160408401612720565b845250918301918301612d8a565b600082601f830112612dec57600080fd5b81516020612dfc61272e83612cbc565b82815260059290921b84018101918181019086841115612e1b57600080fd5b8286015b84811015612d3b57805167ffffffffffffffff811115612e3f5760008081fd5b612e4d8986838b0101612755565b845250918301918301612e1f565b805160ff811681146121a257600080fd5b600080600080600060a08688031215612e8457600080fd5b855167ffffffffffffffff80821115612e9c57600080fd5b818801915088601f830112612eb057600080fd5b81516020612ec061272e83612cbc565b82815260059290921b8401810191818101908c841115612edf57600080fd5b948201945b83861015612f06578551612ef7816121c2565b82529482019490820190612ee4565b918b0151919950909350505080821115612f1f57600080fd5b612f2b89838a01612ce0565b95506040880151915080821115612f4157600080fd5b612f4d89838a01612d46565b94506060880151915080821115612f6357600080fd5b50612f7088828901612ddb565b925050612f7f60808701612e5b565b90509295509295909350565b600082821015612f9d57612f9d612882565b50039056fe7265747279457865637574652875696e743235362c75696e7431362c62797465732c62797465732c75696e74323536297365745472757374656452656d6f7465416464726573732875696e7431362c627974657329736574436f6e6669672875696e7431362c75696e7431362c75696e743235362c627974657329a2646970667358221220f937064caf0b6749e8c2dc32f5bf36fd8e3f91293e7965f0579a4fec4118e55164736f6c634300080d0033",
  "deployedBytecode": "0x6080604052600436106101a15760003560e01c80637b4b3933116100e1578063b4a0bdf31161008a578063cd4d1c6411610064578063cd4d1c64146104e1578063da35c66414610515578063e0354d7f1461052b578063f2fde38b1461055857600080fd5b8063b4a0bdf314610481578063bb5a944f146104ae578063cbed8b9c146104c157600080fd5b80638da5cb5b116100bb5780638da5cb5b146103e857806393a61d6c14610434578063a6c3d1651461046157600080fd5b80637b4b3933146103935780637dbb533c146103a65780638456cb59146103d357600080fd5b80633f4ba83a1161014e5780635c975abb116101285780635c975abb146102ff5780635f6716f71461033a578063715018a6146103675780637533d7881461037357600080fd5b80633f4ba83a1461028857806345e380a31461029d5780634f4ba0f4146102d257600080fd5b80632488eec81161017f5780632488eec8146102285780632dbbec081461024857806330fd54a01461026857600080fd5b806307e0db17146101a65780630e32cb86146101c85780631183a3b2146101e8575b600080fd5b3480156101b257600080fd5b506101c66101c13660046121a7565b610578565b005b3480156101d457600080fd5b506101c66101e33660046121e4565b61065c565b3480156101f457600080fd5b506102156102033660046121a7565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561023457600080fd5b506101c6610243366004612201565b6106fb565b34801561025457600080fd5b506101c66102633660046121a7565b61079e565b34801561027457600080fd5b506101c6610283366004612274565b6107f4565b34801561029457600080fd5b506101c6610b8f565b3480156102a957600080fd5b506102bd6102b8366004612318565b610bd7565b6040805192835260208301919091520161021f565b3480156102de57600080fd5b506102156102ed3660046121a7565b60036020526000908152604090205481565b34801561030b57600080fd5b5060015474010000000000000000000000000000000000000000900460ff16604051901515815260200161021f565b34801561034657600080fd5b5061035a610355366004612399565b610c8e565b60405161021f9190612431565b3480156101c657600080fd5b34801561037f57600080fd5b5061035a61038e3660046121a7565b610d66565b6101c66103a1366004612444565b610e00565b3480156103b257600080fd5b506102156103c13660046124d7565b60086020526000908152604090205481565b3480156103df57600080fd5b506101c661124c565b3480156103f457600080fd5b5060015473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161021f565b34801561044057600080fd5b5061021561044f3660046121a7565b60056020526000908152604090205481565b34801561046d57600080fd5b506101c661047c3660046124f0565b611292565b34801561048d57600080fd5b5060025461040f9073ffffffffffffffffffffffffffffffffffffffff1681565b6101c66104bc366004612318565b611458565b3480156104cd57600080fd5b506101c66104dc366004612543565b6118f8565b3480156104ed57600080fd5b5061040f7f000000000000000000000000000000000000000000000000000000000000000081565b34801561052157600080fd5b5061021560075481565b34801561053757600080fd5b506102156105463660046121a7565b60066020526000908152604090205481565b34801561056457600080fd5b506101c66105733660046121e4565b6119cc565b6105b66040518060400160405280601681526020017f73657453656e6456657273696f6e2875696e7431362900000000000000000000815250611a69565b6040517f07e0db1700000000000000000000000000000000000000000000000000000000815261ffff821660048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906307e0db1790602401600060405180830381600087803b15801561064157600080fd5b505af1158015610655573d6000803e3d6000fd5b5050505050565b610664611b4e565b61066d81611bb5565b60025460405173ffffffffffffffffffffffffffffffffffffffff8084169216907f66fd58e82f7b31a2a5c30e0888f3093efe4e111b00cd2b0c31fe014601293aa090600090a3600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6107396040518060400160405280602081526020017f7365744d61784461696c794c696d69742875696e7431362c75696e7432353629815250611a69565b61ffff82166000818152600360209081526040918290205482519081529081018490527f4dd31065e259d5284e44d1f9265710da72eafcf78dc925e3881189fc3b71f693910160405180910390a261ffff909116600090815260036020526040902055565b6107a6611b4e565b61ffff811660009081526009602052604081206107c2916120bd565b60405161ffff8216907f6d5075c81d4d9e75bec6052f4e44f58f8a8cf1327544addbbf015fb06f83bd3790600090a250565b6107fc611b4e565b610804611c02565b61080d88611bb5565b600081116108885760405162461bcd60e51b815260206004820152602e60248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20696e76616c696460448201527f206e617469766520616d6f756e7400000000000000000000000000000000000060648201526084015b60405180910390fd5b60008490036108ff5760405162461bcd60e51b815260206004820152602660248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20456d707479207060448201527f61796c6f61640000000000000000000000000000000000000000000000000000606482015260840161087f565b600087815260086020526040902054806109815760405162461bcd60e51b815260206004820152602a60248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a206e6f2073746f7260448201527f6564207061796c6f616400000000000000000000000000000000000000000000606482015260840161087f565b600087878787878760405160200161099e969594939291906125cc565b604051602081830303815290604052905081818051906020012014610a2b5760405162461bcd60e51b815260206004820152603160248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20696e76616c696460448201527f20657865637574696f6e20706172616d73000000000000000000000000000000606482015260840161087f565b600089815260086020526040808220919091555173ffffffffffffffffffffffffffffffffffffffff8b16907f22fe8e8ead80ad0961d77107e806ba9bcf9ca3b175a9d446145646d39c36ab9690610a869086815260200190565b60405180910390a2887f2dc7ac5d08fd553243fc66b5f15262e3f3013e27abf660d7bb3fccf133322f6e83604051610ac091815260200190565b60405180910390a260008a73ffffffffffffffffffffffffffffffffffffffff168460405160006040518083038185875af1925050503d8060008114610b22576040519150601f19603f3d011682016040523d82523d6000602084013e610b27565b606091505b5050905080610b785760405162461bcd60e51b815260206004820152600b60248201527f43616c6c206661696c6564000000000000000000000000000000000000000000604482015260640161087f565b505050610b856001600055565b5050505050505050565b610bcd6040518060400160405280600981526020017f756e706175736528290000000000000000000000000000000000000000000000815250611a69565b610bd5611c5b565b565b6000807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166340a7bb108830898960008a8a6040518863ffffffff1660e01b8152600401610c409796959493929190612611565b6040805180830381865afa158015610c5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c809190612674565b915091509550959350505050565b6040517ff5ecbdbc00000000000000000000000000000000000000000000000000000000815261ffff808516600483015283166024820152306044820152606481018290526060907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063f5ecbdbc90608401600060405180830381865afa158015610d34573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d5c9190810190612775565b90505b9392505050565b60096020526000908152604090208054610d7f906127b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610dab906127b2565b8015610df85780601f10610dcd57610100808354040283529160200191610df8565b820191906000526020600020905b815481529060010190602001808311610ddb57829003601f168201915b505050505081565b610e08611cd8565b610e10611c02565b610e31604051806060016040528060308152602001612fa360309139611a69565b61ffff861660009081526009602052604081208054610e4f906127b2565b80601f0160208091040260200160405190810160405280929190818152602001828054610e7b906127b2565b8015610ec85780601f10610e9d57610100808354040283529160200191610ec8565b820191906000526020600020905b815481529060010190602001808311610eab57829003601f168201915b505050505090508051600003610f6c5760405162461bcd60e51b815260206004820152604260248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a2064657374696e6160448201527f74696f6e20636861696e206973206e6f742061207472757374656420736f757260648201527f6365000000000000000000000000000000000000000000000000000000000000608482015260a40161087f565b60008881526008602052604090205480610fee5760405162461bcd60e51b815260206004820152602a60248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a206e6f2073746f7260448201527f6564207061796c6f616400000000000000000000000000000000000000000000606482015260840161087f565b60008690036110655760405162461bcd60e51b815260206004820152602660248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20456d707479207060448201527f61796c6f61640000000000000000000000000000000000000000000000000000606482015260840161087f565b600061107387890189612805565b5090506110808982611d43565b600089898989898960405160200161109d969594939291906125cc565b60405160208183030381529060405290508281805190602001201461112a5760405162461bcd60e51b815260206004820152603160248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20696e76616c696460448201527f20657865637574696f6e20706172616d73000000000000000000000000000000606482015260840161087f565b60008b81526008602052604080822091909155518b907f2dc7ac5d08fd553243fc66b5f15262e3f3013e27abf660d7bb3fccf133322f6e9061116f9086815260200190565b60405180910390a273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001663c58031006111bd34886128b1565b8c600960008f61ffff1661ffff1681526020019081526020016000208d8d3360008f8f6040518a63ffffffff1660e01b815260040161120398979695949392919061299f565b6000604051808303818588803b15801561121c57600080fd5b505af1158015611230573d6000803e3d6000fd5b5050505050505050506112436001600055565b50505050505050565b61128a6040518060400160405280600781526020017f7061757365282900000000000000000000000000000000000000000000000000815250611a69565b610bd5611e30565b6112b3604051806060016040528060258152602001612fd360259139611a69565b8261ffff166000036113075760405162461bcd60e51b815260206004820152601860248201527f436861696e4964206d757374206e6f74206265207a65726f0000000000000000604482015260640161087f565b61131c6113148284612a17565b60601c611bb5565b61ffff83166000908152600960205260408120805461133a906127b2565b80601f0160208091040260200160405190810160405280929190818152602001828054611366906127b2565b80156113b35780601f10611388576101008083540402835291602001916113b3565b820191906000526020600020905b81548152906001019060200180831161139657829003601f168201915b505050505090508282306040516020016113cf93929190612a5f565b60408051601f1981840301815291815261ffff86166000908152600960209081529190208251611404939192909101906120f7565b5061ffff84166000818152600960205260409081902090517fe84e609c32d71c678382f7c65cc051810a41dcaf660e55c9f8fcffeba4621a329161144a91859190612a98565b60405180910390a250505050565b611460611cd8565b61149e6040518060400160405280601b81526020017f657865637574652875696e7431362c62797465732c6279746573290000000000815250611a69565b600034116115145760405162461bcd60e51b815260206004820152602d60248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a2076616c7565206360448201527f616e6e6f74206265207a65726f00000000000000000000000000000000000000606482015260840161087f565b600083900361158b5760405162461bcd60e51b815260206004820152602660248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a20456d707479207060448201527f61796c6f61640000000000000000000000000000000000000000000000000000606482015260840161087f565b61ffff8516600090815260096020526040812080546115a9906127b2565b80601f01602080910402602001604051908101604052809291908181526020018280546115d5906127b2565b80156116225780601f106115f757610100808354040283529160200191611622565b820191906000526020600020905b81548152906001019060200180831161160557829003601f168201915b5050505050905080516000036116c65760405162461bcd60e51b815260206004820152604260248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a2064657374696e6160448201527f74696f6e20636861696e206973206e6f742061207472757374656420736f757260648201527f6365000000000000000000000000000000000000000000000000000000000000608482015260a40161087f565b6117068686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d4392505050565b600060076000815461171790612ac6565b9190508190559050600086868360405160200161173693929190612afe565b60408051601f19818403018152908290527fc5803100000000000000000000000000000000000000000000000000000000008252915073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063c58031009034906117c7908c908890879033906000908e908e90600401612b22565b6000604051808303818588803b1580156117e057600080fd5b505af1935050505080156117f2575060015b6118b0573d808015611820576040519150601f19603f3d011682016040523d82523d6000602084013e611825565b606091505b50888287873460405160200161183f959493929190612b8a565b60408051601f198184030181528282528051602091820120600087815260089092529190205561ffff8a169084907f6d16111647e03d7f1cb2b71c02eafe3355b97dfc17af3de1b94ef39c8a9ee4d9906118a29086908b908b9034908990612bcd565b60405180910390a350610b85565b8761ffff167f95a4fcf4eb9be6f5cf2eb6830782870f8907bccc513f765388a9cb2dae2f325983836040516118e6929190612c19565b60405180910390a25050505050505050565b611919604051806060016040528060268152602001612ff860269139611a69565b6040517fcbed8b9c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000169063cbed8b9c906119939088908890889088908890600401612c32565b600060405180830381600087803b1580156119ad57600080fd5b505af11580156119c1573d6000803e3d6000fd5b505050505050505050565b6119d4611b4e565b73ffffffffffffffffffffffffffffffffffffffff8116611a5d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161087f565b611a6681611e9f565b50565b6002546040517f18c5e8ab00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906318c5e8ab90611ac19033908590600401612c6b565b602060405180830381865afa158015611ade573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b029190612c9a565b611a665760405162461bcd60e51b815260206004820152600d60248201527f6163636573732064656e69656400000000000000000000000000000000000000604482015260640161087f565b60015473ffffffffffffffffffffffffffffffffffffffff163314610bd55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161087f565b73ffffffffffffffffffffffffffffffffffffffff8116611a66576040517f8579befe00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260005403611c545760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161087f565b6002600055565b611c63611f16565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390a1565b60015474010000000000000000000000000000000000000000900460ff1615610bd55760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a2070617573656400000000000000000000000000000000604482015260640161087f565b60008060008084806020019051810190611d5d9190612e6c565b50935093509350935082518451148015611d78575081518451145b8015611d85575080518451145b611e1d5760405162461bcd60e51b815260206004820152604560248201527f4f6d6e69636861696e50726f706f73616c53656e6465723a2070726f706f736160448201527f6c2066756e6374696f6e20696e666f726d6174696f6e206172697479206d697360648201527f6d61746368000000000000000000000000000000000000000000000000000000608482015260a40161087f565b611e28868551611f80565b505050505050565b611e38611cd8565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611cae3390565b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60015474010000000000000000000000000000000000000000900460ff16610bd55760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f7420706175736564000000000000000000000000604482015260640161087f565b61ffff821660009081526005602090815260408083205460048352818420546003845282852054600690945291909320544293929062015180611fc38587612f8b565b1115611fe75761ffff87166000908152600560205260409020859055859250611ff4565b611ff186846128b1565b92505b818311156120445760405162461bcd60e51b815260206004820181905260248201527f4461696c79205472616e73616374696f6e204c696d6974204578636565646564604482015260640161087f565b8481036120935760405162461bcd60e51b815260206004820152601f60248201527f4d756c7469706c65206272696467696e6720696e20612070726f706f73616c00604482015260640161087f565b505061ffff9094166000908152600460209081526040808320969096556006905293909320555050565b5080546120c9906127b2565b6000825580601f106120d9575050565b601f016020900490600052602060002090810190611a66919061217b565b828054612103906127b2565b90600052602060002090601f016020900481019282612125576000855561216b565b82601f1061213e57805160ff191683800117855561216b565b8280016001018555821561216b579182015b8281111561216b578251825591602001919060010190612150565b5061217792915061217b565b5090565b5b80821115612177576000815560010161217c565b803561ffff811681146121a257600080fd5b919050565b6000602082840312156121b957600080fd5b610d5f82612190565b73ffffffffffffffffffffffffffffffffffffffff81168114611a6657600080fd5b6000602082840312156121f657600080fd5b8135610d5f816121c2565b6000806040838503121561221457600080fd5b61221d83612190565b946020939093013593505050565b60008083601f84011261223d57600080fd5b50813567ffffffffffffffff81111561225557600080fd5b60208301915083602082850101111561226d57600080fd5b9250929050565b60008060008060008060008060c0898b03121561229057600080fd5b883561229b816121c2565b9750602089013596506122b060408a01612190565b9550606089013567ffffffffffffffff808211156122cd57600080fd5b6122d98c838d0161222b565b909750955060808b01359150808211156122f257600080fd5b506122ff8b828c0161222b565b999c989b50969995989497949560a00135949350505050565b60008060008060006060868803121561233057600080fd5b61233986612190565b9450602086013567ffffffffffffffff8082111561235657600080fd5b61236289838a0161222b565b9096509450604088013591508082111561237b57600080fd5b506123888882890161222b565b969995985093965092949392505050565b6000806000606084860312156123ae57600080fd5b6123b784612190565b92506123c560208501612190565b9150604084013590509250925092565b60005b838110156123f05781810151838201526020016123d8565b838111156123ff576000848401525b50505050565b6000815180845261241d8160208601602086016123d5565b601f01601f19169290920160200192915050565b602081526000610d5f6020830184612405565b600080600080600080600060a0888a03121561245f57600080fd5b8735965061246f60208901612190565b9550604088013567ffffffffffffffff8082111561248c57600080fd5b6124988b838c0161222b565b909750955060608a01359150808211156124b157600080fd5b506124be8a828b0161222b565b989b979a50959894979596608090950135949350505050565b6000602082840312156124e957600080fd5b5035919050565b60008060006040848603121561250557600080fd5b61250e84612190565b9250602084013567ffffffffffffffff81111561252a57600080fd5b6125368682870161222b565b9497909650939450505050565b60008060008060006080868803121561255b57600080fd5b61256486612190565b945061257260208701612190565b935060408601359250606086013567ffffffffffffffff81111561259557600080fd5b6123888882890161222b565b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b61ffff871681526080602082015260006125ea6080830187896125a1565b82810360408401526125fd8186886125a1565b915050826060830152979650505050505050565b61ffff8816815273ffffffffffffffffffffffffffffffffffffffff8716602082015260a06040820152600061264b60a0830187896125a1565b851515606084015282810360808401526126668185876125a1565b9a9950505050505050505050565b6000806040838503121561268757600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156126f0576126f0612698565b604052919050565b600067ffffffffffffffff82111561271257612712612698565b50601f01601f191660200190565b600061273361272e846126f8565b6126c7565b905082815283838301111561274757600080fd5b610d5f8360208301846123d5565b600082601f83011261276657600080fd5b610d5f83835160208501612720565b60006020828403121561278757600080fd5b815167ffffffffffffffff81111561279e57600080fd5b6127aa84828501612755565b949350505050565b600181811c908216806127c657607f821691505b6020821081036127ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000806040838503121561281857600080fd5b823567ffffffffffffffff81111561282f57600080fd5b8301601f8101851361284057600080fd5b803561284e61272e826126f8565b81815286602083850101111561286357600080fd5b8160208401602083013760006020928201830152969401359450505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156128c4576128c4612882565b500190565b8054600090600181811c90808316806128e357607f831692505b6020808410820361291d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b83885260208801828015612938576001811461296757612992565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00871682528282019750612992565b60008981526020902060005b8781101561298c57815484820152908601908401612973565b83019850505b5050505050505092915050565b61ffff8916815260c0602082015260006129bc60c083018a6128c9565b82810360408401526129cf81898b6125a1565b73ffffffffffffffffffffffffffffffffffffffff88811660608601528716608085015283810360a08501529050612a088185876125a1565b9b9a5050505050505050505050565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008135818116916014851015612a575780818660140360031b1b83161692505b505092915050565b8284823760609190911b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169101908152601401919050565b604081526000612aab6040830185612405565b8281036020840152612abd81856128c9565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612af757612af7612882565b5060010190565b604081526000612b126040830185876125a1565b9050826020830152949350505050565b61ffff8816815260c060208201526000612b3f60c0830189612405565b8281036040840152612b518189612405565b73ffffffffffffffffffffffffffffffffffffffff88811660608601528716608085015283810360a085015290506126668185876125a1565b61ffff86168152608060208201526000612ba76080830187612405565b8281036040840152612bba8186886125a1565b9150508260608301529695505050505050565b608081526000612be06080830188612405565b8281036020840152612bf38187896125a1565b90508460408401528281036060840152612c0d8185612405565b98975050505050505050565b828152604060208201526000610d5c6040830184612405565b600061ffff808816835280871660208401525084604083015260806060830152612c606080830184866125a1565b979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000610d5c6040830184612405565b600060208284031215612cac57600080fd5b81518015158114610d5f57600080fd5b600067ffffffffffffffff821115612cd657612cd6612698565b5060051b60200190565b600082601f830112612cf157600080fd5b81516020612d0161272e83612cbc565b82815260059290921b84018101918181019086841115612d2057600080fd5b8286015b84811015612d3b5780518352918301918301612d24565b509695505050505050565b600082601f830112612d5757600080fd5b81516020612d6761272e83612cbc565b82815260059290921b84018101918181019086841115612d8657600080fd5b8286015b84811015612d3b57805167ffffffffffffffff811115612daa5760008081fd5b8701603f81018913612dbc5760008081fd5b612dcd898683015160408401612720565b845250918301918301612d8a565b600082601f830112612dec57600080fd5b81516020612dfc61272e83612cbc565b82815260059290921b84018101918181019086841115612e1b57600080fd5b8286015b84811015612d3b57805167ffffffffffffffff811115612e3f5760008081fd5b612e4d8986838b0101612755565b845250918301918301612e1f565b805160ff811681146121a257600080fd5b600080600080600060a08688031215612e8457600080fd5b855167ffffffffffffffff80821115612e9c57600080fd5b818801915088601f830112612eb057600080fd5b81516020612ec061272e83612cbc565b82815260059290921b8401810191818101908c841115612edf57600080fd5b948201945b83861015612f06578551612ef7816121c2565b82529482019490820190612ee4565b918b0151919950909350505080821115612f1f57600080fd5b612f2b89838a01612ce0565b95506040880151915080821115612f4157600080fd5b612f4d89838a01612d46565b94506060880151915080821115612f6357600080fd5b50612f7088828901612ddb565b925050612f7f60808701612e5b565b90509295509295909350565b600082821015612f9d57612f9d612882565b50039056fe7265747279457865637574652875696e743235362c75696e7431362c62797465732c62797465732c75696e74323536297365745472757374656452656d6f7465416464726573732875696e7431362c627974657329736574436f6e6669672875696e7431362c75696e7431362c75696e743235362c627974657329a2646970667358221220f937064caf0b6749e8c2dc32f5bf36fd8e3f91293e7965f0579a4fec4118e55164736f6c634300080d0033",
  "devdoc": {
    "author": "Venus",
    "custom:security-contact": "https://github.com/VenusProtocol/governance-contracts#discussion",
    "kind": "dev",
    "methods": {
      "estimateFees(uint16,bytes,bytes)": {
        "details": "The estimated fees are the minimum required; it's recommended to increase the fees amount when sending a message. The unused amount will be refunded",
        "params": {
          "adapterParams_": "The params used to specify the custom amount of gas required for the execution on the destination",
          "payload_": "The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(abi.encode(targets, values, signatures, calldatas), pId)",
          "remoteChainId_": "The LayerZero id of a remote chain"
        },
        "returns": {
          "_0": "nativeFee The amount of fee in the native gas token (e.g. ETH)",
          "_1": "zroFee The amount of fee in ZRO token"
        }
      },
      "execute(uint16,bytes,bytes)": {
        "custom:access": "Controlled by Access Control Manager",
        "custom:event": "Emits ExecuteRemoteProposal with remote chain id and payload on successEmits StorePayload with last stored payload proposal ID ,remote chain id , payload, adapter params , values and reason for failure",
        "details": "Stores the hash of the execution parameters if sending fails (e.g., due to insufficient fees)",
        "params": {
          "adapterParams_": "The params used to specify the custom amount of gas required for the execution on the destination",
          "payload_": "The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(targets, values, signatures, calldatas, proposalType)",
          "remoteChainId_": "The LayerZero id of the remote chain"
        }
      },
      "fallbackWithdraw(address,uint256,uint16,bytes,bytes,uint256)": {
        "custom:access": "Only owner",
        "custom:event": "Emits ClearPayload with proposal ID and hashEmits FallbackWithdraw with receiver and amount",
        "params": {
          "adapterParams_": "The params used to specify the custom amount of gas required for the execution on the destination",
          "originalValue_": "The msg.value passed when execute() function was called",
          "pId_": "The proposal ID to identify a failed message",
          "payload_": "The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(abi.encode(targets, values, signatures, calldatas), pId)",
          "remoteChainId_": "The LayerZero id of the remote chain",
          "to_": "Address of the receiver"
        }
      },
      "getConfig(uint16,uint16,uint256)": {
        "params": {
          "chainId_": "The LayerZero chainId",
          "configType_": "Type of configuration. Every messaging library has its own convention.",
          "version_": "Messaging library version"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "custom:access": "Controlled by AccessControlManager."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeTrustedRemote(uint16)": {
        "custom:access": "Only owner.",
        "custom:event": "Emit TrustedRemoteRemoved with remote chain id.",
        "params": {
          "remoteChainId_": "The chain's id corresponds to setting the trusted remote to empty."
        }
      },
      "retryExecute(uint256,uint16,bytes,bytes,uint256)": {
        "custom:access": "Controlled by Access Control Manager",
        "custom:event": "Emits ClearPayload with proposal ID and hash",
        "details": "Allows providing more fees if needed. The extra fees will be refunded to the caller",
        "params": {
          "adapterParams_": "The params used to specify the custom amount of gas required for the execution on the destination",
          "originalValue_": "The msg.value passed when execute() function was called",
          "pId_": "The proposal ID to identify a failed message",
          "payload_": "The payload to be sent to the remote chain. It's computed as follows: payload = abi.encode(abi.encode(targets, values, signatures, calldatas), pId)",
          "remoteChainId_": "The LayerZero id of the remote chain"
        }
      },
      "setAccessControlManager(address)": {
        "custom:access": "Only owner",
        "custom:event": "Emits NewAccessControlManager with old and new access control manager addresses",
        "params": {
          "accessControlManager_": "The new address of the Access Control Manager."
        }
      },
      "setConfig(uint16,uint16,uint256,bytes)": {
        "custom:access": "Controlled by AccessControlManager.",
        "params": {
          "chainId_": "The LayerZero chainId for the pending config change",
          "configType_": "The type of configuration. Every messaging library has its own convention",
          "config_": "The configuration in bytes. It can encode arbitrary content",
          "version_": "Messaging library version"
        }
      },
      "setMaxDailyLimit(uint16,uint256)": {
        "custom:access": "Controlled by AccessControlManager.",
        "custom:event": "Emits SetMaxDailyLimit with old and new limit and its corresponding chain id",
        "params": {
          "chainId_": "Destination chain ID.",
          "limit_": "Number of commands."
        }
      },
      "setSendVersion(uint16)": {
        "custom:access": "Controlled by AccessControlManager.",
        "params": {
          "version_": "New messaging library version"
        }
      },
      "setTrustedRemoteAddress(uint16,bytes)": {
        "custom:access": "Controlled by AccessControlManager.",
        "custom:event": "Emits SetTrustedRemoteAddress with remote chain Id and remote address",
        "params": {
          "newRemoteAddress_": "The address of the contract on the remote chain to receive messages sent by this contract",
          "remoteChainId_": "The LayerZero id of a remote chain"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "custom:access": "Controlled by AccessControlManager."
      }
    },
    "stateVariables": {
      "storedExecutionHashes": {
        "details": "[proposalId] -> [executionHash]"
      }
    },
    "title": "OmnichainProposalSender",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "ZeroAddressNotAllowed()": [
        {
          "notice": "Thrown if the supplied address is a zero address where it is not allowed"
        }
      ]
    },
    "events": {
      "ClearPayload(uint256,bytes32)": {
        "notice": "Emitted when a previously failed message is successfully sent to the remote chain"
      },
      "ExecuteRemoteProposal(uint16,uint256,bytes)": {
        "notice": "Emitted when a proposal execution request is sent to the remote chain"
      },
      "FallbackWithdraw(address,uint256)": {
        "notice": "Emitted while fallback withdraw"
      },
      "NewAccessControlManager(address,address)": {
        "notice": "Emitted when the address of ACM is updated."
      },
      "SetMaxDailyLimit(uint16,uint256,uint256)": {
        "notice": "Emitted when the maximum daily limit of commands from the local chain is modified."
      },
      "SetTrustedRemoteAddress(uint16,bytes,bytes)": {
        "notice": "Emitted when a remote message receiver is set for the remote chain"
      },
      "StorePayload(uint256,uint16,bytes,bytes,uint256,bytes)": {
        "notice": "Emitted when an execution hash of a failed message is saved"
      },
      "TrustedRemoteRemoved(uint16)": {
        "notice": "Event emitted when trusted remote sets to empty."
      }
    },
    "kind": "user",
    "methods": {
      "LZ_ENDPOINT()": {
        "notice": "LayerZero endpoint for sending messages to remote chains"
      },
      "accessControlManager()": {
        "notice": "ACM (Access Control Manager) contract address."
      },
      "chainIdToLast24HourCommandsSent(uint16)": {
        "notice": "Total commands transferred within the last 24-hour window from the local chain."
      },
      "chainIdToLast24HourWindowStart(uint16)": {
        "notice": "Timestamp when the last 24-hour window started from the local chain."
      },
      "chainIdToLastProposalSentTimestamp(uint16)": {
        "notice": "Timestamp when the last proposal sent from the local chain to dest chain."
      },
      "chainIdToMaxDailyLimit(uint16)": {
        "notice": "Maximum daily limit for commands from the local chain."
      },
      "estimateFees(uint16,bytes,bytes)": {
        "notice": "Estimates LayerZero fees for cross-chain message delivery to the remote chain"
      },
      "execute(uint16,bytes,bytes)": {
        "notice": "Sends a message to execute a remote proposal"
      },
      "fallbackWithdraw(address,uint256,uint16,bytes,bytes,uint256)": {
        "notice": "Clear previously failed message"
      },
      "getConfig(uint16,uint16,uint256)": {
        "notice": "Gets the configuration of the LayerZero messaging library of the specified version"
      },
      "pause()": {
        "notice": "Triggers the paused state of the controller."
      },
      "proposalCount()": {
        "notice": "Stores the total number of remote proposals"
      },
      "removeTrustedRemote(uint16)": {
        "notice": "Remove trusted remote from storage."
      },
      "renounceOwnership()": {
        "notice": "Empty implementation of renounce ownership to avoid any mishap."
      },
      "retryExecute(uint256,uint16,bytes,bytes,uint256)": {
        "notice": "Resends a previously failed message"
      },
      "setAccessControlManager(address)": {
        "notice": "Sets the address of Access Control Manager (ACM)."
      },
      "setConfig(uint16,uint16,uint256,bytes)": {
        "notice": "Sets the configuration of the LayerZero messaging library of the specified version"
      },
      "setMaxDailyLimit(uint16,uint256)": {
        "notice": "Sets the limit of daily (24 Hour) command amount."
      },
      "setSendVersion(uint16)": {
        "notice": "Sets the configuration of the LayerZero messaging library of the specified version"
      },
      "setTrustedRemoteAddress(uint16,bytes)": {
        "notice": "Sets the remote message receiver address"
      },
      "storedExecutionHashes(uint256)": {
        "notice": "Execution hashes of failed messages"
      },
      "trustedRemoteLookup(uint16)": {
        "notice": "Specifies the allowed path for sending messages (remote chainId => remote app address + local app address)"
      },
      "unpause()": {
        "notice": "Triggers the resume state of the controller."
      }
    },
    "notice": "OmnichainProposalSender contract builds upon the functionality of its parent contract , BaseOmnichainControllerSrc It sends a proposal's data to remote chains for execution after the proposal passes on the main chain when used with GovernorBravo, the owner of this contract must be set to the Timelock contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1707,
        "contract": "contracts/Cross-chain/OmnichainProposalSender.sol:OmnichainProposalSender",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1483,
        "contract": "contracts/Cross-chain/OmnichainProposalSender.sol:OmnichainProposalSender",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1606,
        "contract": "contracts/Cross-chain/OmnichainProposalSender.sol:OmnichainProposalSender",
        "label": "_paused",
        "offset": 20,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 1958,
        "contract": "contracts/Cross-chain/OmnichainProposalSender.sol:OmnichainProposalSender",
        "label": "accessControlManager",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 1963,
        "contract": "contracts/Cross-chain/OmnichainProposalSender.sol:OmnichainProposalSender",
        "label": "chainIdToMaxDailyLimit",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint16,t_uint256)"
      },
      {
        "astId": 1968,
        "contract": "contracts/Cross-chain/OmnichainProposalSender.sol:OmnichainProposalSender",
        "label": "chainIdToLast24HourCommandsSent",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint16,t_uint256)"
      },
      {
        "astId": 1973,
        "contract": "contracts/Cross-chain/OmnichainProposalSender.sol:OmnichainProposalSender",
        "label": "chainIdToLast24HourWindowStart",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint16,t_uint256)"
      },
      {
        "astId": 1978,
        "contract": "contracts/Cross-chain/OmnichainProposalSender.sol:OmnichainProposalSender",
        "label": "chainIdToLastProposalSentTimestamp",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint16,t_uint256)"
      },
      {
        "astId": 3082,
        "contract": "contracts/Cross-chain/OmnichainProposalSender.sol:OmnichainProposalSender",
        "label": "proposalCount",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 3087,
        "contract": "contracts/Cross-chain/OmnichainProposalSender.sol:OmnichainProposalSender",
        "label": "storedExecutionHashes",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_uint256,t_bytes32)"
      },
      {
        "astId": 3096,
        "contract": "contracts/Cross-chain/OmnichainProposalSender.sol:OmnichainProposalSender",
        "label": "trustedRemoteLookup",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint16,t_bytes_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint16,t_bytes_storage)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => bytes)",
        "numberOfBytes": "32",
        "value": "t_bytes_storage"
      },
      "t_mapping(t_uint16,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint16",
        "label": "mapping(uint16 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_bytes32)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes32)",
        "numberOfBytes": "32",
        "value": "t_bytes32"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
